%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: front.eps
%%Creator: Adobe Illustrator(R) 13.0
%%For: Tom
%%CreationDate: 4/19/2008
%%BoundingBox: 0 0 510 178
%%HiResBoundingBox: 0 0 509.3218 177.5362
%%CropBox: 0 0 509.3218 177.5362
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 13.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 13.0.0 x406 R agm 4.4378 ct 5.1039%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 73 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page 1) 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.1-c036 46.277092, Fri Feb 23 2007 14:17:08        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS3</xap:CreatorTool>
         <xap:CreateDate>2008-04-19T13:22:19-04:00</xap:CreateDate>
         <xap:ModifyDate>2008-04-19T13:22:19-04:00</xap:ModifyDate>
         <xap:MetadataDate>2008-04-19T13:22:19-04:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>92</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAXAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8Amn5hfmDcXvljWvJHm2O8&#xA;0HzY5U2TaPBNdx3sCyCRZLehT4GCcZFd1p96hVKvyi/PcWPldbC90XUb3QdBRYbvzDGRcyxiQu6v&#xA;c24+KOOgIUhmoBTfFXonmL814tBv4LnV4SPI+tWscmjeZLFZZisskfL05o1DMpkBrEVH8eKrzry5&#xA;+e5tPNx0TRvKU920sMaXFvCgs7qT6qkkjTx2r8y8kkb8uJblxA3PXCtPRb7822n8u2/mny5p0mp6&#xA;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&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq/wD/2Q==</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:CAFAF8922E0EDD11A112D5520CB59D8B</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:CBFAF8922E0EDD11A112D5520CB59D8B</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:C9FAF8922E0EDD11A112D5520CB59D8B</stRef:instanceID>
            <stRef:documentID>uuid:C7FAF8922E0EDD11A112D5520CB59D8B</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xapG="http://ns.adobe.com/xap/1.0/g/">
         <xapTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>612.000000</stDim:w>
            <stDim:h>792.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xapTPg:MaxPageSize>
         <xapTPg:NPages>1</xapTPg:NPages>
         <xapTPg:HasVisibleTransparency>False</xapTPg:HasVisibleTransparency>
         <xapTPg:HasVisibleOverprint>False</xapTPg:HasVisibleOverprint>
         <xapTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xapTPg:PlateNames>
         <xapTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Default Swatch Group</xapG:groupName>
                  <xapG:groupType>0</xapG:groupType>
                  <xapG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RealBlack</xapG:swatchName>
                           <xapG:type>SPOT</xapG:type>
                           <xapG:tint>100.000000</xapG:tint>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:cyan>100.000000</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>100.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RealBlack</xapG:swatchName>
                           <xapG:type>SPOT</xapG:type>
                           <xapG:tint>0.000000</xapG:tint>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:cyan>100.000000</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>100.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Black</xapG:swatchName>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:tint>100.000000</xapG:tint>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>100.000000</xapG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xapG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xapTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -177.536 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 177.536 li
509.322 177.536 li
509.322 0 li
cp
clp
[1 0 0 1 0 0 ]ct
19.4248 4.37402 mo
19.4248 6.51416 17.6899 8.24854 15.5508 8.24854 cv
13.4111 8.24854 11.6772 6.51416 11.6772 4.37402 cv
11.6772 2.23438 13.4111 .5 15.5508 .5 cv
17.6899 .5 19.4248 2.23438 19.4248 4.37402 cv
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 1 cmyk
f
17.8066 24.9751 mo
15.2705 13.71 li
15.2734 13.7266 li
8.99365 16.0317 li
8.81104 16.0991 8.62012 16.1323 8.43164 16.1323 cv
8.43164 16.1323 li
8.00391 16.1323 7.58545 15.9648 7.27197 15.6514 cv
7.27197 15.6514 li
.47998 8.85986 li
-.160156 8.22021 -.160156 7.18457 .47998 6.54492 cv
.47998 6.54492 li
1.11768 5.90527 2.15625 5.90527 2.79492 6.54492 cv
2.79492 6.54492 li
8.84619 12.5986 li
14.3315 10.5864 li
21.3618 7.63184 li
21.75 7.4873 22.0571 7.58643 22.3931 7.73926 cv
22.3931 7.73926 li
32.105 12.1592 li
32.5098 12.3423 32.8193 12.6787 32.9673 13.0967 cv
32.9673 13.0967 li
36.3984 22.6621 li
36.3984 22.6621 li
36.7031 23.5142 36.2627 24.4502 35.4106 24.7549 cv
35.4106 24.7549 li
35.228 24.8218 35.0415 24.8521 34.8574 24.8521 cv
34.8574 24.8521 li
34.1855 24.8521 33.5566 24.4351 33.3169 23.7671 cv
33.3169 23.7671 li
30.1191 14.8525 li
22.4663 11.3706 li
26.627 25.4893 li
29.5337 35.0381 li
41.6416 35.7412 li
42.7256 35.8042 43.5518 36.7324 43.4878 37.8174 cv
43.4878 37.8174 li
43.4258 38.9014 42.4966 39.7275 41.415 39.6631 cv
41.415 39.6631 li
27.9585 38.8809 li
27.9585 38.8809 li
27.1489 38.833 26.4482 38.2905 26.2031 37.5161 cv
26.2031 37.5161 li
22.6128 26.25 li
21.8105 26.3813 li
21.8105 26.3813 li
14.2739 34.8916 li
14.8462 47.9658 li
14.8945 49.0518 14.0532 49.9668 12.9712 50.0156 cv
12.9712 50.0156 li
12.9419 50.0166 12.9131 50.0195 12.8833 50.0195 cv
12.8833 50.0195 li
11.8379 50.0195 10.9668 49.1934 10.9224 48.1367 cv
10.9224 48.1367 li
10.3135 34.2505 li
10.29 33.7324 10.4785 33.2183 10.8286 32.8364 cv
10.8286 32.8364 li
17.8066 24.9751 li
cp
f
1 lw
0 lc
0 lj
4 ml
[] 0 dsh
true sadj
36.5806 46.8799 mo
36.5806 49.0186 34.8462 50.7539 32.7075 50.7539 cv
30.5669 50.7539 28.8325 49.0186 28.8325 46.8799 cv
28.8325 44.7402 30.5669 43.0068 32.7075 43.0068 cv
34.8462 43.0068 36.5806 44.7402 36.5806 46.8799 cv
cp
@
34.9624 67.4805 mo
32.4263 56.2158 li
32.4302 56.2324 li
26.1499 58.5381 li
25.9668 58.6055 25.7764 58.6377 25.5879 58.6377 cv
25.5879 58.6377 li
25.1606 58.6377 24.7402 58.4707 24.4282 58.1582 cv
24.4282 58.1582 li
17.6357 51.3662 li
16.9961 50.7266 16.9961 49.6895 17.6357 49.0508 cv
17.6357 49.0508 li
18.2739 48.4102 19.311 48.4102 19.9507 49.0508 cv
19.9507 49.0508 li
26.0024 55.1035 li
31.4878 53.0928 li
38.5176 50.1377 li
38.9058 49.9941 39.2124 50.0938 39.5493 50.2461 cv
39.5493 50.2461 li
49.2603 54.6641 li
49.6655 54.8496 49.9761 55.1855 50.123 55.6025 cv
50.123 55.6025 li
53.5552 65.168 li
53.5552 65.168 li
53.8594 66.0195 53.4189 66.9561 52.5669 67.2598 cv
52.5669 67.2598 li
52.3848 67.3262 52.1982 67.3574 52.0132 67.3574 cv
52.0132 67.3574 li
51.3423 67.3574 50.7124 66.9414 50.4717 66.2734 cv
50.4717 66.2734 li
47.2754 57.3574 li
39.623 53.876 li
43.7832 67.9951 li
46.6895 77.5449 li
58.7983 78.248 li
59.8813 78.3105 60.708 79.2383 60.6445 80.3223 cv
60.6445 80.3223 li
60.5825 81.4063 59.6528 82.2324 58.5713 82.168 cv
58.5713 82.168 li
45.1147 81.3867 li
45.1147 81.3867 li
44.3047 81.3398 43.6035 80.7969 43.3594 80.0215 cv
43.3594 80.0215 li
39.7681 68.7559 li
38.9673 68.8877 li
38.9673 68.8877 li
31.4307 77.3965 li
32.0024 90.4717 li
32.0508 91.5576 31.21 92.4727 30.127 92.5215 cv
30.127 92.5215 li
30.0977 92.5234 30.0688 92.5234 30.0405 92.5234 cv
30.0405 92.5234 li
28.9937 92.5234 28.124 91.6982 28.0786 90.6436 cv
28.0786 90.6436 li
27.4692 76.7559 li
27.4473 76.2383 27.6343 75.7246 27.9839 75.3428 cv
27.9839 75.3428 li
34.9624 67.4805 li
cp
f
54.2485 89.3867 mo
54.2485 91.5244 52.5132 93.2598 50.375 93.2598 cv
48.2354 93.2598 46.501 91.5244 46.501 89.3867 cv
46.501 87.2471 48.2354 85.5117 50.375 85.5117 cv
52.5132 85.5117 54.2485 87.2471 54.2485 89.3867 cv
cp
f
52.6299 109.986 mo
50.0942 98.7227 li
50.0972 98.7373 li
43.8188 101.043 li
43.6343 101.111 43.4443 101.145 43.2559 101.145 cv
43.2559 101.145 li
42.8276 101.145 42.4072 100.977 42.0952 100.663 cv
42.0952 100.663 li
35.3037 93.8721 li
34.6646 93.2324 34.6646 92.1953 35.3037 91.5547 cv
35.3037 91.5547 li
35.9419 90.918 36.9795 90.918 37.6187 91.5547 cv
37.6187 91.5547 li
43.6704 97.6094 li
49.1548 95.5986 li
56.1855 92.6426 li
56.5742 92.5 56.8813 92.5986 57.2178 92.752 cv
57.2178 92.752 li
66.9287 97.1699 li
67.3335 97.3545 67.6436 97.6914 67.792 98.1074 cv
67.792 98.1074 li
71.2227 107.674 li
71.2227 107.674 li
71.5273 108.525 71.0859 109.461 70.2344 109.766 cv
70.2344 109.766 li
70.0537 109.832 69.8657 109.864 69.6826 109.864 cv
69.6826 109.864 li
69.0103 109.864 68.3804 109.447 68.1411 108.779 cv
68.1411 108.779 li
64.9438 99.8643 li
57.2905 96.3828 li
61.4507 110.502 li
64.3574 120.051 li
76.4668 120.753 li
77.5488 120.816 78.3765 121.744 78.3115 122.829 cv
78.3115 122.829 li
78.2505 123.912 77.3198 124.739 76.2393 124.674 cv
76.2393 124.674 li
62.7832 123.893 li
62.7832 123.893 li
61.9736 123.846 61.272 123.303 61.0264 122.527 cv
61.0264 122.527 li
57.437 111.262 li
56.6353 111.393 li
56.6353 111.393 li
49.0986 119.902 li
49.6719 132.978 li
49.7188 134.064 48.8784 134.979 47.7949 135.027 cv
47.7949 135.027 li
47.7656 135.029 47.7363 135.029 47.7085 135.029 cv
47.7085 135.029 li
46.6616 135.029 45.792 134.204 45.7461 133.149 cv
45.7461 133.149 li
45.1382 119.262 li
45.1147 118.744 45.3027 118.23 45.6523 117.848 cv
45.6523 117.848 li
52.6299 109.986 li
cp
f
71.4043 131.892 mo
71.4043 134.031 69.6699 135.766 67.5313 135.766 cv
65.3916 135.766 63.6572 134.031 63.6572 131.892 cv
63.6572 129.752 65.3916 128.019 67.5313 128.019 cv
69.6699 128.019 71.4043 129.752 71.4043 131.892 cv
cp
@
69.7861 152.492 mo
67.25 141.228 li
67.2534 141.244 li
60.9751 143.55 li
60.7905 143.617 60.6001 143.65 60.4121 143.65 cv
60.4121 143.65 li
59.9839 143.65 59.564 143.482 59.252 143.168 cv
59.252 143.168 li
52.4604 136.379 li
51.8208 135.738 51.8208 134.701 52.4604 134.063 cv
52.4604 134.063 li
53.0977 133.424 54.1357 133.424 54.7744 134.063 cv
54.7744 134.063 li
60.8262 140.115 li
66.3115 138.104 li
73.3413 135.148 li
73.73 135.006 74.0376 135.105 74.3726 135.258 cv
74.3726 135.258 li
84.085 139.676 li
84.4897 139.861 84.8003 140.196 84.9473 140.614 cv
84.9473 140.614 li
88.3784 150.18 li
88.3784 150.18 li
88.6831 151.031 88.2422 151.967 87.3901 152.272 cv
87.3901 152.272 li
87.209 152.338 87.0225 152.369 86.8384 152.369 cv
86.8384 152.369 li
86.166 152.369 85.5366 151.953 85.2969 151.283 cv
85.2969 151.283 li
82.0991 142.371 li
74.4463 138.889 li
78.6064 153.008 li
81.5137 162.555 li
93.623 163.259 li
94.7056 163.322 95.5317 164.25 95.4683 165.334 cv
95.4683 165.334 li
95.4058 166.418 94.4761 167.245 93.3945 167.18 cv
93.3945 167.18 li
79.939 166.398 li
79.939 166.398 li
79.1289 166.352 78.4292 165.808 78.1826 165.033 cv
78.1826 165.033 li
74.5933 153.768 li
73.7905 153.897 li
73.7905 153.897 li
66.2544 162.409 li
66.8271 175.484 li
66.8745 176.57 66.0337 177.485 64.9507 177.533 cv
64.9507 177.533 li
64.9219 177.533 64.894 177.536 64.8643 177.536 cv
64.8643 177.536 li
63.8179 177.536 62.9487 176.711 62.9023 175.656 cv
62.9023 175.656 li
62.293 161.768 li
62.2705 161.251 62.459 160.735 62.8091 160.354 cv
62.8091 160.354 li
69.7861 152.492 li
cp
f
55.2729 4.37402 mo
55.2729 6.51416 53.5381 8.24854 51.3989 8.24854 cv
49.2598 8.24854 47.5254 6.51416 47.5254 4.37402 cv
47.5254 2.23438 49.2598 .5 51.3989 .5 cv
53.5381 .5 55.2729 2.23438 55.2729 4.37402 cv
cp
@
53.6548 24.9751 mo
51.1182 13.71 li
51.1221 13.7266 li
44.8418 16.0317 li
44.6587 16.0991 44.4688 16.1323 44.2803 16.1323 cv
44.2803 16.1323 li
43.8521 16.1323 43.4336 15.9648 43.1201 15.6514 cv
43.1201 15.6514 li
36.3281 8.85986 li
35.6885 8.22021 35.6885 7.18457 36.3281 6.54492 cv
36.3281 6.54492 li
36.9653 5.90527 38.0039 5.90527 38.6426 6.54492 cv
38.6426 6.54492 li
44.6943 12.5986 li
50.1802 10.5864 li
57.21 7.63184 li
57.5981 7.4873 57.9053 7.58643 58.2407 7.73926 cv
58.2407 7.73926 li
67.9531 12.1592 li
68.3574 12.3423 68.6685 12.6787 68.8159 13.0967 cv
68.8159 13.0967 li
72.2471 22.6621 li
72.2471 22.6621 li
72.5518 23.5142 72.1104 24.4502 71.2583 24.7549 cv
71.2583 24.7549 li
71.0771 24.8218 70.8906 24.8521 70.7056 24.8521 cv
70.7056 24.8521 li
70.0347 24.8521 69.4048 24.4351 69.1655 23.7671 cv
69.1655 23.7671 li
65.9688 14.8525 li
58.314 11.3706 li
62.4746 25.4893 li
65.3823 35.0381 li
77.4902 35.7412 li
78.5732 35.8042 79.3994 36.7324 79.3354 37.8174 cv
79.3354 37.8174 li
79.2744 38.9014 78.3452 39.7275 77.2632 39.6631 cv
77.2632 39.6631 li
63.8071 38.8809 li
63.8071 38.8809 li
62.9976 38.833 62.2964 38.2905 62.0503 37.5161 cv
62.0503 37.5161 li
58.4614 26.25 li
57.6592 26.3813 li
57.6592 26.3813 li
50.123 34.8916 li
50.6953 47.9658 li
50.7432 49.0518 49.9028 49.9668 48.8193 50.0156 cv
48.8193 50.0156 li
48.79 50.0166 48.7622 50.0195 48.7329 50.0195 cv
48.7329 50.0195 li
47.6865 50.0195 46.8164 49.1934 46.7705 48.1367 cv
46.7705 48.1367 li
46.1621 34.2505 li
46.1382 33.7324 46.3271 33.2183 46.6772 32.8364 cv
46.6772 32.8364 li
53.6548 24.9751 li
cp
f
72.4292 46.8799 mo
72.4292 49.0186 70.6943 50.7539 68.5547 50.7539 cv
66.415 50.7539 64.6812 49.0186 64.6812 46.8799 cv
64.6812 44.7402 66.415 43.0068 68.5547 43.0068 cv
70.6943 43.0068 72.4292 44.7402 72.4292 46.8799 cv
cp
@
70.811 67.4805 mo
68.2739 56.2158 li
68.2778 56.2324 li
61.999 58.5381 li
61.8154 58.6055 61.6255 58.6377 61.436 58.6377 cv
61.436 58.6377 li
61.0083 58.6377 60.5884 58.4707 60.2764 58.1582 cv
60.2764 58.1582 li
53.4844 51.3662 li
52.8447 50.7266 52.8447 49.6895 53.4844 49.0508 cv
53.4844 49.0508 li
54.1221 48.4102 55.1597 48.4102 55.7993 49.0508 cv
55.7993 49.0508 li
61.8506 55.1035 li
67.3359 53.0928 li
74.3662 50.1377 li
74.7544 49.9941 75.0615 50.0938 75.397 50.2461 cv
75.397 50.2461 li
85.1084 54.6641 li
85.5142 54.8496 85.8242 55.1855 85.9712 55.6025 cv
85.9712 55.6025 li
89.4033 65.168 li
89.4033 65.168 li
89.707 66.0195 89.2666 66.9561 88.4146 67.2598 cv
88.4146 67.2598 li
88.2334 67.3262 88.0459 67.3574 87.8618 67.3574 cv
87.8618 67.3574 li
87.1904 67.3574 86.561 66.9414 86.3203 66.2734 cv
86.3203 66.2734 li
83.1235 57.3574 li
75.4707 53.876 li
79.6313 67.9951 li
82.5381 77.5449 li
94.647 78.248 li
95.73 78.3105 96.5562 79.2383 96.4917 80.3223 cv
96.4917 80.3223 li
96.4316 81.4063 95.5005 82.2324 94.4189 82.168 cv
94.4189 82.168 li
80.9634 81.3867 li
80.9634 81.3867 li
80.1538 81.3398 79.4526 80.7969 79.207 80.0215 cv
79.207 80.0215 li
75.6167 68.7559 li
74.8154 68.8877 li
74.8154 68.8877 li
67.2788 77.3965 li
67.8521 90.4717 li
67.8989 91.5576 67.0586 92.4727 65.9751 92.5215 cv
65.9751 92.5215 li
65.9463 92.5234 65.9175 92.5234 65.8892 92.5234 cv
65.8892 92.5234 li
64.8423 92.5234 63.9722 91.6982 63.9272 90.6436 cv
63.9272 90.6436 li
63.3188 76.7559 li
63.2944 76.2383 63.4824 75.7246 63.832 75.3428 cv
63.832 75.3428 li
70.811 67.4805 li
cp
f
90.0972 89.3867 mo
90.0972 91.5244 88.3623 93.2598 86.2241 93.2598 cv
84.0835 93.2598 82.3496 91.5244 82.3496 89.3867 cv
82.3496 87.2471 84.0835 85.5117 86.2241 85.5117 cv
88.3623 85.5117 90.0972 87.2471 90.0972 89.3867 cv
cp
@
88.479 109.986 mo
85.9434 98.7227 li
85.9458 98.7373 li
79.6665 101.043 li
79.4829 101.111 79.2925 101.145 79.104 101.145 cv
79.104 101.145 li
78.6768 101.145 78.2568 100.977 77.9438 100.663 cv
77.9438 100.663 li
71.1523 93.8721 li
70.5122 93.2324 70.5122 92.1953 71.1523 91.5547 cv
71.1523 91.5547 li
71.79 90.918 72.8276 90.918 73.4673 91.5547 cv
73.4673 91.5547 li
79.5186 97.6094 li
85.0039 95.5986 li
92.0352 92.6426 li
92.4229 92.5 92.729 92.5986 93.0659 92.752 cv
93.0659 92.752 li
102.776 97.1699 li
103.183 97.3545 103.492 97.6914 103.639 98.1074 cv
103.639 98.1074 li
107.071 107.674 li
107.071 107.674 li
107.375 108.525 106.935 109.461 106.083 109.766 cv
106.083 109.766 li
105.902 109.832 105.714 109.864 105.53 109.864 cv
105.53 109.864 li
104.858 109.864 104.229 109.447 103.989 108.779 cv
103.989 108.779 li
100.792 99.8643 li
93.1396 96.3828 li
97.2993 110.502 li
100.206 120.051 li
112.315 120.753 li
113.398 120.816 114.225 121.744 114.16 122.829 cv
114.16 122.829 li
114.1 123.912 113.169 124.739 112.087 124.674 cv
112.087 124.674 li
98.6313 123.893 li
98.6313 123.893 li
97.8213 123.846 97.1196 123.303 96.876 122.527 cv
96.876 122.527 li
93.2847 111.262 li
92.4834 111.393 li
92.4834 111.393 li
84.9468 119.902 li
85.5195 132.978 li
85.5669 134.064 84.7271 134.979 83.6431 135.027 cv
83.6431 135.027 li
83.6143 135.029 83.585 135.029 83.5571 135.029 cv
83.5571 135.029 li
82.5103 135.029 81.6401 134.204 81.5947 133.149 cv
81.5947 133.149 li
80.9863 119.262 li
80.9634 118.744 81.1504 118.23 81.5005 117.848 cv
81.5005 117.848 li
88.479 109.986 li
cp
f
107.252 131.892 mo
107.252 134.031 105.518 135.766 103.379 135.766 cv
101.24 135.766 99.5054 134.031 99.5054 131.892 cv
99.5054 129.752 101.24 128.019 103.379 128.019 cv
105.518 128.019 107.252 129.752 107.252 131.892 cv
cp
f
105.634 152.492 mo
103.099 141.228 li
103.102 141.244 li
96.8232 143.55 li
96.6392 143.617 96.4482 143.65 96.2603 143.65 cv
96.2603 143.65 li
95.833 143.65 95.4136 143.482 95.1006 143.168 cv
95.1006 143.168 li
88.3081 136.379 li
87.6685 135.738 87.6685 134.701 88.3081 134.063 cv
88.3081 134.063 li
88.9453 133.424 89.9834 133.424 90.6226 134.063 cv
90.6226 134.063 li
96.6753 140.115 li
102.16 138.104 li
109.19 135.148 li
109.58 135.006 109.886 135.105 110.221 135.258 cv
110.221 135.258 li
119.933 139.676 li
120.337 139.861 120.648 140.196 120.796 140.614 cv
120.796 140.614 li
124.227 150.18 li
124.227 150.18 li
124.532 151.031 124.09 151.967 123.239 152.272 cv
123.239 152.272 li
123.057 152.338 122.87 152.369 122.686 152.369 cv
122.686 152.369 li
122.015 152.369 121.385 151.953 121.145 151.283 cv
121.145 151.283 li
117.948 142.371 li
110.295 138.889 li
114.455 153.008 li
117.362 162.555 li
129.47 163.259 li
130.554 163.322 131.38 164.25 131.317 165.334 cv
131.317 165.334 li
131.254 166.418 130.325 167.245 129.243 167.18 cv
129.243 167.18 li
115.787 166.398 li
115.787 166.398 li
114.978 166.352 114.276 165.808 114.031 165.033 cv
114.031 165.033 li
110.441 153.768 li
109.639 153.897 li
109.639 153.897 li
102.103 162.409 li
102.675 175.484 li
102.723 176.57 101.882 177.485 100.799 177.533 cv
100.799 177.533 li
100.77 177.533 100.741 177.536 100.712 177.536 cv
100.712 177.536 li
99.666 177.536 98.7964 176.711 98.7505 175.656 cv
98.7505 175.656 li
98.1411 161.768 li
98.1196 161.251 98.3066 160.735 98.6567 160.354 cv
98.6567 160.354 li
105.634 152.492 li
cp
f
91.1216 4.37402 mo
91.1216 6.51416 89.3867 8.24854 87.2476 8.24854 cv
85.1079 8.24854 83.374 6.51416 83.374 4.37402 cv
83.374 2.23438 85.1079 .5 87.2476 .5 cv
89.3867 .5 91.1216 2.23438 91.1216 4.37402 cv
cp
@
89.5029 24.9751 mo
86.9663 13.71 li
86.9712 13.7266 li
80.6909 16.0317 li
80.5073 16.0991 80.3169 16.1323 80.1284 16.1323 cv
80.1284 16.1323 li
79.7007 16.1323 79.2808 15.9648 78.9688 15.6514 cv
78.9688 15.6514 li
72.1763 8.85986 li
71.5366 8.22021 71.5366 7.18457 72.1763 6.54492 cv
72.1763 6.54492 li
72.8145 5.90527 73.8525 5.90527 74.4912 6.54492 cv
74.4912 6.54492 li
80.543 12.5986 li
86.0283 10.5864 li
93.0576 7.63184 li
93.4463 7.4873 93.7544 7.58643 94.0894 7.73926 cv
94.0894 7.73926 li
103.801 12.1592 li
104.207 12.3423 104.517 12.6787 104.664 13.0967 cv
104.664 13.0967 li
108.095 22.6621 li
108.095 22.6621 li
108.4 23.5142 107.959 24.4502 107.107 24.7549 cv
107.107 24.7549 li
106.925 24.8218 106.739 24.8521 106.554 24.8521 cv
106.554 24.8521 li
105.883 24.8521 105.252 24.4351 105.013 23.7671 cv
105.013 23.7671 li
101.817 14.8525 li
94.1636 11.3706 li
98.3237 25.4893 li
101.231 35.0381 li
113.338 35.7412 li
114.422 35.8042 115.248 36.7324 115.185 37.8174 cv
115.185 37.8174 li
115.123 38.9014 114.193 39.7275 113.111 39.6631 cv
113.111 39.6631 li
99.6548 38.8809 li
99.6548 38.8809 li
98.8457 38.833 98.145 38.2905 97.8994 37.5161 cv
97.8994 37.5161 li
94.3096 26.25 li
93.5073 26.3813 li
93.5073 26.3813 li
85.9707 34.8916 li
86.5439 47.9658 li
86.5913 49.0518 85.75 49.9668 84.6675 50.0156 cv
84.6675 50.0156 li
84.6377 50.0166 84.6104 50.0195 84.5806 50.0195 cv
84.5806 50.0195 li
83.5342 50.0195 82.6641 49.1934 82.6187 48.1367 cv
82.6187 48.1367 li
82.0107 34.2505 li
81.9873 33.7324 82.1753 33.2183 82.5254 32.8364 cv
82.5254 32.8364 li
89.5029 24.9751 li
cp
f
108.277 46.8799 mo
108.277 49.0186 106.542 50.7539 104.404 50.7539 cv
102.264 50.7539 100.53 49.0186 100.53 46.8799 cv
100.53 44.7402 102.264 43.0068 104.404 43.0068 cv
106.542 43.0068 108.277 44.7402 108.277 46.8799 cv
cp
f
106.659 67.4805 mo
104.123 56.2158 li
104.126 56.2324 li
97.8462 58.5381 li
97.6631 58.6055 97.4731 58.6377 97.2842 58.6377 cv
97.2842 58.6377 li
96.8564 58.6377 96.437 58.4707 96.1245 58.1582 cv
96.1245 58.1582 li
89.3325 51.3662 li
88.6929 50.7266 88.6929 49.6895 89.3325 49.0508 cv
89.3325 49.0508 li
89.9702 48.4102 91.0083 48.4102 91.6475 49.0508 cv
91.6475 49.0508 li
97.6997 55.1035 li
103.184 53.0928 li
110.214 50.1377 li
110.603 49.9941 110.91 50.0938 111.246 50.2461 cv
111.246 50.2461 li
120.957 54.6641 li
121.362 54.8496 121.672 55.1855 121.82 55.6025 cv
121.82 55.6025 li
125.251 65.168 li
125.251 65.168 li
125.556 66.0195 125.115 66.9561 124.264 67.2598 cv
124.264 67.2598 li
124.081 67.3262 123.895 67.3574 123.71 67.3574 cv
123.71 67.3574 li
123.039 67.3574 122.409 66.9414 122.168 66.2734 cv
122.168 66.2734 li
118.973 57.3574 li
111.319 53.876 li
115.48 67.9951 li
118.386 77.5449 li
130.495 78.248 li
131.578 78.3105 132.404 79.2383 132.34 80.3223 cv
132.34 80.3223 li
132.279 81.4063 131.35 82.2324 130.268 82.168 cv
130.268 82.168 li
116.812 81.3867 li
116.812 81.3867 li
116.002 81.3398 115.301 80.7969 115.055 80.0215 cv
115.055 80.0215 li
111.464 68.7559 li
110.663 68.8877 li
110.663 68.8877 li
103.126 77.3965 li
103.699 90.4717 li
103.748 91.5576 102.906 92.4727 101.824 92.5215 cv
101.824 92.5215 li
101.794 92.5234 101.765 92.5234 101.737 92.5234 cv
101.737 92.5234 li
100.691 92.5234 99.8193 91.6982 99.7749 90.6436 cv
99.7749 90.6436 li
99.166 76.7559 li
99.1431 76.2383 99.3315 75.7246 99.6812 75.3428 cv
99.6812 75.3428 li
106.659 67.4805 li
cp
f
125.945 89.3867 mo
125.945 91.5244 124.21 93.2598 122.071 93.2598 cv
119.932 93.2598 118.198 91.5244 118.198 89.3867 cv
118.198 87.2471 119.932 85.5117 122.071 85.5117 cv
124.21 85.5117 125.945 87.2471 125.945 89.3867 cv
cp
f
124.327 109.986 mo
121.791 98.7227 li
121.794 98.7373 li
115.516 101.043 li
115.333 101.111 115.142 101.145 114.953 101.145 cv
114.953 101.145 li
114.524 101.145 114.105 100.977 113.792 100.663 cv
113.792 100.663 li
107 93.8721 li
106.361 93.2324 106.361 92.1953 107 91.5547 cv
107 91.5547 li
107.638 90.918 108.676 90.918 109.315 91.5547 cv
109.315 91.5547 li
115.367 97.6094 li
120.852 95.5986 li
127.883 92.6426 li
128.271 92.5 128.578 92.5986 128.913 92.752 cv
128.913 92.752 li
138.625 97.1699 li
139.031 97.3545 139.341 97.6914 139.488 98.1074 cv
139.488 98.1074 li
142.919 107.674 li
142.919 107.674 li
143.223 108.525 142.783 109.461 141.931 109.766 cv
141.931 109.766 li
141.75 109.832 141.562 109.864 141.378 109.864 cv
141.378 109.864 li
140.707 109.864 140.078 109.447 139.837 108.779 cv
139.837 108.779 li
136.641 99.8643 li
128.987 96.3828 li
133.148 110.502 li
136.054 120.051 li
148.164 120.753 li
149.246 120.816 150.072 121.744 150.007 122.829 cv
150.007 122.829 li
149.948 123.912 149.017 124.739 147.935 124.674 cv
147.935 124.674 li
134.479 123.893 li
134.479 123.893 li
133.67 123.846 132.969 123.303 132.724 122.527 cv
132.724 122.527 li
129.133 111.262 li
128.332 111.393 li
128.332 111.393 li
120.795 119.902 li
121.368 132.978 li
121.416 134.064 120.575 134.979 119.492 135.027 cv
119.492 135.027 li
119.462 135.029 119.434 135.029 119.405 135.029 cv
119.405 135.029 li
118.358 135.029 117.489 134.204 117.443 133.149 cv
117.443 133.149 li
116.835 119.262 li
116.812 118.744 116.999 118.23 117.349 117.848 cv
117.349 117.848 li
124.327 109.986 li
cp
f
143.101 131.892 mo
143.101 134.031 141.367 135.766 139.228 135.766 cv
137.088 135.766 135.354 134.031 135.354 131.892 cv
135.354 129.752 137.088 128.019 139.228 128.019 cv
141.367 128.019 143.101 129.752 143.101 131.892 cv
cp
f
141.483 152.492 mo
138.947 141.228 li
138.951 141.244 li
132.671 143.55 li
132.487 143.617 132.297 143.65 132.108 143.65 cv
132.108 143.65 li
131.681 143.65 131.261 143.482 130.948 143.168 cv
130.948 143.168 li
124.157 136.379 li
123.518 135.738 123.518 134.701 124.157 134.063 cv
124.157 134.063 li
124.794 133.424 125.833 133.424 126.471 134.063 cv
126.471 134.063 li
132.523 140.115 li
138.008 138.104 li
145.038 135.148 li
145.427 135.006 145.734 135.105 146.07 135.258 cv
146.07 135.258 li
155.781 139.676 li
156.187 139.861 156.497 140.196 156.644 140.614 cv
156.644 140.614 li
160.076 150.18 li
160.076 150.18 li
160.38 151.031 159.939 151.967 159.087 152.272 cv
159.087 152.272 li
158.906 152.338 158.718 152.369 158.535 152.369 cv
158.535 152.369 li
157.863 152.369 157.234 151.953 156.994 151.283 cv
156.994 151.283 li
153.796 142.371 li
146.144 138.889 li
150.303 153.008 li
153.21 162.555 li
165.32 163.259 li
166.402 163.322 167.228 164.25 167.165 165.334 cv
167.165 165.334 li
167.103 166.418 166.173 167.245 165.091 167.18 cv
165.091 167.18 li
151.636 166.398 li
151.636 166.398 li
150.827 166.352 150.125 165.808 149.878 165.033 cv
149.878 165.033 li
146.289 153.768 li
145.488 153.897 li
145.488 153.897 li
137.951 162.409 li
138.525 175.484 li
138.572 176.57 137.73 177.485 136.647 177.533 cv
136.647 177.533 li
136.619 177.533 136.59 177.536 136.562 177.536 cv
136.562 177.536 li
135.515 177.536 134.645 176.711 134.599 175.656 cv
134.599 175.656 li
133.991 161.768 li
133.968 161.251 134.155 160.735 134.505 160.354 cv
134.505 160.354 li
141.483 152.492 li
cp
f
126.969 4.37402 mo
126.969 6.51416 125.234 8.24854 123.095 8.24854 cv
120.957 8.24854 119.222 6.51416 119.222 4.37402 cv
119.222 2.23438 120.957 .5 123.095 .5 cv
125.234 .5 126.969 2.23438 126.969 4.37402 cv
cp
@
125.352 24.9751 mo
122.815 13.71 li
122.819 13.7266 li
116.539 16.0317 li
116.355 16.0991 116.165 16.1323 115.977 16.1323 cv
115.977 16.1323 li
115.549 16.1323 115.13 15.9648 114.817 15.6514 cv
114.817 15.6514 li
108.025 8.85986 li
107.384 8.22021 107.384 7.18457 108.025 6.54492 cv
108.025 6.54492 li
108.662 5.90527 109.701 5.90527 110.339 6.54492 cv
110.339 6.54492 li
116.391 12.5986 li
121.876 10.5864 li
128.907 7.63184 li
129.295 7.4873 129.602 7.58643 129.938 7.73926 cv
129.938 7.73926 li
139.65 12.1592 li
140.054 12.3423 140.365 12.6787 140.511 13.0967 cv
140.511 13.0967 li
143.943 22.6621 li
143.943 22.6621 li
144.248 23.5142 143.807 24.4502 142.955 24.7549 cv
142.955 24.7549 li
142.773 24.8218 142.587 24.8521 142.402 24.8521 cv
142.402 24.8521 li
141.73 24.8521 141.101 24.4351 140.862 23.7671 cv
140.862 23.7671 li
137.665 14.8525 li
130.011 11.3706 li
134.171 25.4893 li
137.079 35.0381 li
149.187 35.7412 li
150.271 35.8042 151.096 36.7324 151.033 37.8174 cv
151.033 37.8174 li
150.972 38.9014 150.042 39.7275 148.959 39.6631 cv
148.959 39.6631 li
135.504 38.8809 li
135.504 38.8809 li
134.694 38.833 133.993 38.2905 133.748 37.5161 cv
133.748 37.5161 li
130.158 26.25 li
129.355 26.3813 li
129.355 26.3813 li
121.819 34.8916 li
122.392 47.9658 li
122.439 49.0518 121.599 49.9668 120.516 50.0156 cv
120.516 50.0156 li
120.487 50.0166 120.458 50.0195 120.429 50.0195 cv
120.429 50.0195 li
119.383 50.0195 118.512 49.1934 118.467 48.1367 cv
118.467 48.1367 li
117.858 34.2505 li
117.834 33.7324 118.024 33.2183 118.373 32.8364 cv
118.373 32.8364 li
125.352 24.9751 li
cp
f
144.126 46.8799 mo
144.126 49.0186 142.391 50.7539 140.251 50.7539 cv
138.112 50.7539 136.378 49.0186 136.378 46.8799 cv
136.378 44.7402 138.112 43.0068 140.251 43.0068 cv
142.391 43.0068 144.126 44.7402 144.126 46.8799 cv
cp
f
142.507 67.4805 mo
139.97 56.2158 li
139.974 56.2324 li
133.695 58.5381 li
133.512 58.6055 133.321 58.6377 133.133 58.6377 cv
133.133 58.6377 li
132.705 58.6377 132.285 58.4707 131.973 58.1582 cv
131.973 58.1582 li
125.181 51.3662 li
124.541 50.7266 124.541 49.6895 125.181 49.0508 cv
125.181 49.0508 li
125.819 48.4102 126.857 48.4102 127.495 49.0508 cv
127.495 49.0508 li
133.547 55.1035 li
139.033 53.0928 li
146.062 50.1377 li
146.451 49.9941 146.757 50.0938 147.093 50.2461 cv
147.093 50.2461 li
156.805 54.6641 li
157.21 54.8496 157.521 55.1855 157.667 55.6025 cv
157.667 55.6025 li
161.1 65.168 li
161.1 65.168 li
161.404 66.0195 160.963 66.9561 160.111 67.2598 cv
160.111 67.2598 li
159.93 67.3262 159.743 67.3574 159.558 67.3574 cv
159.558 67.3574 li
158.887 67.3574 158.257 66.9414 158.017 66.2734 cv
158.017 66.2734 li
154.822 57.3574 li
147.167 53.876 li
151.328 67.9951 li
154.234 77.5449 li
166.344 78.248 li
167.426 78.3105 168.252 79.2383 168.189 80.3223 cv
168.189 80.3223 li
168.126 81.4063 167.198 82.2324 166.116 82.168 cv
166.116 82.168 li
152.66 81.3867 li
152.66 81.3867 li
151.85 81.3398 151.15 80.7969 150.904 80.0215 cv
150.904 80.0215 li
147.313 68.7559 li
146.512 68.8877 li
146.512 68.8877 li
138.976 77.3965 li
139.548 90.4717 li
139.595 91.5576 138.755 92.4727 137.672 92.5215 cv
137.672 92.5215 li
137.643 92.5234 137.614 92.5234 137.585 92.5234 cv
137.585 92.5234 li
136.54 92.5234 135.669 91.6982 135.624 90.6436 cv
135.624 90.6436 li
135.015 76.7559 li
134.991 76.2383 135.18 75.7246 135.529 75.3428 cv
135.529 75.3428 li
142.507 67.4805 li
cp
f
161.794 89.3867 mo
161.794 91.5244 160.059 93.2598 157.919 93.2598 cv
155.781 93.2598 154.045 91.5244 154.045 89.3867 cv
154.045 87.2471 155.781 85.5117 157.919 85.5117 cv
160.059 85.5117 161.794 87.2471 161.794 89.3867 cv
cp
@
160.175 109.986 mo
157.64 98.7227 li
157.643 98.7373 li
151.363 101.043 li
151.179 101.111 150.99 101.145 150.8 101.145 cv
150.8 101.145 li
150.373 101.145 149.954 100.977 149.641 100.663 cv
149.641 100.663 li
142.849 93.8721 li
142.208 93.2324 142.208 92.1953 142.849 91.5547 cv
142.849 91.5547 li
143.488 90.918 144.525 90.918 145.164 91.5547 cv
145.164 91.5547 li
151.215 97.6094 li
156.701 95.5986 li
163.732 92.6426 li
164.12 92.5 164.425 92.5986 164.763 92.752 cv
164.763 92.752 li
174.473 97.1699 li
174.879 97.3545 175.189 97.6914 175.337 98.1074 cv
175.337 98.1074 li
178.767 107.674 li
178.767 107.674 li
179.072 108.525 178.631 109.461 177.781 109.766 cv
177.781 109.766 li
177.598 109.832 177.411 109.864 177.227 109.864 cv
177.227 109.864 li
176.555 109.864 175.925 109.447 175.685 108.779 cv
175.685 108.779 li
172.49 99.8643 li
164.835 96.3828 li
168.997 110.502 li
171.903 120.051 li
184.011 120.753 li
185.094 120.816 185.921 121.744 185.857 122.829 cv
185.857 122.829 li
185.795 123.912 184.867 124.739 183.785 124.674 cv
183.785 124.674 li
170.328 123.893 li
170.328 123.893 li
169.518 123.846 168.816 123.303 168.572 122.527 cv
168.572 122.527 li
164.982 111.262 li
164.179 111.393 li
164.179 111.393 li
156.643 119.902 li
157.216 132.978 li
157.263 134.064 156.423 134.979 155.339 135.027 cv
155.339 135.027 li
155.31 135.029 155.283 135.029 155.253 135.029 cv
155.253 135.029 li
154.208 135.029 153.336 134.204 153.291 133.149 cv
153.291 133.149 li
152.683 119.262 li
152.66 118.744 152.847 118.23 153.197 117.848 cv
153.197 117.848 li
160.175 109.986 li
cp
f
178.949 131.892 mo
178.949 134.031 177.214 135.766 175.077 135.766 cv
172.937 135.766 171.203 134.031 171.203 131.892 cv
171.203 129.752 172.937 128.019 175.077 128.019 cv
177.214 128.019 178.949 129.752 178.949 131.892 cv
cp
f
177.332 152.492 mo
174.795 141.228 li
174.8 141.244 li
168.519 143.55 li
168.335 143.617 168.145 143.65 167.957 143.65 cv
167.957 143.65 li
167.529 143.65 167.11 143.482 166.796 143.168 cv
166.796 143.168 li
160.005 136.379 li
159.365 135.738 159.365 134.701 160.005 134.063 cv
160.005 134.063 li
160.642 133.424 161.68 133.424 162.32 134.063 cv
162.32 134.063 li
168.373 140.115 li
173.857 138.104 li
180.886 135.148 li
181.275 135.006 181.583 135.105 181.917 135.258 cv
181.917 135.258 li
191.629 139.676 li
192.035 139.861 192.345 140.196 192.494 140.614 cv
192.494 140.614 li
195.923 150.18 li
195.923 150.18 li
196.228 151.031 195.787 151.967 194.935 152.272 cv
194.935 152.272 li
194.754 152.338 194.567 152.369 194.382 152.369 cv
194.382 152.369 li
193.711 152.369 193.082 151.953 192.841 151.283 cv
192.841 151.283 li
189.645 142.371 li
181.992 138.889 li
186.152 153.008 li
189.058 162.555 li
201.167 163.259 li
202.25 163.322 203.078 164.25 203.013 165.334 cv
203.013 165.334 li
202.952 166.418 202.021 167.245 200.941 167.18 cv
200.941 167.18 li
187.484 166.398 li
187.484 166.398 li
186.674 166.352 185.972 165.808 185.728 165.033 cv
185.728 165.033 li
182.138 153.768 li
181.335 153.897 li
181.335 153.897 li
173.8 162.409 li
174.373 175.484 li
174.419 176.57 173.58 177.485 172.496 177.533 cv
172.496 177.533 li
172.466 177.533 172.437 177.536 172.41 177.536 cv
172.41 177.536 li
171.363 177.536 170.494 176.711 170.447 175.656 cv
170.447 175.656 li
169.837 161.768 li
169.816 161.251 170.003 160.735 170.353 160.354 cv
170.353 160.354 li
177.332 152.492 li
cp
f
195.284 33.8271 mo
195.284 31.6963 li
197.721 31.833 199.474 32.0981 200.542 32.4932 cv
201.607 32.8882 202.323 33.582 202.685 34.5767 cv
203.046 35.5703 203.228 37.1719 203.228 39.3813 cv
203.228 47.4609 li
200.581 47.4609 li
200.581 40.9907 li
200.581 38.939 200.48 37.4565 200.281 36.5415 cv
200.082 35.626 199.621 34.9653 198.902 34.5605 cv
198.181 34.1553 196.975 33.9116 195.284 33.8271 cv
cp
190.632 47.4609 mo
190.632 14.0083 li
193.408 14.0083 li
195.887 14.0083 197.839 14.1973 199.263 14.5752 cv
200.687 14.9536 201.706 15.5664 202.316 16.4121 cv
202.925 17.2583 203.228 18.3965 203.228 19.8252 cv
203.228 21.7275 202.611 23.1177 201.376 23.9956 cv
200.141 24.8726 198.111 25.374 195.284 25.5 cv
195.284 23.2461 li
196.986 23.1831 198.208 22.8936 198.949 22.3794 cv
199.689 21.8643 200.06 21.0127 200.06 19.8252 cv
200.06 18.4385 199.637 17.5313 198.792 17.106 cv
197.945 16.6807 196.151 16.4668 193.408 16.4668 cv
193.408 47.4609 li
190.632 47.4609 li
cp
187.859 47.4609 mo
185.083 47.4609 li
185.083 9.23145 li
193.408 9.23145 li
195.158 9.23145 li
199.246 9.35742 202.277 10.0664 204.253 11.3599 cv
207.101 13.3447 208.527 16.166 208.527 19.8213 cv
208.527 21.0508 208.263 22.2764 207.738 23.502 cv
207.212 24.7256 206.5 25.7866 205.602 26.6846 cv
204.703 27.583 203.739 28.2002 202.708 28.5361 cv
204.474 29.0923 205.927 30.0317 207.068 31.3511 cv
208.208 32.6709 208.779 34.3823 208.779 36.4844 cv
208.779 47.4609 li
206.003 47.4609 li
206.003 38.3413 li
206.003 36.0166 205.607 34.2256 204.814 32.9688 cv
204.02 31.7114 202.857 30.8516 201.33 30.3887 cv
199.8 29.9253 197.785 29.6943 195.284 29.6943 cv
195.284 27.5034 li
199.046 27.3452 201.773 26.6309 203.464 25.3584 cv
205.158 24.0869 206.003 22.1587 206.003 19.5728 cv
206.003 17.7231 205.562 16.2148 204.679 15.0479 cv
203.796 13.8823 202.419 13.02 200.548 12.4629 cv
198.678 11.9063 196.297 11.6279 193.408 11.6279 cv
187.859 11.6279 li
187.859 47.4609 li
cp
182.435 47.4609 mo
179.66 47.4609 li
179.66 4.45508 li
193.408 4.45508 li
195.803 4.45508 li
198.695 4.51807 201.105 4.76172 203.041 5.1875 cv
204.972 5.61328 206.671 6.29395 208.131 7.229 cv
211.925 9.74023 213.821 13.3125 213.821 17.9448 cv
213.821 20.667 213.679 22.7676 213.394 24.249 cv
213.109 25.7305 212.363 27.1597 211.159 28.5361 cv
212.416 29.9028 213.238 31.272 213.624 32.644 cv
214.009 34.0171 214.201 36.1797 214.201 39.1338 cv
214.201 47.4609 li
211.412 47.4609 li
211.412 37.5093 li
211.412 35.1748 211.109 33.3242 210.501 31.9575 cv
209.894 30.5908 208.91 29.4912 207.548 28.6616 cv
208.804 27.7051 209.72 26.3633 210.295 24.6357 cv
210.871 22.9067 211.159 20.9766 211.159 18.8433 cv
211.159 14.6621 209.478 11.4585 206.119 9.23145 cv
203.63 7.64453 200.101 6.85059 195.535 6.85059 cv
193.408 6.85059 li
182.435 6.85059 li
182.435 47.4609 li
cp
0 1 1 0 cmyk
f
239.835 25.7681 mo
239.835 22.7261 li
239.835 20.6553 239.497 19.1475 238.818 18.2012 cv
238.14 17.2554 237.06 16.7832 235.578 16.7832 cv
234.066 16.7832 232.985 17.2451 232.339 18.1704 cv
231.693 19.0952 231.37 20.6138 231.37 22.7261 cv
231.37 25.7681 li
239.835 25.7681 li
cp
239.835 39.5156 mo
231.37 39.5156 li
231.37 47.4609 li
228.595 47.4609 li
228.595 36.7407 li
242.483 36.7407 li
242.483 47.4609 li
239.835 47.4609 li
239.835 39.5156 li
cp
242.483 28.543 mo
228.595 28.543 li
228.595 23.7617 li
228.595 17.4272 230.922 14.2603 235.578 14.2603 cv
240.182 14.2603 242.483 17.4697 242.483 23.8877 cv
242.483 28.543 li
cp
245.259 24.0127 mo
245.259 20.311 244.531 17.2969 243.075 14.9731 cv
241.62 12.6484 239.121 11.4858 235.578 11.4858 cv
232.048 11.4858 229.539 12.6528 228.051 14.9893 cv
226.564 17.3237 225.82 20.332 225.82 24.0127 cv
225.82 31.3184 li
245.259 31.3184 li
245.259 24.0127 li
cp
248.033 23.8926 mo
248.033 47.4609 li
245.259 47.4609 li
245.259 33.9668 li
225.82 33.9668 li
225.82 47.4609 li
223.171 47.4609 li
223.171 24.2871 li
223.171 22.1426 223.384 20.1357 223.81 18.2642 cv
224.236 16.3936 224.929 14.7412 225.891 13.3066 cv
226.853 11.8716 228.136 10.7466 229.738 9.93311 cv
231.34 9.11865 233.287 8.71045 235.578 8.71045 cv
238.595 8.71045 241.031 9.38672 242.885 10.7368 cv
244.741 12.0879 246.062 13.8931 246.851 16.1519 cv
247.638 18.4116 248.033 20.9912 248.033 23.8926 cv
cp
253.457 23.8926 mo
253.457 47.4609 li
250.681 47.4609 li
250.681 23.8926 li
250.681 20.4448 250.198 17.3921 249.232 14.7329 cv
248.263 12.0737 246.659 9.96387 244.416 8.40332 cv
242.171 6.84277 239.226 6.06348 235.578 6.06348 cv
232.835 6.06348 230.484 6.5332 228.524 7.47363 cv
226.564 8.41406 224.988 9.71777 223.794 11.3828 cv
222.601 13.0488 221.738 14.9805 221.201 17.1763 cv
220.666 19.3735 220.397 21.7847 220.397 24.4131 cv
220.397 47.4609 li
217.623 47.4609 li
217.623 24.6025 li
217.623 21.0493 218.056 17.9229 218.923 15.2222 cv
219.791 12.5205 221.02 10.2856 222.613 8.51367 cv
224.205 6.74268 226.088 5.42822 228.265 4.57227 cv
230.439 3.71631 232.878 3.28809 235.578 3.28809 cv
239.089 3.28809 242.195 4.06836 244.896 5.62939 cv
247.597 7.19043 249.7 9.51953 251.202 12.6206 cv
252.705 15.7207 253.457 19.479 253.457 23.8926 cv
cp
f
279.547 23.8926 mo
279.547 21.3604 279.224 19.5405 278.578 18.4385 cv
277.931 17.3345 276.877 16.7832 275.417 16.7832 cv
273.903 16.7832 272.823 17.3374 272.177 18.4453 cv
271.532 19.5557 271.208 21.3706 271.208 23.8926 cv
271.208 47.4609 li
268.432 47.4609 li
268.432 23.498 li
268.432 20.9863 269.002 18.7773 270.143 16.8682 cv
271.284 14.9619 273.041 14.0083 275.417 14.0083 cv
276.93 14.0083 278.201 14.4922 279.231 15.458 cv
280.261 16.4253 281.013 17.6367 281.486 19.0918 cv
281.958 20.5479 282.196 22.0166 282.196 23.498 cv
282.196 47.4609 li
279.547 47.4609 li
279.547 23.8926 li
cp
287.746 47.4609 mo
284.97 47.4609 li
284.97 23.6406 li
284.97 21.5591 284.632 19.5869 283.954 17.7202 cv
283.275 15.8555 282.219 14.3281 280.784 13.1406 cv
279.35 11.9531 277.561 11.3599 275.417 11.3599 cv
272.401 11.3599 269.904 12.5894 267.928 15.0479 cv
267.109 16.1836 266.525 17.3813 266.177 18.6436 cv
265.832 19.9038 265.658 21.5703 265.658 23.6406 cv
265.658 47.4609 li
262.884 47.4609 li
262.884 23.7671 li
262.884 21.2446 263.109 19.2075 263.561 17.6572 cv
264.013 16.1069 264.802 14.6128 265.927 13.1729 cv
268.301 10.1138 271.464 8.58447 275.417 8.58447 cv
278.044 8.58447 280.291 9.30469 282.156 10.7451 cv
284.021 12.1855 285.42 14.0713 286.348 16.4043 cv
287.279 18.7373 287.746 21.1914 287.746 23.7671 cv
287.746 47.4609 li
cp
293.168 47.4609 mo
290.518 47.4609 li
290.518 24.019 li
290.518 20.8975 290.251 18.4146 289.716 16.5698 cv
289.179 14.7251 288.224 12.9888 286.845 11.3599 cv
283.746 7.66016 279.935 5.80957 275.417 5.80957 cv
270.697 5.80957 266.867 7.66016 263.924 11.3599 cv
262.537 13.0103 261.576 14.7515 261.04 16.5854 cv
260.503 18.4194 260.236 20.8975 260.236 24.019 cv
260.236 47.4609 li
257.46 47.4609 li
257.46 24.2871 li
257.46 21.9116 257.599 19.8838 257.878 18.2012 cv
258.156 16.52 258.605 15.0112 259.226 13.6777 cv
259.846 12.3423 260.698 10.9917 261.78 9.625 cv
265.216 5.40039 269.762 3.28809 275.417 3.28809 cv
278.138 3.28809 280.66 3.82617 282.977 4.9043 cv
285.294 5.98047 287.273 7.5542 288.911 9.625 cv
290.518 11.5693 291.63 13.604 292.246 15.7266 cv
292.861 17.8496 293.168 20.7031 293.168 24.2871 cv
293.168 47.4609 li
cp
f
308.79 47.4609 mo
308.79 15.4272 li
312.198 15.4272 314.97 15.6421 317.115 16.0732 cv
319.552 16.5562 321.532 17.7285 323.05 19.5889 cv
324.57 21.4497 325.329 23.5928 325.329 26.0215 cv
325.329 28.0493 324.851 29.8574 323.894 31.4443 cv
322.937 33.0317 321.558 34.2686 319.755 35.1572 cv
317.954 36.0439 315.848 36.4883 313.442 36.4883 cv
313.442 33.8403 li
319.6 33.4512 322.68 30.8447 322.68 26.0215 cv
322.68 24.1924 322.165 22.5786 321.134 21.1807 cv
320.104 19.7842 318.764 18.8789 317.115 18.4692 cv
316.042 18.228 314.15 18.0542 311.44 17.9492 cv
311.44 47.4609 li
308.79 47.4609 li
cp
303.243 47.4609 mo
303.243 9.87744 li
308.549 9.96143 311.728 10.0254 312.78 10.0664 cv
313.832 10.1089 315.275 10.3032 317.115 10.6499 cv
319.752 11.1748 322.113 12.1924 324.193 13.7002 cv
326.273 15.209 327.887 17.0371 329.034 19.1865 cv
330.179 21.3359 330.751 23.6147 330.751 26.0215 cv
330.751 28.8896 330.008 31.5337 328.52 33.9507 cv
327.033 36.3682 324.966 38.3018 322.318 39.7524 cv
319.668 41.2026 316.708 41.9648 313.442 42.0381 cv
313.442 39.2632 li
316.268 39.2632 318.797 38.6831 321.032 37.5215 cv
323.266 36.3608 325.003 34.7646 326.243 32.7373 cv
327.482 30.7085 328.103 28.4702 328.103 26.0215 cv
328.103 24.0449 327.638 22.1748 326.708 20.4087 cv
325.778 18.6436 324.48 17.1631 322.813 15.9702 cv
321.148 14.7783 319.249 13.9761 317.115 13.5659 cv
315.538 13.188 314.179 12.96 313.041 12.8809 cv
311.899 12.8018 309.558 12.7261 306.015 12.6523 cv
306.015 47.4609 li
303.243 47.4609 li
cp
313.442 44.6865 mo
317.131 44.5918 320.517 43.7007 323.602 42.0146 cv
326.688 40.3281 329.114 38.0791 330.877 35.2671 cv
332.642 32.4556 333.526 29.415 333.526 26.1475 cv
333.526 23.9722 333.157 21.8613 332.422 19.8179 cv
331.685 17.7734 330.606 15.9082 329.175 14.2212 cv
327.745 12.5337 326.004 11.123 323.95 9.98828 cv
321.895 8.85254 319.574 8.10645 316.989 7.74951 cv
315.497 7.55029 314.176 7.42334 313.032 7.37061 cv
311.887 7.31836 309.891 7.26855 307.048 7.22119 cv
304.207 7.17432 302.053 7.13477 300.593 7.10254 cv
300.593 47.4609 li
297.82 47.4609 li
297.82 4.45508 li
307.767 4.45508 li
312.39 4.45508 315.906 4.68848 318.312 5.15625 cv
320.719 5.62402 323.011 6.44531 325.187 7.62305 cv
328.475 9.38916 331.15 11.9321 333.209 15.2544 cv
335.27 18.5747 336.301 22.1221 336.301 25.8955 cv
336.301 28.6377 335.775 31.2944 334.724 33.8638 cv
333.673 36.4341 332.181 38.73 330.248 40.7529 cv
328.313 42.7769 326.091 44.3457 323.579 45.459 cv
322.096 46.0586 320.699 46.4883 319.386 46.752 cv
318.071 47.0137 316.09 47.251 313.442 47.4609 cv
313.442 44.6865 li
cp
f
369.675 25.8955 mo
369.675 24.6553 369.44 23.4751 368.973 22.3555 cv
368.507 21.2354 367.866 20.2607 367.05 19.4312 cv
366.235 18.6016 365.292 17.9521 364.212 17.4834 cv
363.135 17.0166 362.008 16.7832 360.832 16.7832 cv
359.223 16.7832 357.74 17.1875 356.378 17.9961 cv
355.018 18.8057 353.934 19.9116 353.13 21.3145 cv
352.327 22.7188 351.923 24.2451 351.923 25.8955 cv
351.923 27.5771 352.325 29.1294 353.122 30.5527 cv
353.92 31.9775 355.003 33.0967 356.372 33.9116 cv
357.736 34.7261 359.223 35.1333 360.832 35.1333 cv
362.44 35.1333 363.92 34.7158 365.27 33.8799 cv
366.618 33.0435 367.692 31.9116 368.484 30.4824 cv
369.279 29.0532 369.675 27.5244 369.675 25.8955 cv
cp
372.45 26.0215 mo
372.45 28.0942 371.924 30.0151 370.871 31.7832 cv
369.823 33.5518 368.404 34.9502 366.617 35.9829 cv
364.83 37.0137 362.903 37.5288 360.832 37.5288 cv
358.74 37.5288 356.796 37.0186 354.998 35.999 cv
353.2 34.9775 351.777 33.585 350.725 31.8218 cv
349.673 30.0591 349.149 28.126 349.149 26.0215 cv
349.149 23.8638 349.667 21.8828 350.702 20.0776 cv
351.738 18.2725 353.152 16.8516 354.945 15.8154 cv
356.735 14.7783 358.698 14.2603 360.832 14.2603 cv
362.913 14.2603 364.846 14.7817 366.632 15.8232 cv
368.42 16.8647 369.834 18.2886 370.883 20.0938 cv
371.928 21.8984 372.45 23.874 372.45 26.0215 cv
cp
375.224 26.0122 mo
375.224 23.416 374.57 21.0024 373.262 18.7729 cv
371.956 16.5444 370.192 14.772 367.979 13.4565 cv
365.768 12.1431 363.384 11.4858 360.832 11.4858 cv
358.194 11.4858 355.763 12.1318 353.547 13.4258 cv
351.331 14.7192 349.581 16.4814 348.299 18.7095 cv
347.016 20.939 346.376 23.3735 346.376 26.0122 cv
346.376 28.5889 347.023 30.9766 348.323 33.1748 cv
349.62 35.3721 351.376 37.1074 353.587 38.3799 cv
355.8 39.6519 358.214 40.2876 360.832 40.2876 cv
363.384 40.2876 365.768 39.6475 367.979 38.3643 cv
370.192 37.0806 371.956 35.3398 373.262 33.1426 cv
374.57 30.9453 375.224 28.5684 375.224 26.0122 cv
cp
377.874 26.0215 mo
377.874 29.0479 377.106 31.8745 375.571 34.5024 cv
374.039 37.1299 371.966 39.2134 369.356 40.7529 cv
366.746 42.2935 363.907 43.0625 360.838 43.0625 cv
357.748 43.0625 354.887 42.3037 352.249 40.7852 cv
349.616 39.2661 347.513 37.1899 345.947 34.5576 cv
344.382 31.9248 343.6 29.0796 343.6 26.0215 cv
343.6 22.8994 344.372 20.0098 345.917 17.3506 cv
347.46 14.6914 349.553 12.5869 352.197 11.0371 cv
354.839 9.48633 357.719 8.71045 360.838 8.71045 cv
363.895 8.71045 366.733 9.4917 369.356 11.0518 cv
371.977 12.6128 374.051 14.7251 375.58 17.3896 cv
377.11 20.0537 377.874 22.9316 377.874 26.0215 cv
cp
380.665 26.1475 mo
380.665 22.5308 379.767 19.1787 377.976 16.0889 cv
376.183 13 373.763 10.5552 370.715 8.75781 cv
367.667 6.96143 364.374 6.06348 360.832 6.06348 cv
357.204 6.06348 353.866 6.95166 350.813 8.72656 cv
347.758 10.5029 345.35 12.9258 343.584 15.9951 cv
341.818 19.0635 340.938 22.4053 340.938 26.0215 cv
340.938 29.6045 341.828 32.9175 343.607 35.9609 cv
345.388 39.0034 347.81 41.4136 350.869 43.1885 cv
353.926 44.9648 357.248 45.8535 360.832 45.8535 cv
364.364 45.8535 367.655 44.959 370.708 43.1729 cv
373.76 41.3862 376.183 38.9746 377.976 35.937 cv
379.767 32.9004 380.665 29.6362 380.665 26.1475 cv
cp
383.438 26.1475 mo
383.438 30.1514 382.417 33.8687 380.378 37.3008 cv
378.339 40.7314 375.585 43.457 372.111 45.4746 cv
368.637 47.4922 364.877 48.501 360.832 48.501 cv
356.763 48.501 352.989 47.498 349.503 45.4902 cv
346.021 43.4834 343.259 40.7554 341.218 37.3076 cv
339.182 33.8613 338.162 30.0981 338.162 26.0215 cv
338.162 21.8901 339.172 18.0835 341.197 14.5991 cv
343.219 11.1152 345.967 8.35938 349.442 6.33008 cv
352.916 4.30225 356.71 3.28809 360.832 3.28809 cv
364.877 3.28809 368.637 4.3125 372.111 6.3623 cv
375.585 8.41162 378.339 11.1909 380.378 14.7021 cv
382.417 18.2124 383.438 22.0269 383.438 26.1475 cv
cp
f
417.978 47.4609 mo
417.978 25.6426 li
417.978 22.8579 418.185 20.6245 418.594 18.9424 cv
419.004 17.2607 419.658 16.0391 420.557 15.2769 cv
421.455 14.5151 422.659 14.1343 424.175 14.1343 cv
425.792 14.1343 427.056 14.4922 427.966 15.2061 cv
428.876 15.9214 429.527 17.0796 429.92 18.6821 cv
430.316 20.2856 430.511 22.4736 430.511 25.249 cv
430.511 47.4609 li
427.736 47.4609 li
427.736 23.2461 li
427.736 20.8921 427.479 19.2261 426.965 18.249 cv
426.45 17.271 425.563 16.7832 424.301 16.7832 cv
422.989 16.7832 422.068 17.2607 421.542 18.2173 cv
421.015 19.1733 420.753 20.8506 420.753 23.2461 cv
420.753 47.4609 li
417.978 47.4609 li
cp
409.845 47.4609 mo
407.07 47.4609 li
407.07 23.2461 li
407.07 20.8403 406.807 19.1606 406.282 18.2095 cv
405.755 17.2583 404.836 16.7832 403.522 16.7832 cv
402.271 16.7832 401.366 17.2852 400.802 18.2886 cv
400.241 19.2915 399.958 20.9438 399.958 23.2461 cv
399.958 47.4609 li
397.311 47.4609 li
397.311 25.6426 li
397.311 22.8467 397.515 20.5977 397.925 18.8945 cv
398.337 17.1924 398.994 15.9521 399.896 15.1753 cv
400.8 14.397 402.007 14.0083 403.522 14.0083 cv
405.908 14.0083 407.558 14.8618 408.472 16.5698 cv
409.386 18.2773 409.845 21.3018 409.845 25.6426 cv
409.845 47.4609 li
cp
415.268 47.4609 mo
412.492 47.4609 li
412.492 28.2749 li
412.492 23.9873 412.213 20.6313 411.658 18.2095 cv
411.098 15.7861 410.177 14.0396 408.882 12.9678 cv
407.589 11.8955 405.804 11.3599 403.522 11.3599 cv
401.347 11.3599 399.606 11.9106 398.294 13.0146 cv
396.988 14.1182 396.035 15.8921 395.436 18.3354 cv
394.836 20.7788 394.537 24.0078 394.537 28.0229 cv
394.537 47.4609 li
391.762 47.4609 li
391.762 30.1514 li
391.762 27.1982 391.84 24.6782 391.998 22.5918 cv
392.157 20.5054 392.471 18.6436 392.945 17.0034 cv
393.417 15.3643 394.122 13.9131 395.056 12.6523 cv
396.044 11.2959 397.27 10.2793 398.738 9.60156 cv
400.204 8.92334 401.799 8.58447 403.522 8.58447 cv
408.988 8.58447 412.43 11.1699 413.85 16.3408 cv
414.962 13.2822 416.301 11.2437 417.862 10.2236 cv
419.422 9.20508 421.484 8.65771 424.049 8.58447 cv
427.979 8.58447 430.968 9.98291 433.016 12.7783 cv
433.932 14.0083 434.612 15.4292 435.053 17.043 cv
435.495 18.6563 435.773 20.4087 435.889 22.3008 cv
436.003 24.1924 436.062 26.6621 436.062 29.7095 cv
436.062 47.4609 li
433.288 47.4609 li
433.288 28.2749 li
433.288 24.04 432.999 20.6943 432.427 18.2402 cv
431.855 15.7861 430.91 14.0269 429.597 12.96 cv
428.286 11.8936 426.476 11.3599 424.175 11.3599 cv
422.021 11.3599 420.295 11.9141 418.997 13.022 cv
417.698 14.1318 416.751 15.9263 416.158 18.4063 cv
415.566 20.8872 415.268 24.1758 415.268 28.2749 cv
415.268 47.4609 li
cp
438.708 47.4609 mo
438.708 27.25 li
438.708 24.4341 438.631 22.1167 438.474 20.2988 cv
438.316 18.48 437.989 16.8433 437.495 15.3877 cv
437 13.9307 436.266 12.5474 435.29 11.2329 cv
434.257 9.8877 433.069 8.83496 431.717 8.07324 cv
430.368 7.31055 428.952 6.78516 427.47 6.49561 cv
425.989 6.20654 424.353 6.06348 422.566 6.06348 cv
418.531 6.06348 415.667 7.55029 413.975 10.5239 cv
412.167 7.55029 409.261 6.06348 405.255 6.06348 cv
399.782 6.06348 395.712 7.68164 393.054 10.9185 cv
392.004 12.1797 391.187 13.5659 390.604 15.0801 cv
390.02 16.5928 389.605 18.3271 389.359 20.2827 cv
389.112 22.2368 388.988 24.6025 388.988 27.3774 cv
389.113 47.4609 li
386.34 47.4609 li
386.34 24.6025 li
386.34 21.9219 386.486 19.6729 386.78 17.8545 cv
387.074 16.0371 387.561 14.4341 388.239 13.0469 cv
388.917 11.6587 389.855 10.3032 391.052 8.97852 cv
394.437 5.18506 398.851 3.28809 404.295 3.28809 cv
407.817 3.28809 411.043 4.21338 413.975 6.06348 cv
415.11 5.31738 416.08 4.75684 416.885 4.3833 cv
417.688 4.01074 418.596 3.73535 419.612 3.55518 cv
420.624 3.37744 421.93 3.28809 423.528 3.28809 cv
426.157 3.28809 428.621 3.78418 430.921 4.77734 cv
433.223 5.77148 435.194 7.17139 436.835 8.97852 cv
438.032 10.2925 438.967 11.6411 439.64 13.022 cv
440.311 14.4043 440.788 16 441.067 17.8071 cv
441.344 19.6147 441.485 21.8804 441.485 24.6025 cv
441.485 47.4609 li
438.708 47.4609 li
cp
f
208.652 103.863 mo
208.652 71.8291 li
212.058 71.8291 214.832 72.0449 216.976 72.4746 cv
219.414 72.959 221.392 74.1309 222.912 75.9902 cv
224.429 77.8516 225.189 79.9941 225.189 82.4229 cv
225.189 84.4512 224.711 86.2588 223.755 87.8457 cv
222.798 89.4336 221.418 90.6719 219.617 91.5586 cv
217.814 92.4463 215.708 92.8906 213.302 92.8906 cv
213.302 90.2422 li
219.461 89.8535 222.541 87.2471 222.541 82.4229 cv
222.541 80.5947 222.026 78.9805 220.997 77.584 cv
219.966 76.1855 218.626 75.2813 216.976 74.8721 cv
215.904 74.6299 214.012 74.4551 211.3 74.3516 cv
211.3 103.863 li
208.652 103.863 li
cp
203.103 103.863 mo
203.103 66.2793 li
208.411 66.3643 211.589 66.4277 212.64 66.4688 cv
213.692 66.5107 215.136 66.7051 216.976 67.0508 cv
219.615 67.5781 221.974 68.5957 224.054 70.1035 cv
226.135 71.6113 227.749 73.4395 228.895 75.5879 cv
230.04 77.7383 230.612 80.0156 230.612 82.4229 cv
230.612 85.291 229.869 87.9355 228.382 90.3516 cv
226.894 92.7695 224.827 94.7041 222.178 96.1543 cv
219.529 97.6035 216.571 98.3662 213.302 98.4404 cv
213.302 95.666 li
216.13 95.666 218.661 95.0859 220.893 93.9238 cv
223.126 92.7617 224.864 91.167 226.104 89.1387 cv
227.343 87.1113 227.964 84.8721 227.964 82.4229 cv
227.964 80.4473 227.5 78.5762 226.57 76.8105 cv
225.638 75.0449 224.34 73.5654 222.675 72.373 cv
221.009 71.1797 219.11 70.3789 216.976 69.9688 cv
215.4 69.5898 214.042 69.3623 212.9 69.2832 cv
211.76 69.2051 209.419 69.1279 205.876 69.0547 cv
205.876 103.863 li
203.103 103.863 li
cp
213.302 101.088 mo
216.992 100.994 220.378 100.104 223.463 98.416 cv
226.548 96.7305 228.972 94.4814 230.74 91.6699 cv
232.504 88.8574 233.387 85.8184 233.387 82.5488 cv
233.387 80.373 233.019 78.2637 232.283 76.2188 cv
231.548 74.1758 230.464 72.3096 229.037 70.623 cv
227.607 68.9355 225.865 67.5244 223.81 66.3906 cv
221.755 65.2559 219.435 64.5078 216.849 64.1523 cv
215.357 63.9512 214.038 63.8262 212.894 63.7734 cv
211.748 63.7207 209.752 63.6709 206.91 63.623 cv
204.068 63.5752 201.915 63.5371 200.455 63.5059 cv
200.455 103.863 li
197.679 103.863 li
197.679 60.8564 li
207.627 60.8564 li
212.251 60.8564 215.767 61.0908 218.173 61.5586 cv
220.582 62.0254 222.873 62.8486 225.047 64.0254 cv
228.337 65.791 231.012 68.334 233.072 71.6553 cv
235.132 74.9766 236.162 78.5234 236.162 82.2969 cv
236.162 85.0391 235.635 87.6973 234.585 90.2656 cv
233.535 92.8359 232.042 95.1328 230.108 97.1543 cv
228.174 99.1777 225.952 100.747 223.439 101.861 cv
221.958 102.461 220.56 102.891 219.246 103.153 cv
217.931 103.416 215.952 103.652 213.302 103.863 cv
213.302 101.088 li
cp
1 0 1 0 cmyk
f
250.619 103.863 mo
250.619 60.8564 li
253.267 60.8564 li
253.267 103.863 li
250.619 103.863 li
cp
247.843 60.8564 mo
247.843 103.863 li
245.069 103.863 li
245.069 60.8564 li
247.843 60.8564 li
cp
242.419 103.863 mo
239.646 103.863 li
239.646 60.8564 li
242.419 60.8564 li
242.419 103.863 li
cp
f
275.386 61.9297 mo
273.033 61.9297 270.214 62.877 268.291 63.9541 cv
266.369 65.0313 264.857 66.5186 263.759 68.416 cv
262.66 70.3125 262.111 72.4219 262.111 74.7451 cv
262.111 75.9863 262.302 77.1309 262.685 78.1816 cv
263.07 79.2334 263.659 80.5059 264.453 81.998 cv
265.246 83.4902 265.829 84.6934 266.203 85.6074 cv
266.575 86.5215 266.761 87.5254 266.761 88.6191 cv
266.698 90.2695 266.027 91.584 264.744 92.5684 cv
263.461 93.5508 261.659 94.041 259.336 94.041 cv
258.412 94.041 257.403 93.916 256.309 93.6641 cv
256.309 91.1406 li
257.126 91.3086 258.307 91.3926 259.848 91.3926 cv
262.344 91.3926 263.593 90.5156 263.593 88.7607 cv
263.593 87.625 263.412 86.5957 263.05 85.6709 cv
262.689 84.7461 262.142 83.5664 261.41 82.1309 cv
260.675 80.6973 260.126 79.4434 259.76 78.3711 cv
259.394 77.2988 259.209 76.1328 259.209 74.8721 cv
259.209 72.0547 259.846 69.4854 261.118 67.1621 cv
262.389 64.8398 264.14 63.0137 266.369 61.6846 cv
268.595 60.3555 272.543 59.2813 275.276 59.2813 cv
312.291 59.2813 li
312.291 61.9297 li
281.918 61.9297 li
275.386 61.9297 li
cp
f
276.852 67.4785 mo
274.466 67.4785 271.808 68.2422 270.206 69.709 cv
268.603 71.1768 267.802 73.0254 267.802 75.2539 cv
267.802 76.4414 268 77.5547 268.393 78.5898 cv
268.787 79.625 269.403 80.9268 270.238 82.4932 cv
271.074 84.0605 271.694 85.3467 272.098 86.3496 cv
272.502 87.3535 272.705 88.4395 272.705 89.6055 cv
272.705 91.416 272.188 93.0762 271.152 94.5918 cv
270.117 96.1055 268.708 97.2988 266.927 98.1709 cv
265.145 99.0449 263.199 99.4805 261.086 99.4805 cv
259.351 99.4805 257.759 99.2695 256.309 98.8457 cv
256.309 96.1855 li
258 96.6172 259.291 96.832 260.182 96.832 cv
261.904 96.832 263.494 96.4902 264.946 95.8076 cv
266.4 95.125 267.55 94.1973 268.395 93.0244 cv
269.24 91.8525 269.663 90.5781 269.663 89.2021 cv
269.663 87.6875 269.267 86.125 268.477 84.5117 cv
267.685 82.8984 266.892 81.2891 266.095 79.6797 cv
265.299 78.0723 264.902 76.5107 264.902 74.998 cv
264.902 72.1602 265.902 69.7813 267.904 67.8652 cv
269.907 65.9463 273.888 64.7031 276.852 64.7031 cv
312.291 64.7031 li
312.291 67.4785 li
297.44 67.4785 li
297.44 103.863 li
294.667 103.863 li
294.667 67.4785 li
276.852 67.4785 li
cp
f
277.64 70.127 mo
291.892 70.127 li
291.892 103.863 li
289.244 103.863 li
289.244 72.9023 li
277.64 72.9023 li
276.558 72.9023 275.011 73.0664 274.36 73.7139 cv
273.708 74.3594 273.352 75.2393 273.289 76.3535 cv
273.289 77.2158 273.834 78.7344 274.927 80.9102 cv
276.02 83.085 276.806 84.7363 277.285 85.8594 cv
277.762 86.9844 278.001 88.3555 278.001 89.9746 cv
278.001 92.6963 277.316 95.2129 275.945 97.5254 cv
274.573 99.8379 272.703 101.667 270.333 103.012 cv
267.961 104.357 265.375 105.029 262.569 105.029 cv
260.95 105.029 258.863 104.684 256.309 103.989 cv
256.309 101.346 li
258.202 101.953 260.051 102.256 261.859 102.256 cv
264.276 102.256 266.511 101.725 268.567 100.662 cv
270.623 99.6016 272.255 98.1504 273.469 96.3125 cv
274.683 94.4727 275.311 92.4492 275.353 90.2422 cv
275.353 88.8867 275.143 87.6152 274.722 86.4277 cv
274.303 85.2402 273.654 83.834 272.776 82.2109 cv
271.899 80.5859 271.313 79.4336 271.018 78.749 cv
270.723 78.0664 270.577 77.2676 270.577 76.3535 cv
270.577 74.5879 271.183 73.1035 272.398 71.9004 cv
273.612 70.6973 275.812 70.127 277.64 70.127 cv
cp
f
312.291 70.127 mo
312.291 72.9023 li
302.863 72.9023 li
302.863 103.863 li
300.088 103.863 li
300.088 70.127 li
312.291 70.127 li
cp
f
334.629 82.1699 mo
334.629 79.127 li
334.629 77.0586 334.291 75.5488 333.613 74.6035 cv
332.935 73.6582 331.854 73.1846 330.374 73.1846 cv
328.859 73.1846 327.781 73.6465 327.133 74.5723 cv
326.488 75.4961 326.164 77.0156 326.164 79.127 cv
326.164 82.1699 li
334.629 82.1699 li
cp
334.629 95.918 mo
326.164 95.918 li
326.164 103.863 li
323.39 103.863 li
323.39 93.1426 li
337.278 93.1426 li
337.278 103.863 li
334.629 103.863 li
334.629 95.918 li
cp
337.278 84.9453 mo
323.39 84.9453 li
323.39 80.1641 li
323.39 73.8291 325.716 70.6621 330.374 70.6621 cv
334.977 70.6621 337.278 73.8711 337.278 80.2891 cv
337.278 84.9453 li
cp
340.052 80.415 mo
340.052 76.7129 339.324 73.6992 337.871 71.375 cv
336.413 69.0508 333.914 67.8877 330.374 67.8877 cv
326.842 67.8877 324.332 69.0547 322.845 71.3906 cv
321.359 73.7256 320.615 76.7344 320.615 80.415 cv
320.615 87.7207 li
340.052 87.7207 li
340.052 80.415 li
cp
342.826 80.2949 mo
342.826 103.863 li
340.052 103.863 li
340.052 90.3682 li
320.615 90.3682 li
320.615 103.863 li
317.966 103.863 li
317.966 80.6885 li
317.966 78.5439 318.179 76.5371 318.604 74.666 cv
319.03 72.7969 319.725 71.1426 320.686 69.709 cv
321.646 68.2744 322.929 67.1494 324.532 66.334 cv
326.133 65.5215 328.082 65.1133 330.374 65.1133 cv
333.389 65.1133 335.823 65.7881 337.68 67.1387 cv
339.535 68.4893 340.858 70.2949 341.644 72.5547 cv
342.432 74.8135 342.826 77.3936 342.826 80.2949 cv
cp
348.25 80.2949 mo
348.25 103.863 li
345.475 103.863 li
345.475 80.2949 li
345.475 76.8477 344.993 73.7949 344.026 71.1357 cv
343.06 68.4766 341.453 66.3662 339.208 64.8057 cv
336.965 63.2441 334.022 62.4648 330.374 62.4648 cv
327.629 62.4648 325.278 62.9355 323.318 63.876 cv
321.359 64.8164 319.783 66.1191 318.589 67.7852 cv
317.397 69.4512 316.532 71.3818 315.996 73.5791 cv
315.46 75.7754 315.19 78.1875 315.19 80.8145 cv
315.19 103.863 li
312.417 103.863 li
312.417 81.0039 li
312.417 77.4521 312.851 74.3252 313.718 71.623 cv
314.585 68.9238 315.813 66.6855 317.407 64.916 cv
319 63.1445 320.882 61.8311 323.057 60.9746 cv
325.233 60.1191 327.672 59.6895 330.374 59.6895 cv
333.883 59.6895 336.988 60.4707 339.69 62.0313 cv
342.392 63.5918 344.493 65.9219 345.996 69.0225 cv
347.5 72.123 348.25 75.8809 348.25 80.2949 cv
cp
f
374.343 80.2949 mo
374.343 77.7617 374.018 75.9434 373.372 74.8398 cv
372.726 73.7363 371.672 73.1846 370.211 73.1846 cv
368.699 73.1846 367.618 73.7393 366.971 74.8477 cv
366.326 75.957 366.002 77.7725 366.002 80.2949 cv
366.002 103.863 li
363.228 103.863 li
363.228 79.9004 li
363.228 77.3887 363.797 75.1787 364.937 73.2715 cv
366.08 71.3633 367.834 70.4102 370.211 70.4102 cv
371.723 70.4102 372.997 70.8936 374.027 71.8613 cv
375.056 72.8281 375.809 74.0391 376.281 75.4941 cv
376.753 76.9502 376.991 78.4199 376.991 79.9004 cv
376.991 103.863 li
374.343 103.863 li
374.343 80.2949 li
cp
382.54 103.863 mo
379.763 103.863 li
379.763 80.043 li
379.763 77.9619 379.427 75.9883 378.747 74.123 cv
378.069 72.2578 377.014 70.7305 375.58 69.543 cv
374.146 68.3555 372.355 67.7617 370.211 67.7617 cv
367.195 67.7617 364.7 68.9912 362.724 71.4502 cv
361.904 72.5859 361.321 73.7842 360.974 75.0449 cv
360.627 76.3057 360.453 77.9727 360.453 80.043 cv
360.453 103.863 li
357.679 103.863 li
357.679 80.168 li
357.679 77.6465 357.904 75.6094 358.357 74.0605 cv
358.806 72.5098 359.594 71.0146 360.72 69.5742 cv
363.095 66.5156 366.259 64.9873 370.211 64.9873 cv
372.837 64.9873 375.083 65.707 376.951 67.1465 cv
378.816 68.5859 380.214 70.4727 381.144 72.8066 cv
382.073 75.1406 382.54 77.5938 382.54 80.168 cv
382.54 103.863 li
cp
387.964 103.863 mo
385.315 103.863 li
385.315 80.4199 li
385.315 77.2988 385.044 74.8164 384.51 72.9717 cv
383.975 71.1279 383.019 69.3906 381.64 67.7617 cv
378.542 64.0625 374.731 62.2119 370.211 62.2119 cv
365.492 62.2119 361.663 64.0625 358.718 67.7617 cv
357.332 69.4121 356.368 71.1543 355.833 72.9883 cv
355.297 74.8223 355.031 77.2988 355.031 80.4199 cv
355.031 103.863 li
352.255 103.863 li
352.255 80.6885 li
352.255 78.3145 352.394 76.2852 352.672 74.6035 cv
352.951 72.9219 353.4 71.4141 354.021 70.0781 cv
354.64 68.7441 355.492 67.3936 356.576 66.0273 cv
360.012 61.8018 364.557 59.6895 370.211 59.6895 cv
372.934 59.6895 375.453 60.2285 377.771 61.3047 cv
380.088 62.3838 382.066 63.957 383.704 66.0273 cv
385.315 67.9727 386.425 70.0059 387.041 72.1289 cv
387.655 74.252 387.964 77.1055 387.964 80.6885 cv
387.964 103.863 li
cp
f
420.25 92.623 mo
419.345 93.0117 418.449 93.2607 417.562 93.3711 cv
416.673 93.4814 415.545 93.5371 414.178 93.5371 cv
411.91 93.5371 409.843 93.0293 407.983 92.0156 cv
406.125 91 404.658 89.6113 403.585 87.8506 cv
402.514 86.0889 401.978 84.1504 401.978 82.0371 cv
401.978 79.9229 402.514 77.9961 403.585 76.2549 cv
404.658 74.5137 406.125 73.1475 407.983 72.1523 cv
409.843 71.1592 411.91 70.6621 414.178 70.6621 cv
416.976 70.6621 418.999 70.9639 420.25 71.5664 cv
420.25 74.3516 li
418.819 73.5742 417.096 73.1846 415.078 73.1846 cv
413.322 73.1846 411.653 73.5547 410.064 74.2959 cv
408.478 75.0361 407.196 76.1016 406.219 77.4883 cv
405.241 78.877 404.751 80.4785 404.751 82.2969 cv
404.751 83.8525 405.161 85.2793 405.974 86.5771 cv
406.788 87.875 407.881 88.8975 409.253 89.6436 cv
410.625 90.3906 412.093 90.7617 413.66 90.7617 cv
414.52 90.7617 415.167 90.8047 415.596 90.8887 cv
417.437 90.7305 418.988 90.3848 420.25 89.8477 cv
420.25 92.623 li
cp
420.25 98.0459 mo
418.241 98.6563 416.344 98.96 414.558 98.96 cv
411.352 98.96 408.368 98.2031 405.605 96.6895 cv
402.839 95.1758 400.64 93.1191 399.006 90.5176 cv
397.372 87.917 396.554 85.0918 396.554 82.0449 cv
396.554 79.0283 397.372 76.2227 399.006 73.626 cv
400.64 71.0303 402.839 68.9629 405.605 67.4219 cv
408.368 65.8828 411.352 65.1133 414.558 65.1133 cv
416.157 65.1133 418.05 65.416 420.25 66.0225 cv
420.25 68.7871 li
418.517 68.1875 416.665 67.8877 414.7 67.8877 cv
412.524 67.8877 410.484 68.2402 408.583 68.9453 cv
406.68 69.6504 405.031 70.6426 403.631 71.9248 cv
402.236 73.209 401.147 74.7148 400.369 76.4443 cv
399.591 78.1738 399.203 80.0391 399.203 82.0371 cv
399.203 84.6865 399.875 87.0898 401.221 89.2461 cv
402.568 91.4014 404.418 93.0957 406.779 94.332 cv
409.136 95.5664 411.776 96.1855 414.7 96.1855 cv
416.875 96.1855 418.725 95.9219 420.25 95.3965 cv
420.25 98.0459 li
cp
420.25 103.863 mo
417.874 104.557 415.545 104.904 413.266 104.904 cv
409.322 104.904 405.64 103.879 402.213 101.83 cv
398.788 99.7803 396.06 97.0088 394.031 93.5137 cv
392.003 90.0195 390.99 86.2383 390.99 82.1699 cv
390.99 78.166 391.996 74.4375 394.007 70.9863 cv
396.022 67.5332 398.739 64.7871 402.167 62.748 cv
405.593 60.709 409.292 59.6895 413.266 59.6895 cv
415.502 59.6895 417.831 60.0791 420.25 60.8564 cv
420.25 63.6309 li
418.104 62.8535 415.993 62.4648 413.914 62.4648 cv
410.294 62.4648 406.941 63.3457 403.845 65.1064 cv
400.749 66.8672 398.294 69.252 396.483 72.2578 cv
394.671 75.2656 393.764 78.5303 393.764 82.0527 cv
393.764 84.8916 394.283 87.541 395.323 90.001 cv
396.365 92.4609 397.81 94.5879 399.659 96.3809 cv
401.509 98.1738 403.65 99.5586 406.076 100.537 cv
408.505 101.514 411.074 102.003 413.786 102.003 cv
415.562 102.003 417.715 101.658 420.25 100.973 cv
420.25 103.863 li
cp
f
452.267 94.3096 mo
442.776 94.3096 li
440.274 94.3096 438.479 93.8477 437.386 92.9219 cv
436.292 91.998 435.747 90.6104 435.747 88.7607 cv
435.747 86.9004 436.249 85.5078 437.259 84.582 cv
438.267 83.6572 439.98 83.1953 442.399 83.1953 cv
452.267 83.1953 li
452.267 85.5918 li
443.548 85.5918 li
441.815 85.5918 440.542 85.8096 439.736 86.2461 cv
438.924 86.6816 438.519 87.4727 438.519 88.6191 cv
438.519 90.0586 438.892 90.958 439.64 91.3145 cv
440.384 91.6719 441.736 91.8516 443.691 91.8516 cv
452.267 91.8516 li
452.267 94.3096 li
cp
452.267 80.8145 mo
442.273 80.8145 li
441 80.8145 439.959 80.7227 439.152 80.5391 cv
438.341 80.3555 437.687 80.0684 437.186 79.6797 cv
436.688 79.29 436.325 78.7559 436.092 78.0723 cv
435.862 77.3887 435.747 76.5586 435.747 75.5811 cv
435.747 73.6465 436.208 72.3018 437.132 71.5449 cv
438.057 70.7871 439.722 70.4102 442.13 70.4102 cv
452.267 70.4102 li
452.267 72.8691 li
443.045 72.8691 li
441.3 72.8691 440.087 73.0742 439.411 73.4844 cv
438.733 73.8945 438.394 74.5723 438.394 75.5176 cv
438.394 76.4961 438.744 77.2129 439.442 77.6699 cv
440.14 78.126 441.384 78.3555 443.17 78.3555 cv
452.267 78.3555 li
452.267 80.8145 li
cp
452.267 99.0859 mo
441.294 99.0859 li
438.657 99.0859 436.015 98.4844 433.375 97.2813 cv
430.729 96.0781 429.407 93.5156 429.407 89.5957 cv
429.407 87.7988 429.653 86.3125 430.139 85.1348 cv
430.629 83.957 431.442 82.9277 432.577 82.0449 cv
431.526 81.2354 430.78 80.3086 430.337 79.2617 cv
429.898 78.2158 429.675 76.8789 429.675 75.25 cv
429.675 73.6523 429.965 72.1436 430.542 70.7246 cv
431.122 69.3066 431.888 68.2129 432.844 67.4473 cv
433.654 66.7314 434.516 66.251 435.43 66.0029 cv
436.343 65.7568 437.743 65.6338 439.623 65.6338 cv
452.267 65.6338 li
452.267 68.0303 li
439.039 68.0303 li
437.841 68.0303 436.944 68.127 436.343 68.3213 cv
435.747 68.5156 435.157 68.9336 434.58 69.5742 cv
434.01 70.2051 433.557 71.125 433.216 72.333 cv
432.875 73.543 432.704 74.8398 432.704 76.2275 cv
432.704 78.5293 433.716 80.4688 435.747 82.0449 cv
433.633 83.9785 432.577 86.1699 432.577 88.6191 cv
432.577 94 435.762 96.6895 442.13 96.6895 cv
452.267 96.6895 li
452.267 99.0859 li
cp
452.267 101.467 mo
452.267 103.863 li
438.519 103.863 li
435.915 103.863 433.442 103.439 431.111 102.594 cv
428.777 101.748 426.867 100.414 425.378 98.5898 cv
423.892 96.7666 423.127 94.4785 423.086 91.7246 cv
423.086 89.2861 423.312 87.3311 423.765 85.8594 cv
424.216 84.3887 425.045 83.1152 426.255 82.0449 cv
425.302 80.8145 424.623 79.541 424.209 78.2217 cv
423.797 76.9023 423.591 75.1816 423.591 73.0586 cv
423.591 71.0303 424.089 69.1152 425.089 67.3115 cv
426.088 65.5098 427.397 64.1094 429.015 63.1113 cv
430.457 62.1855 431.969 61.5801 433.552 61.29 cv
435.134 61.001 437.629 60.8564 441.037 60.8564 cv
452.267 60.8564 li
452.267 63.2529 li
440.271 63.2529 li
438.6 63.2529 437.207 63.3164 436.092 63.4414 cv
434.978 63.5684 434.03 63.7764 433.248 64.0645 cv
432.464 64.3535 431.704 64.75 430.968 65.2559 cv
429.646 66.1475 428.591 67.4014 427.809 69.0137 cv
427.025 70.6289 426.634 72.3232 426.634 74.0996 cv
426.634 76.001 426.847 77.5459 427.273 78.7344 cv
427.698 79.9219 428.409 81.0264 429.407 82.0449 cv
428.232 83.2217 427.411 84.4355 426.949 85.6865 cv
426.486 86.9365 426.255 88.582 426.255 90.6201 cv
426.255 93.0898 426.92 95.1377 428.25 96.7607 cv
429.577 98.3848 431.297 99.5752 433.406 100.332 cv
435.512 101.088 437.752 101.467 440.126 101.467 cv
452.267 101.467 li
cp
f
231.323 146.631 mo
231.323 144.5 li
233.759 144.637 235.512 144.902 236.58 145.297 cv
237.646 145.691 238.361 146.386 238.724 147.379 cv
239.085 148.375 239.267 149.977 239.267 152.186 cv
239.267 160.265 li
236.619 160.265 li
236.619 153.795 li
236.619 151.744 236.519 150.26 236.32 149.344 cv
236.119 148.43 235.66 147.77 234.941 147.364 cv
234.219 146.959 233.013 146.715 231.323 146.631 cv
cp
226.671 160.265 mo
226.671 126.813 li
229.446 126.813 li
231.926 126.813 233.879 127.002 235.302 127.379 cv
236.726 127.758 237.744 128.371 238.353 129.216 cv
238.962 130.062 239.267 131.199 239.267 132.629 cv
239.267 134.531 238.65 135.922 237.415 136.799 cv
236.181 137.677 234.149 138.178 231.323 138.305 cv
231.323 136.051 li
233.025 135.988 234.247 135.698 234.988 135.183 cv
235.728 134.668 236.099 133.818 236.099 132.629 cv
236.099 131.242 235.675 130.336 234.831 129.91 cv
233.984 129.484 232.189 129.272 229.446 129.272 cv
229.446 160.265 li
226.671 160.265 li
cp
223.896 160.265 mo
221.121 160.265 li
221.121 122.035 li
229.446 122.035 li
231.197 122.035 li
235.285 122.16 238.316 122.871 240.292 124.164 cv
243.14 126.149 244.565 128.971 244.565 132.626 cv
244.565 133.855 244.302 135.082 243.776 136.305 cv
243.25 137.529 242.539 138.591 241.64 139.488 cv
240.742 140.387 239.778 141.004 238.748 141.34 cv
240.513 141.896 241.966 142.835 243.107 144.154 cv
244.246 145.475 244.816 147.186 244.816 149.289 cv
244.816 160.265 li
242.042 160.265 li
242.042 151.145 li
242.042 148.82 241.646 147.029 240.853 145.771 cv
240.058 144.516 238.897 143.656 237.368 143.192 cv
235.839 142.73 233.824 142.498 231.323 142.498 cv
231.323 140.307 li
235.085 140.149 237.812 139.436 239.503 138.163 cv
241.197 136.893 242.042 134.963 242.042 132.377 cv
242.042 130.527 241.6 129.019 240.718 127.854 cv
239.835 126.686 238.458 125.824 236.587 125.268 cv
234.716 124.711 232.335 124.432 229.446 124.432 cv
223.896 124.432 li
223.896 160.265 li
cp
218.474 160.265 mo
215.699 160.265 li
215.699 117.259 li
229.446 117.259 li
231.841 117.259 li
234.732 117.322 237.144 117.566 239.079 117.992 cv
241.012 118.418 242.709 119.098 244.169 120.033 cv
247.962 122.545 249.859 126.116 249.859 130.749 cv
249.859 133.471 249.716 135.572 249.431 137.053 cv
249.146 138.535 248.402 139.964 247.197 141.34 cv
248.455 142.707 249.277 144.076 249.662 145.448 cv
250.047 146.82 250.24 148.983 250.24 151.938 cv
250.24 160.265 li
247.452 160.265 li
247.452 150.313 li
247.452 147.979 247.148 146.129 246.541 144.762 cv
245.933 143.395 244.949 142.295 243.587 141.465 cv
244.843 140.51 245.757 139.168 246.333 137.439 cv
246.909 135.711 247.197 133.78 247.197 131.647 cv
247.197 127.467 245.517 124.262 242.158 122.035 cv
239.668 120.449 236.14 119.654 231.572 119.654 cv
229.446 119.654 li
218.474 119.654 li
218.474 160.265 li
cp
1 .73 0 0 cmyk
f
275.748 140.702 mo
275.748 117.133 li
278.395 117.133 li
278.395 141.08 li
278.395 142.625 278.167 144.121 277.71 145.564 cv
277.252 147.01 276.514 148.207 275.495 149.158 cv
274.475 150.109 273.183 150.586 271.618 150.586 cv
269.957 150.586 268.603 150.123 267.558 149.199 cv
266.511 148.273 265.763 147.089 265.312 145.644 cv
264.86 144.198 264.632 142.676 264.632 141.08 cv
264.632 117.133 li
267.408 117.133 li
267.408 140.702 li
267.408 145.389 268.811 147.8 271.618 147.938 cv
272.91 147.938 273.921 147.324 274.653 146.101 cv
275.382 144.877 275.748 143.076 275.748 140.702 cv
cp
283.946 117.133 mo
283.946 140.827 li
283.946 143.36 283.722 145.396 283.275 146.936 cv
282.829 148.475 282.038 149.972 280.903 151.422 cv
279.778 152.883 278.409 154.011 276.795 154.812 cv
275.182 155.608 273.457 156.01 271.618 156.01 cv
267.666 156.01 264.501 154.48 262.126 151.422 cv
261.003 149.992 260.214 148.479 259.763 146.88 cv
259.31 145.283 259.084 143.223 259.084 140.702 cv
259.084 117.133 li
261.859 117.133 li
261.859 140.953 li
261.859 143.024 262.033 144.682 262.378 145.927 cv
262.726 147.174 263.31 148.379 264.13 149.546 cv
266.105 152.005 268.6 153.233 271.618 153.233 cv
273.76 153.233 275.55 152.647 276.985 151.477 cv
278.419 150.306 279.476 148.787 280.154 146.92 cv
280.833 145.055 281.171 143.066 281.171 140.953 cv
281.171 117.133 li
283.946 117.133 li
cp
289.37 117.133 mo
289.37 140.448 li
289.37 143.959 289.058 146.771 288.438 148.883 cv
287.818 150.996 286.708 153.023 285.112 154.969 cv
283.483 157.018 281.506 158.586 279.185 159.674 cv
276.861 160.762 274.338 161.305 271.618 161.305 cv
265.963 161.305 261.417 159.193 257.98 154.969 cv
256.897 153.603 256.046 152.255 255.426 150.924 cv
254.806 149.595 254.357 148.101 254.08 146.439 cv
253.8 144.779 253.661 142.781 253.661 140.448 cv
253.661 117.133 li
256.435 117.133 li
256.435 140.702 li
256.435 143.77 256.701 146.215 257.232 148.031 cv
257.762 149.85 258.727 151.625 260.125 153.359 cv
263.109 156.977 266.941 158.783 271.618 158.783 cv
276.21 158.783 280.02 156.977 283.046 153.359 cv
284.434 151.647 285.393 149.876 285.923 148.047 cv
286.454 146.219 286.719 143.77 286.719 140.702 cv
286.719 117.133 li
289.37 117.133 li
cp
f
315.584 136.696 mo
315.584 134.164 315.263 132.346 314.617 131.242 cv
313.969 130.139 312.916 129.587 311.456 129.587 cv
309.942 129.587 308.863 130.141 308.216 131.25 cv
307.57 132.359 307.246 134.174 307.246 136.696 cv
307.246 160.265 li
304.471 160.265 li
304.471 136.303 li
304.471 133.791 305.041 131.581 306.182 129.674 cv
307.323 127.766 309.08 126.813 311.456 126.813 cv
312.968 126.813 314.24 127.296 315.27 128.263 cv
316.3 129.23 317.05 130.441 317.524 131.896 cv
317.998 133.353 318.234 134.82 318.234 136.303 cv
318.234 160.265 li
315.584 160.265 li
315.584 136.696 li
cp
323.783 160.265 mo
321.008 160.265 li
321.008 136.445 li
321.008 134.363 320.669 132.391 319.992 130.525 cv
319.314 128.659 318.257 127.133 316.824 125.945 cv
315.387 124.758 313.6 124.164 311.456 124.164 cv
308.439 124.164 305.943 125.394 303.967 127.854 cv
303.147 128.987 302.563 130.186 302.217 131.447 cv
301.871 132.708 301.697 134.373 301.697 136.445 cv
301.697 160.265 li
298.922 160.265 li
298.922 136.57 li
298.922 134.049 299.147 132.012 299.601 130.461 cv
300.052 128.912 300.84 127.416 301.963 125.977 cv
304.339 122.918 307.503 121.389 311.456 121.389 cv
314.083 121.389 316.33 122.108 318.196 123.549 cv
320.06 124.988 321.458 126.875 322.388 129.208 cv
323.318 131.542 323.783 133.996 323.783 136.57 cv
323.783 160.265 li
cp
329.208 160.265 mo
326.557 160.265 li
326.557 136.823 li
326.557 133.701 326.291 131.219 325.754 129.373 cv
325.219 127.529 324.262 125.793 322.885 124.164 cv
319.785 120.463 315.974 118.615 311.456 118.615 cv
306.736 118.615 302.905 120.463 299.962 124.164 cv
298.577 125.814 297.613 127.556 297.079 129.389 cv
296.542 131.225 296.273 133.701 296.273 136.823 cv
296.273 160.265 li
293.5 160.265 li
293.5 137.09 li
293.5 134.715 293.639 132.688 293.917 131.006 cv
294.196 129.324 294.644 127.816 295.264 126.48 cv
295.884 125.146 296.736 123.796 297.82 122.43 cv
301.256 118.205 305.799 116.092 311.456 116.092 cv
314.176 116.092 316.697 116.631 319.015 117.707 cv
321.332 118.785 323.31 120.359 324.949 122.43 cv
326.557 124.374 327.669 126.408 328.285 128.53 cv
328.898 130.653 329.208 133.507 329.208 137.09 cv
329.208 160.265 li
cp
f
359.678 140.702 mo
356.757 138.326 355.297 135.42 355.297 131.983 cv
355.297 130.049 355.776 128.263 356.733 126.623 cv
357.687 124.982 358.992 123.68 360.643 122.714 cv
362.292 121.746 364.083 121.263 366.017 121.263 cv
367.951 121.263 369.744 121.746 371.393 122.714 cv
373.044 123.68 374.345 124.979 375.302 126.607 cv
376.261 128.236 376.737 130.007 376.737 131.92 cv
376.737 133.906 376.176 135.867 375.053 137.801 cv
372.792 141.899 369.864 146.997 366.27 153.092 cv
381.893 153.092 li
381.893 155.489 li
361.494 155.489 li
372.797 136.57 li
373.66 135.078 374.087 133.549 374.087 131.983 cv
374.087 130.563 373.723 129.23 372.993 127.979 cv
372.263 126.729 371.274 125.738 370.028 125.008 cv
368.782 124.277 367.447 123.912 366.017 123.912 cv
364.545 123.912 363.19 124.277 361.95 125.008 cv
360.709 125.738 359.734 126.726 359.019 127.971 cv
358.302 129.216 357.946 130.553 357.946 131.983 cv
357.946 134.695 358.997 136.893 361.099 138.573 cv
359.678 140.702 li
cp
362.33 136.303 mo
361.172 135.325 360.594 133.928 360.594 132.108 cv
360.594 130.563 361.122 129.242 362.179 128.145 cv
363.237 127.045 364.515 126.497 366.017 126.497 cv
367.522 126.497 368.8 127.038 369.857 128.12 cv
370.914 129.203 371.441 130.491 371.441 131.983 cv
371.441 133.172 371.135 134.228 370.526 135.152 cv
357.82 157.869 li
381.893 157.869 li
381.893 160.265 li
352.902 160.265 li
367.247 135.404 li
368.277 133.765 368.792 132.604 368.792 131.92 cv
368.792 131.143 368.517 130.486 367.971 129.949 cv
367.426 129.412 366.774 129.145 366.017 129.145 cv
365.186 129.145 364.517 129.41 364.007 129.941 cv
363.497 130.473 363.243 131.132 363.243 131.92 cv
363.243 132.436 363.458 133.014 363.888 133.654 cv
362.33 136.303 li
cp
381.893 150.713 mo
370.792 150.713 li
371.74 149.008 372.537 147.574 373.184 146.406 cv
373.83 145.242 374.458 144.111 375.067 143.02 cv
375.675 141.924 376.4 140.66 377.243 139.219 cv
378.671 136.561 379.385 134.127 379.385 131.92 cv
379.385 129.545 378.782 127.348 377.574 125.33 cv
376.366 123.313 374.731 121.709 372.671 120.521 cv
370.611 119.334 368.392 118.74 366.017 118.74 cv
363.621 118.74 361.391 119.332 359.325 120.514 cv
357.26 121.695 355.63 123.305 354.44 125.338 cv
353.247 127.372 352.647 129.566 352.647 131.92 cv
352.647 136.355 354.587 140.033 358.466 142.957 cv
357.03 145.289 li
352.345 141.662 350 137.207 350 131.92 cv
350 129.051 350.71 126.404 352.127 123.982 cv
353.547 121.56 355.486 119.639 357.946 118.22 cv
360.406 116.801 363.095 116.092 366.017 116.092 cv
368.856 116.092 371.512 116.805 373.986 118.228 cv
376.46 119.652 378.422 121.568 379.867 123.975 cv
381.31 126.381 382.036 128.987 382.036 131.793 cv
382.036 134.463 381.195 137.391 379.511 140.574 cv
377.967 143.081 li
375.053 148.253 li
381.893 148.253 li
381.893 150.713 li
cp
0 0 0 1 cmyk
f
415.409 138.699 mo
415.409 137.459 415.174 136.279 414.708 135.16 cv
414.24 134.041 413.598 133.066 412.784 132.235 cv
411.967 131.405 411.024 130.756 409.945 130.288 cv
408.869 129.82 407.742 129.587 406.566 129.587 cv
404.957 129.587 403.471 129.992 402.112 130.801 cv
400.749 131.609 399.667 132.717 398.864 134.119 cv
398.06 135.522 397.658 137.049 397.658 138.699 cv
397.658 140.381 398.057 141.934 398.855 143.357 cv
399.653 144.781 400.738 145.9 402.104 146.715 cv
403.467 147.529 404.957 147.938 406.566 147.938 cv
408.172 147.938 409.652 147.52 411.003 146.684 cv
412.353 145.849 413.424 144.716 414.219 143.286 cv
415.011 141.857 415.409 140.328 415.409 138.699 cv
cp
418.185 138.825 mo
418.185 140.898 417.658 142.819 416.607 144.586 cv
415.555 146.355 414.136 147.756 412.35 148.787 cv
410.563 149.818 408.633 150.333 406.566 150.333 cv
404.473 150.333 402.53 149.824 400.732 148.802 cv
398.935 147.782 397.51 146.39 396.46 144.627 cv
395.408 142.864 394.883 140.93 394.883 138.825 cv
394.883 136.668 395.4 134.688 396.436 132.881 cv
397.47 131.076 398.885 129.656 400.678 128.619 cv
402.468 127.582 404.432 127.064 406.566 127.064 cv
408.644 127.064 410.58 127.585 412.366 128.627 cv
414.153 129.67 415.568 131.093 416.616 132.897 cv
417.66 134.701 418.185 136.679 418.185 138.825 cv
cp
420.958 138.818 mo
420.958 136.221 420.304 133.807 418.995 131.578 cv
417.688 129.348 415.926 127.576 413.713 126.262 cv
411.501 124.947 409.12 124.289 406.566 124.289 cv
403.927 124.289 401.5 124.937 399.281 126.229 cv
397.065 127.523 395.313 129.284 394.031 131.514 cv
392.749 133.744 392.109 136.178 392.109 138.818 cv
392.109 141.394 392.757 143.78 394.054 145.979 cv
395.354 148.176 397.108 149.912 399.32 151.185 cv
401.533 152.457 403.948 153.092 406.566 153.092 cv
409.12 153.092 411.501 152.451 413.713 151.169 cv
415.926 149.885 417.688 148.145 418.995 145.946 cv
420.304 143.75 420.958 141.373 420.958 138.818 cv
cp
423.607 138.825 mo
423.607 141.852 422.837 144.68 421.305 147.307 cv
419.772 149.934 417.701 152.018 415.09 153.558 cv
412.478 155.097 409.639 155.867 406.573 155.867 cv
403.484 155.867 400.621 155.107 397.985 153.588 cv
395.348 152.07 393.246 149.994 391.681 147.361 cv
390.117 144.729 389.333 141.883 389.333 138.825 cv
389.333 135.703 390.104 132.813 391.649 130.154 cv
393.193 127.495 395.289 125.391 397.929 123.84 cv
400.571 122.291 403.452 121.516 406.573 121.516 cv
409.627 121.516 412.468 122.296 415.09 123.855 cv
417.71 125.417 419.786 127.529 421.313 130.193 cv
422.843 132.858 423.607 135.734 423.607 138.825 cv
cp
426.396 138.951 mo
426.396 135.336 425.502 131.983 423.708 128.893 cv
421.915 125.803 419.497 123.359 416.449 121.563 cv
413.4 119.766 410.105 118.867 406.566 118.867 cv
402.94 118.867 399.6 119.754 396.547 121.531 cv
393.493 123.307 391.083 125.73 389.318 128.799 cv
387.552 131.867 386.668 135.209 386.668 138.825 cv
386.668 142.41 387.561 145.723 389.341 148.766 cv
391.124 151.807 393.542 154.217 396.601 155.993 cv
399.658 157.77 402.981 158.657 406.566 158.657 cv
410.096 158.657 413.387 157.764 416.442 155.977 cv
419.494 154.191 421.915 151.778 423.708 148.74 cv
425.502 145.703 426.396 142.44 426.396 138.951 cv
cp
429.171 138.951 mo
429.171 142.957 428.151 146.674 426.113 150.104 cv
424.074 153.537 421.318 156.262 417.843 158.279 cv
414.372 160.297 410.612 161.305 406.566 161.305 cv
402.498 161.305 398.722 160.303 395.236 158.296 cv
391.753 156.287 388.993 153.56 386.954 150.111 cv
384.915 146.666 383.895 142.903 383.895 138.825 cv
383.895 134.695 384.907 130.887 386.927 127.403 cv
388.953 123.919 391.701 121.162 395.174 119.135 cv
398.648 117.106 402.444 116.092 406.566 116.092 cv
410.612 116.092 414.372 117.117 417.843 119.166 cv
421.318 121.216 424.074 123.996 426.113 127.506 cv
428.151 131.017 429.171 134.831 429.171 138.951 cv
cp
f
462.232 138.699 mo
462.232 137.459 461.998 136.279 461.531 135.16 cv
461.061 134.041 460.419 133.066 459.607 132.235 cv
458.792 131.405 457.845 130.756 456.767 130.288 cv
455.692 129.82 454.562 129.587 453.387 129.587 cv
451.778 129.587 450.293 129.992 448.932 130.801 cv
447.572 131.609 446.49 132.717 445.685 134.119 cv
444.881 135.522 444.481 137.049 444.481 138.699 cv
444.481 140.381 444.879 141.934 445.678 143.357 cv
446.476 144.781 447.559 145.9 448.925 146.715 cv
450.292 147.529 451.778 147.938 453.387 147.938 cv
454.994 147.938 456.474 147.52 457.825 146.684 cv
459.174 145.849 460.246 144.716 461.042 143.286 cv
461.833 141.857 462.232 140.328 462.232 138.699 cv
cp
465.006 138.825 mo
465.006 140.898 464.479 142.819 463.43 144.586 cv
462.376 146.355 460.96 147.756 459.173 148.787 cv
457.387 149.818 455.458 150.333 453.387 150.333 cv
451.295 150.333 449.351 149.824 447.554 148.802 cv
445.756 147.782 444.333 146.39 443.281 144.627 cv
442.23 142.864 441.705 140.93 441.705 138.825 cv
441.705 136.668 442.222 134.688 443.259 132.881 cv
444.292 131.076 445.706 129.656 447.5 128.619 cv
449.292 127.582 451.253 127.064 453.387 127.064 cv
455.467 127.064 457.402 127.585 459.188 128.627 cv
460.975 129.67 462.389 131.093 463.437 132.897 cv
464.482 134.701 465.006 136.679 465.006 138.825 cv
cp
467.779 138.818 mo
467.779 136.221 467.125 133.807 465.818 131.578 cv
464.509 129.348 462.749 127.576 460.537 126.262 cv
458.325 124.947 455.942 124.289 453.387 124.289 cv
450.75 124.289 448.322 124.937 446.105 126.229 cv
443.886 127.523 442.136 129.284 440.854 131.514 cv
439.573 133.744 438.93 136.178 438.93 138.818 cv
438.93 141.394 439.58 143.78 440.876 145.979 cv
442.175 148.176 443.93 149.912 446.143 151.185 cv
448.356 152.457 450.771 153.092 453.387 153.092 cv
455.942 153.092 458.325 152.451 460.537 151.169 cv
462.749 149.885 464.509 148.145 465.818 145.946 cv
467.125 143.75 467.779 141.373 467.779 138.818 cv
cp
470.427 138.825 mo
470.427 141.852 469.662 144.68 468.127 147.307 cv
466.594 149.934 464.523 152.018 461.913 153.558 cv
459.3 155.097 456.461 155.867 453.396 155.867 cv
450.307 155.867 447.445 155.107 444.806 153.588 cv
442.169 152.07 440.069 149.994 438.505 147.361 cv
436.94 144.729 436.156 141.883 436.156 138.825 cv
436.156 135.703 436.928 132.813 438.473 130.154 cv
440.017 127.495 442.11 125.391 444.751 123.84 cv
447.394 122.291 450.276 121.516 453.396 121.516 cv
456.452 121.516 459.291 122.296 461.913 123.855 cv
464.532 125.417 466.607 127.529 468.137 130.193 cv
469.666 132.858 470.427 135.734 470.427 138.825 cv
cp
473.219 138.951 mo
473.219 135.336 472.322 131.983 470.532 128.893 cv
468.738 125.803 466.319 123.359 463.271 121.563 cv
460.224 119.766 456.928 118.867 453.387 118.867 cv
449.761 118.867 446.421 119.754 443.369 121.531 cv
440.317 123.307 437.905 125.73 436.14 128.799 cv
434.375 131.867 433.492 135.209 433.492 138.825 cv
433.492 142.41 434.382 145.723 436.164 148.766 cv
437.946 151.807 440.365 154.217 443.422 155.993 cv
446.483 157.77 449.803 158.657 453.387 158.657 cv
456.917 158.657 460.211 157.764 463.263 155.977 cv
466.317 154.191 468.738 151.778 470.532 148.74 cv
472.322 145.703 473.219 142.44 473.219 138.951 cv
cp
475.994 138.951 mo
475.994 142.957 474.975 146.674 472.935 150.104 cv
470.897 153.537 468.138 156.262 464.666 158.279 cv
461.195 160.297 457.433 161.305 453.387 161.305 cv
449.321 161.305 445.543 160.303 442.06 158.296 cv
438.575 156.287 435.814 153.56 433.776 150.111 cv
431.736 146.666 430.717 142.903 430.717 138.825 cv
430.717 134.695 431.728 130.887 433.751 127.403 cv
435.775 123.919 438.523 121.162 441.997 119.135 cv
445.47 117.106 449.266 116.092 453.387 116.092 cv
457.433 116.092 461.195 117.117 464.666 119.166 cv
468.138 121.216 470.897 123.996 472.935 127.506 cv
474.975 131.017 475.994 134.831 475.994 138.951 cv
cp
f
496.205 130.1 mo
496.205 129.847 li
496.205 129.088 495.964 128.456 495.488 127.949 cv
495.008 127.443 494.367 127.19 493.557 127.19 cv
492.715 127.19 492.043 127.438 491.537 127.934 cv
491.033 128.429 490.781 129.109 490.781 129.973 cv
490.781 130.754 491.04 131.412 491.56 131.949 cv
492.08 132.486 492.745 132.755 493.557 132.755 cv
494.29 132.755 494.917 132.508 495.432 132.013 cv
495.947 131.518 496.205 130.88 496.205 130.1 cv
cp
496.914 145.604 mo
496.914 144.586 496.588 143.75 495.937 143.098 cv
495.284 142.446 494.448 142.12 493.429 142.12 cv
492.443 142.12 491.603 142.453 490.916 143.121 cv
490.228 143.787 489.884 144.616 489.884 145.604 cv
489.884 146.623 490.224 147.47 490.908 148.141 cv
491.59 148.814 492.432 149.151 493.429 149.151 cv
494.427 149.151 495.258 148.819 495.92 148.158 cv
496.582 147.496 496.914 146.645 496.914 145.604 cv
cp
498.459 130.233 mo
498.459 131.137 498.247 131.943 497.821 132.654 cv
497.394 133.362 496.806 133.912 496.054 134.3 cv
495.302 134.689 494.468 134.884 493.557 134.884 cv
492.117 134.884 490.918 134.414 489.961 133.473 cv
489.004 132.532 488.529 131.369 488.529 129.981 cv
488.529 128.468 489 127.248 489.945 126.322 cv
490.892 125.398 492.097 124.936 493.557 124.936 cv
494.997 124.936 496.172 125.406 497.088 126.346 cv
498.001 127.287 498.459 128.457 498.459 129.855 cv
498.459 130.233 li
cp
499.373 145.604 mo
499.373 147.316 498.811 148.734 497.685 149.861 cv
496.561 150.986 495.142 151.547 493.429 151.547 cv
491.707 151.547 490.263 150.982 489.102 149.852 cv
487.941 148.723 487.361 147.307 487.361 145.604 cv
487.361 143.933 487.955 142.535 489.142 141.41 cv
490.33 140.285 491.76 139.724 493.429 139.724 cv
495.142 139.724 496.561 140.281 497.685 141.395 cv
498.811 142.51 499.373 143.912 499.373 145.604 cv
cp
492.657 137.217 mo
491.261 137.321 489.972 137.762 488.796 138.532 cv
487.618 139.306 486.685 140.311 485.998 141.545 cv
485.309 142.779 484.962 144.091 484.962 145.479 cv
484.962 147.043 485.333 148.486 486.066 149.806 cv
486.802 151.125 487.807 152.166 489.082 152.928 cv
490.357 153.688 491.765 154.069 493.296 154.069 cv
494.85 154.069 496.29 153.693 497.611 152.941 cv
498.935 152.191 499.976 151.172 500.739 149.884 cv
501.5 148.596 501.879 147.211 501.879 145.73 cv
501.879 144.258 501.548 142.899 500.888 141.654 cv
500.228 140.41 499.326 139.393 498.182 138.604 cv
497.04 137.816 495.777 137.354 494.393 137.217 cv
496.281 136.943 497.807 136.177 498.975 134.915 cv
500.139 133.654 500.72 132.094 500.72 130.233 cv
500.72 129.855 li
500.72 127.826 500.052 126.145 498.719 124.811 cv
497.386 123.475 495.665 122.808 493.551 122.808 cv
491.368 122.808 489.596 123.46 488.235 124.764 cv
486.874 126.066 486.192 127.805 486.192 129.981 cv
486.192 131.84 486.799 133.463 488.015 134.845 cv
489.229 136.227 490.775 137.018 492.657 137.217 cv
cp
500.078 136.949 mo
501.403 137.99 502.457 139.273 503.235 140.799 cv
504.014 142.324 504.403 143.971 504.403 145.737 cv
504.403 147.683 503.911 149.482 502.927 151.134 cv
501.943 152.785 500.608 154.088 498.918 155.038 cv
497.231 155.991 495.357 156.465 493.296 156.465 cv
491.285 156.465 489.455 155.981 487.796 155.016 cv
486.138 154.047 484.835 152.724 483.876 151.047 cv
482.921 149.37 482.442 147.515 482.442 145.484 cv
482.442 143.78 482.847 142.162 483.661 140.625 cv
484.473 139.09 485.574 137.822 486.965 136.823 cv
484.947 135.016 483.94 132.734 483.94 129.981 cv
483.94 128.109 484.353 126.461 485.184 125.029 cv
486.015 123.601 487.159 122.498 488.619 121.72 cv
490.079 120.943 491.723 120.553 493.551 120.553 cv
495.401 120.553 497.042 120.955 498.474 121.759 cv
499.91 122.564 501.019 123.665 501.801 125.062 cv
502.583 126.461 502.976 128.016 502.976 129.729 cv
502.976 130.375 li
502.976 132.971 502.009 135.162 500.078 136.949 cv
cp
503.243 136.57 mo
504.5 134.75 505.125 132.726 505.125 130.496 cv
505.125 129.722 li
505.125 127.619 504.642 125.701 503.676 123.971 cv
502.708 122.24 501.358 120.881 499.622 119.893 cv
497.887 118.903 495.908 118.41 493.689 118.41 cv
491.953 118.41 490.357 118.684 488.902 119.23 cv
487.448 119.777 486.189 120.559 485.13 121.573 cv
484.076 122.589 483.257 123.814 482.68 125.25 cv
482.099 126.686 481.812 128.261 481.812 129.976 cv
481.812 132.5 482.429 134.656 483.664 136.445 cv
481.177 139.072 479.934 142.082 479.934 145.479 cv
479.934 147.938 480.532 150.2 481.723 152.273 cv
482.916 154.342 484.542 155.966 486.595 157.143 cv
488.65 158.32 490.885 158.91 493.305 158.91 cv
495.793 158.91 498.088 158.326 500.184 157.158 cv
502.283 155.993 503.929 154.395 505.125 152.367 cv
506.325 150.338 506.924 148.126 506.924 145.73 cv
506.924 142.209 505.697 139.156 503.243 136.57 cv
cp
506.159 135.656 mo
508.268 138.746 509.322 141.998 509.322 145.414 cv
509.322 148.273 508.606 150.924 507.178 153.369 cv
505.747 155.813 503.81 157.746 501.359 159.169 cv
498.911 160.594 496.266 161.305 493.429 161.305 cv
490.592 161.305 487.95 160.594 485.5 159.169 cv
483.05 157.746 481.112 155.813 479.682 153.369 cv
478.255 150.924 477.538 148.273 477.538 145.414 cv
477.538 141.694 478.619 138.441 480.778 135.656 cv
479.964 133.564 479.557 131.674 479.557 129.981 cv
479.557 127.469 480.179 125.15 481.424 123.021 cv
482.669 120.892 484.353 119.205 486.481 117.959 cv
488.606 116.715 490.928 116.092 493.437 116.092 cv
496.011 116.092 498.368 116.718 500.51 117.968 cv
502.655 119.219 504.343 120.914 505.585 123.053 cv
506.824 125.191 507.446 127.542 507.446 130.107 cv
507.446 132.02 507.019 133.869 506.159 135.656 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 13.0
%%AI8_CreatorVersion: 13.0.0
%%For: (Tom) ()
%%Title: (front.eps)
%%CreationDate: 4/19/2008 1:22 PM
%AI9_DataStream
%Gb"-6>H_>UE?=s/5lY9+#`t42me]FuP*Y+GcE]#mG%)[%"F=oWB#KTmEQ^l8f:T4h=4Lf>3P"mMka^Sh_!i-8Z"K-3<**/Qo`m_V
%l%cJ"J+_t&DgqQAs8)7QR1H.ULYBU4/*ZrgqnWgBbF;kOrr&h@b8s`[eaV[:IC66LA]Q+!T>['Rj?gWYfn\aohn=L=l/s-Q4MUmo
%miOd,rUB@O5CRkTj/_nbJ+MqalX*s]r6su@Da40c_b]1(HN*=.btn>=rou/o]RBaF+$RDcp$#n-b$[oXqWZUMhL>.,?bcL$f,rW=
%6Xr7YMECclhlkm;a7O#`s6BRSgTSA<rU\S.l`^<Qh>6m'o=sp)nR$b@qU;?"R5LF(,CTKZJ,6@0?iU,SLNhOo6M:A-pl!b-hX]TR
%KQd6/If'cPs&ML*o^Db1s5Op!J+MgsT0C!co]F'gs7ml[gY]bppUdo<5/$*Tbb;_O%s_4PYQ#J7f33."3$)OTW3\VY&bI/nI:*$5
%c0KlXn\]j%rT^H8+*AHNo't0^hu)AI=k`^\T1S!KI/Wd3a+&@6k0od2?rIj2Da&RAqCOE#q-Uja74X$?#5k+%q"n,7J+NNc,)m+O
%^S^i*pgF='gY/U(=+>VrEVmi7rU0@U^]3f\Gb?_\U7'[JX\oN`[5quYoU1m.6gRf;)Yq9J];7]i#P?h6/bmZDLAp#L2nsY0rl;(#
%Y5A-h5JHs9\%*5W5PZs.jlP.oJ)^KNXD?sj5.uFFA,Ym@^W4+Z^-[)?2h+=>r_N!tHMm8m[Xa2"#<uL`rI0mLgCM'HJ+^SG^TB-&
%rgcf<JRABCL\69Yn#>@9J+%=;ho;jKrq>[NO8o%9LTc4%=7:Y;iVVO0iD72anB\9[IfAW]^T=4$qYaL1s3ZI.o%+-Ba[2WVquPa!
%=)WQ^UMoAeQ[aDWcQD#Xq>ED@E(B9@hkmHhs7kl)c/[dOrqV&WIf?^'XapH9QX@N'o_R<aolF=9O73,:^!-93f>%?PLVNlYiN3Pe
%)sBN>j;64dDuPgnLc)p>Jb>*(kB?k"lL!=b^\RZiGQ76rq,[MSrnTb[kI9@2Zg6h'I-j)e?e>>WRf<%c&bImJg8tr/s2dHErPedS
%hk?&+opb]6UHe7anWj.DmWWal5Q((Z?N#mlCAF3#bAT39T=t6s\mm\Q@.Z[ss2403++C\9J0D,I#QO\%O2(Qm8*fQCpTHbEn3:%4
%baEqZC2pj![pmRnXhS&0F6AK8?@3-PaoB@RX2fAmk&4W,Wu^3pU[NtnT7$ZciSbmYp&!YDRf7gfm2u@!J,AR)VuO0/Isi^UJ+N.o
%rb$KNCAm-6J+<L+^$&teQ`7Ii0^>V&:[@_#a*=1/;j_^FT2'VP02'GTEUW'3^@h)(a1:W,n?S:$-,.U2XoG9Lf3j)Tk=[S9(15&m
%g;;I68mU&?I&X4eYP'/bn"DoN=@Q>1K[pirD5(SLrS`lcW:f99gdCH^@h+\@Qh%GK&f8(W1g:`7%6-i^='nU6diR)-b=nJH]Hk-J
%b(G5<NeWCtnSiPmX+t&c/cX@./8"U^2pWao]__EDLE@3'_n<\rlc_S>pkrL.qFHt#%tFH)T0+b]knbF*Yn6W(L]9Uks!.JtQ8R*j
%Y/L]#f0&aa9g"j(RaQRqf?l,MR"r0e-auF+TiI'MiLd@R%aTs.BoPkg1sp@"go/9>Oq?T7pBimq,sqtUkBsd"NTVt,GdM:lklU/(
%?2%UUmM:B/,c/+p2g<E@fa?@uXTI'.LG"'^1TiV#;NDla8/I]C.4]Q>o=.Gg?Z)#*iVVN%%mU!>_a"-E>-L84m7[D-?*IXBc8(b`
%euNO;JZMrA01Y!]d)O6@)kW8,Am9TuYf=iKFN!kE$<b.^7\X`8HuY>o*Nq9D4cHcI3/<#Ef;W.l3e4U:Uq]]@]pUSO>+&LAK.s;B
%f-_E:F1-i+pZd[(CX2-p52PnS2KI:8j<d+Z0ADGQP7AZJH,dG&)5r<ff$?C,IeCJ."c[4%O.,B]ET`h^j0]LOKID)(o&BoE1q6%^
%>QVO]RDH2[6TaLIF\3B.oJJ*!6XpI.1L<3P\MdX`/mucJL<p^^k/jcOPn^??8\?U#@V&g1T6XSj5IWCq&sN+,_Uht5D*21N4D8,N
%/PD.%QXqcGOO]B!fG^Wp>cGib[+'@0oK/bJ[=s;NiBi16-j%*Hl&_gCrrLBIB7Fhn12H]+_f`K/++kP=RYbp#M9Ibiq/lsEP*I8@
%PJ1t-KGu-O\Aj[7ShW`P]+1F\Cb0V_XArrE.9P/p`Xp]%)+hm'd\<E_i*FtiD-+pZ6.R1qq-7:uPmcQ^34>9`diCXE5?Q.Q(NhGc
%,CIAfQWeK0@nJMs6rF$t4EX^h:DI[<CWqC.g1Ae"QE!8$CJl`q"kVj5"Y;LF8#+:N3QVh!>D$#9@^0UWoOt(B)ENh=S+;ngFj5]2
%PCD"MMNOm?j$1+ID&ocCBnA2K'taWTj@%NUajoqK/bg\Eh2VBE\[/cb8,(/8>U.T(.pYnCLj?l!e6>o--%ip\/m+N=R*]Cc7NF;6
%=_fI0q]DC,orIOF:TS?R6WYn4Z7oHC&X?/Og747>;;O*A<$L?e3U^Z6lON5P,d=M;_0\6'_bF=]PtE]FAg)*KnnAdDTF:4*n,fi\
%\[F(XBt$K`,WA/g)eEO\q')/6XhV9\<(]BE6==qU*Oukbhf2?Sp9J3OYgAa/6iq9Dp-0*p(5&f<jOtOD3[?>jKI$,._X<`&`+NER
%or06Lna;^O3aft9L,,fLQ.>Eaj@RA)Ql4`e,SanTU=TfF\qJbu>AO(/Nn8i1",C2udOO-<CIj_(i>mUGZ:#lKJQdu)QmFC?h^.54
%bJl@_0#$_OBk[Y&jfsOsA&QC6=<en3>(RpL&d`23#l5ArlSL<M(O?]F_N/KinNYnfRi<HZ3Kh"l?DJ5R:OI<8-SP0sijHXLDHdPR
%4f"f_\p,F%/6\me11^p3,*hqLRS%rq)ugB==;2g!*n@gAAU[Ff.0"1us5LrBoV!J?cu5T,[?$R`%a-/`g%_#jS0ABN[18a?alcL=
%^:K,>;>6h;aTtH@N0t%0*=H58QQ\?[[EjB$*d"[=hkl2^IF7g\g3<p=<Q([ZS`ST]Q&Y1WQ`7tA.T=_=-thn;-07#B-/@NI]R0C<
%$mo)8#L]A?H/Oi)s)@:q/G04b]Es$3(F=e[G;q=Ap$&B(;a0gArdbaq58,1eM^CdjK-P\N/FW"j[W(f-plMUrXqqgk`&]J;*nZC2
%f1LR>7grBm)#*q:;P0)DId:W^^+t6cA/:IrC#q[L%l[QY\akGY56:5(hl:dGPK:hp8Lo,6f:]$jY%<'XXALUlZJ_<X,L&"07I!$Y
%giPt%.\2Yu+)\6Nn\`q6Z^2='J,Jr2-=j%S`p@WHe"&q@\HB>8l4tWE*07`$7,r^#"hhTJkk`+2Mc)LK2a8Z'g_:mV;T@f<4auR8
%oP8p$ZaTBg^&RArC]&?:a?NT0aY-F<<'l0Z\Y,i6'^3q*5gTAG)j'u:=#6l,9rT\%OQXA9V.YWYAS#l?3%eQFPfu@>3]CEDV$1@;
%f"Fdc;%,BC2]_#.ldg/"`-';4EMeNeo/8>r5A(Z,ii>*2[8IVXC:n&r%Qug/o_`Mi]E)k6]XOH]>.(Mkp#gH=ji`).IVm4ncFf;J
%,Ge,q95^lC^:AS4CMf!$pm>#Ve4H\sKKH:$3Cc,[lU"g7U+.!@?gE+E)5ZuZQ!*fPHHN$]*+&SpDKWZ)f;R8Sb<f<95:]a3^f$c.
%J@J-$8B5i":$,W3h?p@$+k<l'e?[6lfr0-ZX[/fsOt$Z8mD[\-JN:&kCOp!@iZ_*3[0[f>>t175A^YheMg:7fFl[>0HI]*ld^=^M
%BQTqL#D5!"/I4p7\5ep<dcu%=A!dRHH6(/nnQ%BJ,j$Wcc&+VD*'/&lru1^A>K\!Xqt=iJ+W?f'Vc\[3esA-6]9j\#oX5MaN93:%
%CeWU#pDROO2B>+o60e^]52RO.[sVp$s$V&f;:h4Nf6*f`q2K3kJ(2T+Xqaj0S`t=VF0Hs$UK_K'q":l=/_rOh83[[R_BI#]iN<4A
%eaJ/a[oG@5V\:]=DI^U0iR0SO3c.^]C:#t\\<&@LHpaLc:;1htQ$K03OuA23Lc=UiCBnoA;X]bV@:+!E-+a@QJ/@c&/mj[h],m4d
%N$IkqlTUH]ktJaT<1IqLWL(m;;8[s2f-5;tX(U]D>dQF/p!S_??C?e!(RRcH3)_I:)``s(q%DB"qJ_W4cdW@##5+.!B;BRAhA3ot
%2X5/Q9dee`adR9^\dMk3<^%/b!b5^jcpk[tCBs%ULpun$js0CSHe^UJ0!$YEEM6Yn)@D\]BU@ek/F#3l?$[pFhCl7JL75G_VNl<@
%f]O)Ai[&6Dg#@^1>@3n!W8EGue6-'f_2W]k6TClh+l9*WH(a$eY1+9T7_\2hCZ>.V^,-`??8qGO4jQ6FNI9>=Uk(tiaEQU2<1aEd
%-$>F8bW#)uh9H";mRFpt4f%I0O=uTeV>5(o(shg^r!*+_cB,2[$iNh>^5[TRJ(+e78%Beh"ADG3cCAet?tp\%3"k]^rR0R/Qk\@N
%Lijs#BtVnDR+0Q$>R7hE\TJAb]XG33m6+Eab$)#*!O&\fdJAuUf;,'QE<9J)]&;_)JGYM!Or-DB!aan_kp/B512DL9D$7Lt=Ke*@
%,iHCm+:.^`!bUg`DLd^s8IOBe4V@0E016<U![bkl*S<.K'Actj&-A^tlb+AHR-Y\J`sVo$HsK)#8AIW<1%pBle9E<Ji3ru:]k7S/
%.iSMQ.8m\57_lo+l3+c8S8`Uh"?]4ZhiICkfLqt[l'H_(]76_cEi0X`QIG=!0)4U!^Zp#^+lN%5cY?uJ![d4Cffk@Fk7[Z,^(BcP
%<`,Ek'CZ(D/G2QLA@J%R>R5S98RI^[:;C?kS15)?JB([ZV1H!q&fnuTS?&q1UYYV=Gsh"*E/p\58XHkIVfX-=-0EQO]oXiQ0-QlW
%QhI>b'Bq,m\'#hc>Z.3?I%oCRKU,B-"3Bsu\Ve0#!mfDHGlRcn]@UD<6"L/Q@!SXC<d/6!m/2+^hs+:aPRT@K@=9uQVRffogi!g0
%r7ZJ1S!n+50p]k5(\\!=s4ZtiZX0(n65:,??ki?s+?-BP0ZspadZ<VNKKfLXX.mAQb5A%$%*PU8D$d+u&lX0S_*)>tpk2klBkFag
%aX_4a%U2Fc_M!ugC!P'1G&j%KKjrTuaOBg5f<<mpL!"ScZDK'p!?9]`VU/V3#Kd>]d#SY4DH0n3)KMA4\;8P:%WVBtQ;qa]lZq_1
%djtENbuL6:-_";XIPLj<N[A(2FQtZ3D)>U2LTJ*MKM,\n=\uH>PP-\s6SCN3]qFDEMi51s;&KpP^C#ka'!]u#p7NpR4gSULfePAf
%$X=?Ff7mW)V0@h!DW4,hr(IbZP"-LU>6ML%>49ljP8;=OFp8bj(FQ>5Okp+:$_&_bY@t3^pW)mafC$Rb7)'(2hcU&_3`R.<re0t#
%2CXQlP'Tl%m79r?`%r_/$EUildL,KCUAK\sK:(&)6,dQOE=^5(Lr)'-,EKU0pV21s\rF)`T_Jj$#jY217q5h;J("/P6d!#/LU9kC
%,kKgCEF.7,rnQ2Abp^RE04L+d@[88(G<m8HfWM`ED2h(nUa%lqBk!)Hf./O$rAhP'l>/Yg'E2O3'T,N4lo?JRX*FZkU$/aFS@?s]
%+G`N4DuO".1XSJ0d"bt@A!^]jL$+ZO;,jNE9sI-0bp]?""W)GO"HGIp(YEo8`Lpg74Ko,+YFm1#:#Qp.[OmV/:T%2kqP;5u\c;W4
%->1DG=f\^g/En+E(S7g/>'O%WIFm:"$D83I:]Q21SL?oip21MtT4FEg3U,fJ5"nB?/eV)dd^Vi^72A/u20j6hAGk\F-dk5Fig`^>
%\VG,%]YA<o=`9`O-^TX-R!k&9(lKloEtfE5<cdlpOVK&3UrM`+K_E39]\GrQ(NB)J+C"fGE>31rVRM*Pf(O5+"KY6k>IU4]-3L8M
%lnXL]@e0s?9$!%&S^*EWNo[N*AU'o)dj9&gd4QN\bdq2L*S0gNba40V5uj]+Y6o,Oi<Mm<s![=PdR0%l3pn;O=Q@D@N=TiD8kDE<
%Z?==30>n:Nak+Pnbq(1Vnq.UtcG?SW=k:)X^:?#PUI@]u6bQSp1\nj6CV3cgjL7gCjs<eYXP>q+*`1D<H&Ba`iIQ/=H<tN_aKN-B
%*l&FN8D`Zr%FL#sqrY/d51cIH5N(d-`R_NfP/WY[R_6G*P(jh#[BY"GAFa5Er&bcXa^]/s)jV7?K/#%'Ujar63s!&dX`SV]aq?L,
%`Mm)]PBbDoD^NH3gb@"NTeh&4H!B.f_o@#C'[M(C6D6X:U+P'<ls$TO1YbL+fXbVD;IkQu9[5!l<(d]\ij?$-W)*3-jM:4\_FOmX
%[d.Tcra+m`^*`eik*KmfADcS4J'r,_m:613(ZHD_Jp1D%:\pJ9-<W^-.-T^qHblfD?A2S(S=gluE=Uo4K$!E\Z9H&nTi]5XE;&N3
%0S_?8Oi6631\<d:HEo+dV*W*MU]ms1aD7Gol=&cp5:f8qiWEk(:1<?]"a/a2f65^h/>@qGf]Zd4GW2]Y6\+SM^4gYP2da,7r7W]B
%f<:6:FtLlW,Rm(HidYf6=-OTh$[,CmSSdFI,(G,V;<7hfn5LZl@GS1k7,Ub%Gd/tVAh#"F`^glT(i7k@hhKOYQjoh(7ln1YbalVY
%nbW"poB0TIA&:5cY?;4R*gX6VBi\=hgOR%WOaD^#n4Lfhe^t`4&pKMm>5=_g9l8V=As7F?K&r?Eb9%j(Bi%Nta+a@\&+Xd>QN;:(
%q#dE4FXj5lT'kkHP)l"bqVkjq>_IVS3UMXP11O8KBj"oWmp+80BL!#"TXq/MHb;DIAV`Nl=#Hh2Ci?i-Fu1H(4GF%U/b-&/SA@ZI
%mcW'+pea]B6DO*-O<+gIj+B&"FR+-V6W:m9p9qA4bYf&1Z+$XCRO*;(=24.SfQ,$&>t/6ASO?Rb"d_HP-?iu5p3<9&4<,-$Q,us8
%Wf3<S5j4EGTSU::N.I;qrB_f-THWl"g$]!O/R4:%4KDN$F[&K.g.catY=7=.d[2:"ZNZ[<C=c_7$]3Y3!uOKS1O2pDcRdd+rD)5>
%LG@sCRX*bB2(/e+,#b=?T'5`1dm2kHfWHW]-kj(ZC)++&,d@b5Q&LAO'"pQl9=.H;5:$q'fKGVN4I#JW"F4XmD,_&5,0tQ:]6Qg6
%bcqXLPnWN_J9uUu5)W^F:Bcea)j:EEo-g*9\o#_].9@(0;Lt$M$s)U)R%ZSioVZE@:oR%)i`oKE>uF[H$PjhlX^5j,$?d'udSCaC
%-UdE%gaQ0VC5)oC!6X#7i`]L>[L(946-gWg451UXc7)Am`k'ISkXURWJH/4Z1R0/-eN0T![uU&k&/6=dp4l'$($Si0g6QE>Z\06S
%#[@b1Heg+D65mn$7fqKHn:6qf*0^S2Y<H_a&<TG#$[k%RFe_Y*Se%Ub\@DKn\q(DS@M.p_3kJdZ@m2jk<GacS!0G8Y2t*(BL_?\\
%@7(9=SQ>'$&T(2+@=]i2"dU\o#jnHoZ>4?^%n@8e*X#]f7[;U'I'pD2_Tn-&^t4.5=&NP\J?*@ClB(?("^>,3``'9]Z_#8PY,Ul"
%OOLgBB*>`NDq*pM7U15[jW2HUAa&eD-oOU8Y6jj"LTaHuSk"f=T%a:.`aPuoms8qTdNWY$j>te![=i8c>L_D#5&uc&TT?t,gG"4-
%kiqXO9C0NAX9c3[o$FgFSh&e-Y;Y9/2P6]BnZCM\1=Fp3h7?12D8I-aBeWWKFWJ]L@VfjA/oiF1Q#gbfd`&G9Djqaq]FAJ4l%41_
%$n*JdW'd]0$WJL#de],A6lW<]QIdB%DI9WJ@7DEn+`93l30JGl:HQ`EdXu;[l+OAD!ks4W0!f[$6S#^_Y$NB3<(T?_eOX.W+esJQ
%9fJm_;u)3U*UBg#c1u>Tqo`/:cM$9dMXr7gQIb\`W*P=[gl/q+O^1,>kX@)gg-[s51G_tPaJ.L?Hb,uo=HpaXgM_AC%X+=m$R[4`
%.MKEd/:[G9'ij5=[->7<Xo8)<0n[dp!A4^CS\RX`F%eCMn]u-*ppkXAHJ3rteuI.YIDMG1IG*kin69Z!$eJY^<sj*Glh-&5omJh[
%ZUk!s'lQU)p/3S1GFb$N#1EZ\eWj'PmtY/B.)Pn@U]6&J1C(<@r^9pt2M0:-$cC&(:I!'+4PA!^9CtssqB<08X29U%$Y$K#]9aLc
%o/^3"O)Yo>:bZfnO7G,AG_n7rkCM$/fAN[8%4i$P,gIo`)"?o)h!?+-bNgHIA"cghqMW@ZPeKO4eOCaG@To#E[(CV>5')t3R#Y[i
%q<_,,(sQ\BmY/B<K=[Vgo/@\XP6/1J<&1JfTn`\(m^H$DPuut=7KM[jYJ#BX;PM6j+fZdK<>O+#;q6*iUhtVYfi:,9_TeZ,Ud05r
%Ec.;0[pcSuc\"ne;gW_W)F]gN)#n^@,>XZb4Pe])1Cd<0\pZK^c#I@A36q:W&GAo+!+d8DHLsu?+FC\;hp\.XGl!`uIU01;bXdRb
%O57:;h<LIKGdD2=fTX(kTC4l4&F9.lq9HI/`[Yfp%4$ilrH)2!]C7MX%$,]gHcOjR=u@thDbiUao[kqr$OO`AJ>/8C?0'nCAAJDs
%Z_bKpl4?!Y&,QcAY\nE)TSeh!Nb5&bs(^(lC@\&sa13\:Xp3Ytiqu_C7Wn?uU]fDf@',6lK.o1EX_Y[Q/Ip$A:4-mV;;DRHm\\a@
%XHt<,87H4teNajoXL1uF78j&+SSk4P-SI<k6roY-h;,Ng8^qQ#<IEg4XF]8-UcCh0%!%Is1aP;t4R7O+V62R9I[<a*Y$(7qTJ4cm
%Ss;=JU"aO`Q]35F*lh"M5RgM(k+-OF:;0#4:s\,0lmDJpIR!is<W.E/Wj(q.2WXY"o#uH:mE9NO\jn)#qUdQ$.&?%cl,8?qF4[U6
%nSVMTGdNY]HMbRl"fn3U)]8@pF%EZC,]s>\peAqe7!?#4C0h9k=YHig/RUi<?-(&TTDn\I</9'./I(D98anl@,s.7QD"'d_ZoPt?
%bfEW-L;*6*6`4#_cq!KQGaY]X>3a1H5$[/4.^*p%P/-YmIU/.b:LP\K-RBu7d4N0Dl+OYLV!@),p^hRF:<4Sd'dkXs_WUYfBar!t
%C$RZ4\q;)m?o*#;/RK$D8?gPK+66je!fl#m";[>Nr%RVa?kYIGG\\brY1q2i^9npSG4*p>h^"#ie8pi'DA)%O$GK+"2\3pQjhA>c
%[s%;Qjc?n(b$/Kj.G]bL@rJ3Qf.F_Y=2+m!SMtf[T>G;"m-*X6W=W];7)Wsj09?2:b"[8-K_/R]I$$5ZE&OTXHu\U!M&G7-q30m"
%?`s@b_pQeALlNQUO<!/<K88^6L\7f[C8p2!s6bbW%H=4*`V*T#5apmK(Do5S<O#JSL,];B^R*lH+P)T-/N$%_J@cW!M-SYYgHZ3)
%kS..P:6"#OdNqX28NcGRbi2]s4ZI>1U9&hr6%'3[XAI%l\PE+]C-o/RN`Qg\FMP"o[oKPF@3Q^45[+J9\CheLU<TX15"KL5!-p)r
%LCmG<DuoQ(QphYNa90Ld,ch7%*A`_C]gu<0pfqRH`'+A/T0WsICUbaCTk$k*';lI75k_tL`C%G]&6l_&0&eqCRmjGI9-Xa>pL8^X
%DN2Pu^c/f31bHoPA<O>AJ.Ke.@2i8\,#=peEZ0QM.Y'Dbjg]YI58Q@l"c)/]40E+W6l_4O?#cZB,VWY\2:dMa-=T_U?m`'UgS:1i
%GXoY""aboD9F96I\U\bi!3ho>jD.=,O'0f[0s7P5r_lcI2S"t&d]bYW-O>D!=LSb]L9SQRg^IK35-\q7n;aQ2i)t/,1(GBh0<Ts)
%%V9kgT6;VeqSd<@kq+gUM'*/B>Y`eT=D:/_TJ`m.;V?kH!tQ)n^d7Cn8l"+#.3_J2f\CY-U*`Jn2_LO@DEFAWVXebjbIU8k4#J?T
%MpY</@L)WB0(:dP=\l<lX,T[cPLGO3D9%Y7(!C=!0hNP*OfRo[Z/B("@Umu2!VRP`*f-%_f\7?hPJ6t3fYGDlZ>fJfg9./0,lI=S
%Bl2eeL>-[^%a"DqU@`VKY0jED1bZ<h&PqVg/")2]*,)e(RoW4)r26%@cc%4Hpd'*!@E8)Dn:R\7dhsN-8-%[XlS"<niOJYpVO)]Y
%e;6_-pmhtaR0^\*4O.?C(tfo?:/Tk"h,I)R^]WXF6?+jhNE/FNZ?hcCQE!7T"i,=>eJh.ub.%;_&1ZER8+BVBFrQ,G?H*Q7LU)mu
%+Ecg10aEc?YiE0&hWqV[/gfr^&1)\DEQe9ogG[YLV1clN;X.K0DYEP5Fr``3c@l/I@)g16;''7f%b[/.A'RES/00$(B.T6!*CY$`
%P!!*_%6Q2t!QWW*^&$.dnfLQmZue-.n[$r8Nom0^N\B2m*gU]*A!DYYqpM$T4eVF)I/s.9VL]KCQedZbKg\N3Z].IO-riU^!,rU7
%&`t&LejH^O[?"6rnhL@TJYR)?Jc0Gqo1B@3$M2294"&9*(Da[BcEA\D70ER\ZW!1-RBP3B.0@X/VoHH?I_-T8NW7D<XiGjJjDu4X
%Yha7'E4ZU:bXsqPSK(aWODg.h3*aQ1*;;BRCIgFSht6QC"qb\c$YUR!97Lk"iR5D2)l.*q2aik'$/^f'K=Cq(,b>+JM+8NQZ4qG^
%ijh]f_q`1k+r\MeUm$VCSI:e^L8J@mXJ?rVKD9],+bNZ\k(FuiBpIIV`*)LVg(GH150C^r3Hg8T!7&7[^b1Ib3+kFslnGMZZMf?j
%T%Pc4+dDTEbm$me&Il,A:*;WnmGlj8D9PLPk=6X9=1/_Mg,$s>NUR]m401/f[=KF`DB(t!\juBHoAQZ"Xrq;*M()^AfL9$.'\(7j
%1"QfD&[$SFHXdNIgo5N'GEP2MH9SiCV%c!_4GK=$q:H:^Z%C$9)L^PA\T<eFE]Nt:i>TbVr^J`)EWl?f&3drn.O4_0P0V[i>%^@_
%(sac&Lb$69DNUI>39rb_SIHZ\jk79VH3"t/f>lj!$hU_WdFudC?%n$b0:*^7Dk]uu2b1lO7]rk"bfo2cg^`b]iJu[Cff?HI3GQrd
%Znl&gDD^+AFWS!2=].-D(HjF;hKle5YTF/b+nd]#=lY>*]AR=@Igk\R#sJ3odcWnYg@ru@.6a%Tc%FB^'W)\:M.]?*A[rfl4#*F5
%8;MpB`Rc_:nn>.MJr6-^0<pVKOLfG\_dhU/Q[O5)o)"%+T5`]siWuW_(pZlWR.:MR^g,ChVGYjJ84obhV&C@!RC!aOcNR<;:a1G\
%SO'u$&`eWK,De.GEY_ZApG*d<`1U,;,C@&YcKf6ope`LR]Weiq9^d4X:5Ql8+jl4F[^&lj8MYP4D:5N2";U;YjW_$;!B%HsPFIaO
%*=4,_5j-PV4n@;I%19b@`;u]doZ8+0&@U5N1QU[Ta2rt'"6`;$lj7hW:[4,pZZPDWFgc&<cR9cnZ:-HR];>Y6!X[\T2=%&',h#pF
%O0IX-)i-hG<&3gZI!d@E_1DqE<SL3t&dU?CR`RWp)\[dZq3^0'<9C<ib"ZU,;ts1`?mI7m=>4o'8)9Z;=Zn4CY_6>GX$X+/TS`br
%5qQ?JaAF4\'GVgAX(`lGU?[W9AG_Z6.$QO@XX0-:RYWcPp*Ne?T!7FE85qY.#[.MCRWF4X8J5QZ9k6h'DU=nmOJ$b^?4s4$_sSBq
%3&%5MTa[WS#Tma*!%8o1Q3N:qTPI-a'p"%"3LbM!(O`B80In_HUU4kQi"\J=O-%04:r*:;+M"4%'<qh#HF"Zm,grT]cl-HE6_1fT
%*"Dgt4gWZs^`FiEb).eH6$49pLXssqR;*$sZ'2R*<U2Y%$/a9u,`6BK%]G#qbM1QZg@RCpP.@M=ffg9@8s[sY>J?W7Gi!t0c]6pM
%%]WRfe5+h"+=hIHPmqC8DWaQM5^AW[T#f=7o:e`2=*7_'P)K`!;dD/B;%!(4Tq[Rb[K;T[Jh&o0^M9l)'.hhhop0j2b\Q&0dscl?
%B$)gB699fH86ID!\mA*ZGdp(d28\u9UshVqGZMRG#h7i8LF]0A>5-Y[=%K7U:7AiAY)lC]cBT.2=%F\p\CrJ#$L,L/oaPG58>kgC
%qI&']OA>`.XDE3:FA?f^-DOWJXdBaZi<g_jp4fK?>TqN_9)B>i(lKlA.tkp#h(prX>G5sA>TpH[)BX156>4>?JD%+;=kh:6=%K7M
%%MJDU\3^I68*9aW+].3dlj=n>:fk!@("*]?Z<nbA@c_igXG*AsW-#a?3di6gB29>&nlPMc5<cVEH;CJ,FgsaDT>o7M$L-XH:ri)5
%=ZspFk]DM0Bl0&Io^t*mZDhbh1F_G5N0c%?E+Dp.>Tk8BVf,X-Lh:H_>TjKI*AudI$L)V^a8$IULtXJNr<heqi5Y=<KH.O"Gf6`r
%!kB6*kmF+ai3X0p'ga&61ti\]TO$9#Kb1EWLjk$hW/&g)&.3F!RR(i+6M`NaDrX3k8@cS8$DDU@_P[oG#iQ[4^0Mnp]Vn>S.jRrI
%=s'(]KQ-UaoID1t:p44L6k3?qcZY!rl,`8S=,>3?`'q@+L`huM*j1UMqP64`=%J*RaF8j8&aW?\=%MMU</1jWZhJ6(DI2DC^"a7H
%."?6g%;$gKE(tCP&-:ZODsho9m'uc\FJo-d/$sEEqdoe)QGE:=T]ge?YM[%rCG2"t3W?.HLm_(sQdOT2697I0lglM_r7`k5kmZf2
%HPoEk5O$A3n)N3LAPeC[\c?@:!VuGp`G'16nJ\JL3<Zo/(_[J&L_[9u9/Bk62/["ghn!r,a'_'#n@)I=U#+PeP%;'bN_Mh,fdF'_
%hNu*j]r]QOSTT9p)&NF.ERKY>lE>DE4PMZPSj8ac3*UR\6m?Em)lRfO0[8h4GaPdXlde?BKCs3#hd1<PJ_`NQ\XU(5.B#E,7(i%u
%.F@I)I@fo/)j[j0:+/if]Mn&,f.A5OQ8oGEgGo`eeMAK_m^Dkl0pE8S[l`f<E!(T:`f8LBce5#Ea0qV5I3Mm*TCUS#AUU0=XICg+
%\ufE%h5U%&l^#pu$""4t>QWaO_'reub%=c0)E1'!mG73';o0"Am27i\h`kb/@NX?RK(b%;NIArR\!Qc5^9_]q^WA5)$TRCJ918BD
%kbQCg5a?+o$b)m8T-S[ig/5n\HT8T]](Z!F::bfP7@mPG.TAhai(k`upg)$Q,8ntui^lbA?H.I"hnJuiSU1+`XsVH5"7#g;B:4@K
%SObNUQ#Qjs/1su/CWCc?kQ)k[nV7N(^]ee#LnLgslB^"tCqP?7C($gX3IiQTXdZc^`WL)jR;'5ec9f$m3S/6VQ"k7OFJW2H'u-cn
%knB&C1au%D>+Sph#pa#Ns5)/!$%6$2rsi8b<9OV/Gmhu@b>g<E*ZJnbH?s+:PuIeubb@4(gE=#fG[nl.TmhdA&pkWa?:Pr%Qt'K1
%rEPq+MCXQAIFGWk?JFB<Z_O1D@[=3\P3_mk"`4I(F+-.F4k09rX?4"#A&Jh(`aNYPbt]3jBF*9,-h1dff_2UMUuLVFF&5"TA]uW$
%]:FB"':@n3W'*+8[^_2WM]SV0q2KO(&fUo!/JZfPEG-=;\o<HWY1QK]]K=g!pO#.:`OmA&'3liRmL8N1iFc!WV__YTY(:]3Fm4/g
%>5W-mc#l#]Nunem4.aA><iIVmX9W<I%U_38SIH&u;d6HA*1/^<=&`*#-Y'CBaV#H/k."q>3Fc(4gX(PQ`_N#oXQMZ]p>V?,YOEr+
%FHZ:Jb,oGg;gQN#H>BMq0A0f([DB3&2sKYQ.sGtAWG$TJnKJNIZ>hW:[I-0AMo7O[T_=Hm:\q>9Z8rh,\"jk2qCT.]C(C?-<A`Ws
%&MU4[>r4G#*oggqGXKKDp-6>Q=V:kcABFWN/g&87-%J1V<^&.sRP6M+'@M_O80:$27]#c-`aX78,($_M;7&9j3l"<1,,)*o$49W#
%5ZQEuqBO<,1c&F*.,TTqXMM9t,GF'jW1J+l5*qIWTO(+q$`4dTa;$7m'=P?<lmqdVi0::D+W=EfJ?YB\NAtbD!Df.GN,>mfd[j^)
%VBBVEJC[)PUuOjRRST8Br//aH'XpO"i'%@n1UVBEE/0*@=_oo*0raQ9>Uk0F%5WdZ@:6`J_QAY[EbQ>OFbnV"j'7185]m=->kQ'V
%^T+s]T\E,IVSUin,3:P%X/iI7X]iu9%52T[pBg_Zf[d<"*Y[97a.!ffV;OeQ6au+0;-mg59-m(!c,)*58DlB`%1jVM7T7p4N7/)>
%TOp1fk_g[S`4[ne<D>M,9/0\E&QWfGI%/6LS0C-EoW*"6*u0"W+2c;aXGtHcJfcI>BMjF5`4F(%?)&7P4krQt%4]!g7s*3t-!0l0
%D=Eb*a]d0)D"t*(_=n!:=^sb$ck:K2B\[/cpM_),Y>9?m1$eLIJJKq+3Y`WF*2VE5]5'.i1@++BP0*RZ4_ac;4#dc6Z`78n/bCJW
%8ln(Cn':]:4SR^;)m9-%h<FrD:^Glke+-YgSS$<+H@q=id:aT3H;nZhUr22*5ZtI/%^+FO^G/"K9B[NO2$!V,,t,Kt+m'dk`!m\l
%S<XX+8r+Sel7[VWn^Gh@4F_\KiVfg<Ish#G@6Z#kd?6rQNun;[Q_-IUH2j@h+9(o15C%_WqV<egI!S4uJ+W4PW9&N)s*Qb27_5A<
%89].nrJiMj(7q>glqLd*%=J'@YJ8^nOJMj"g5r*o,CGcH[39>tSc07ZqC"UoN!!1]nAV76!T$I<%rSPA3?WO\Aih08/mDcb=,/Vs
%@?nl5JIQrs\cE$bV0@p218Hg`cajZ+K;M([>mONVe/*'8NsQ%s(XbZ62)YUCag#iM$cmHqce8r!16T\I2MA+n7LX*HeP$.mg5ofS
%eV::M>_0)MqFP)/Rl4gN@q0hJMX%!3aea:`FWiE\&:sLa"dVrJC!H=%`9n[*D2Pqn'MUa9g5r6;eM_cgN.=4GLF=3L4:8]%Db4&9
%kX-&skX2euY53r,4;pbsW:j2&I0e][I)E]q'aG([QDof&+M$HkXlq9S8fB<GBrhh:#c'+GABD,r.(JM/k.*526Q04'RiU+CTi,Nq
%XG]7fam8bAL=uMR[hF#AMu=?u/^915&[c7?++j'W6Yj,H];YkOXq*g9"]_;&N^F0AB]60?=G?Z2Ka;W/e^eT$)Ak,,+d*Q#H4cW5
%A?&D0AU0EB6DVM!@5c_n,h78RgNpTOC#=A::@ELo<ahZ\].&B1Z\*4Mp7^3@9O/\&SQ%]-Dd$_1'e@S<#/!B-!tt+%@TP;7PluS/
%,;1X$p?pK?c!+\&*Z_iR)BFq-[auSNY\8:ETU)N%W\Gel6E'toX@h#ap$gdWrpX.MWhTYK4ic^R80KcMdi%Jur5Kq'7mJ*)=b`n%
%17nM+[W2H0Sj(D-/lA>N0`s7HCH%`CJ=2[TVOEntT,SSn(Bb'=&Q#m3*1(>rH7mPeF&6,\f*j7TJC_h.M?,O+mY2Ngk%7':girA"
%&]ZK[E>GHo''fL\`AL47&c1-Ff)Rl-jau8b.7%1tC#g8gLJSPJ]8q/5J4(0:AgLD%VlShP`L<'.4m\/*WK'jZaTYBAU3c,-fQ,bF
%ff>W\oT9j[Wfou>,Fr-cil_Mp)35RC8),%B">6upV8Nb_H'597i1sT)d^_R'm7d:IP&A8%i$]\k-X0s.&8_Z<(fs_AM?MJ1,dpV$
%ML"gA(fU`C`Eu<j+er+#_<R<LTJ)<.B'kSi3"!g<e5;Y#=FJi>1iLJG:Q5"*Zh/18Ss`[Qbe0^B.=[Y0VVP+qgqnIR?Z&TPMjA#4
%f('ff2Ql/`GI0IknF*%3n\i%0/^H$(#5@5F$Z_#<B?!)G&Z0j%(A0cCU0DjXX7o>*d;;!]b4RD[+Q#NM<5T`Q;no)L\qOoa\!0XF
%s)4Y/PB*X^41_IE0D)E[W_dl/PZRgDnu@[&41B\A]iVf2J+ITRrT^EX^5mc=p?T&"X0)EjWjXseS$qkB_2i?0Dq#m%E%q;e/$0kQ
%VIGnuGGB25/A58\9tNZYH8foQR43?tG0_NiEhO`D?oOHKfPiduHBS,0F:'of]SjYs@'l7*'?s4CZUJ-TO'n5m4e`1oQ0TTurf2&5
%[Xbt_Jq:Q6_El9"S/kQEc+@0_*`?Rmgr\LGPm^^S[]([pPi=kG8-Zn22rV!V'@LVGeq8<?Z$Lid99RLDB>_j]U`e(Tm\5m6JCsg'
%;Y"s\Z=dqm%rO.7WS`,=9Q*3<Nc@Dig>-kX6>noroPE+Jh>O7'bVh\ZgeIrJd)^%t5ajY_Wh&1W!Q">/>K@K4$[i<K"m(_fJ#SAu
%W&bN`4h5`3XGg9Ch.Oo;Ek?[b^$I\*8.^gLRV5;RKgWXc?.GqTrPZ<4)B-YKk?>f)mVZo+$U9B'5@*e;#(.)-DnCiho$#iKO6M"5
%E9"hWi=pKu%F<u)/TQ*G7nG]8**/#6pRE\O-[0%-DTY,bU'E^ISj:Fa7Q1Iu%6mM/?WMtH8;07<ces(!cuYWBkA?72Mtl*G5DXC8
%9BZk7I.hBWFq6f$b5SJdg.ej3gKP?+KS5W*R"XQoFPWCT9:%7.mLF]1[BBIX$\<*ja?ebLQ:CBmE&i@]XL:FN_7ub\jZ`lln9f*l
%;Wt38IC[.-_/qSSB2AgMb`'=tbE;0hW[71J3qC@#.1.tfb*egkM=hoTk0oCT!D-H/Ig]M^ltr*)n4V*2$Vk!h3J6[9)::3"DN1Vh
%Bg5m+)gJmM%QH(.cH;FGlVtod>Mh[b"0;?[NW%;sX*]*DpYh\c$0ofGj&YJ;HoQZ2%7uK/qnBrD3?,1p0Z.Y$+/PM1%aes7IK11Y
%[NQXOXTK'lCq*a<@be3Sh'\VOCfopQ+AU+"[#'re:PcC"S\kNe2^,S5!7`FAp+;)9Q[Kn3"Qa%uD`3`(>(l**rZ:bOg)>%l^hChY
%X)4`DQQ=r`gTg5Q_fh(=BlO.I^$pYVXW5h&pI>_V>7A(WGReT&H$DC[cS=Gj/L!$r0AoX3"6e(?%1YHoTiZ^X;M%NG.32cW_d5^b
%F)u"IUr1)lj2T6PT'nAfK?2TLWQG\pQfCT`$DfI1cn81()/m;lEU)3O(4HsqNhNCqn4h-<cLCF7f(BN%GK(0Q<0(XE\q;*DWGrH[
%BO,LI%R!nqKS+s>pb?1O/56!1Q*AE'=VXl4A*uH.Lg>"!4=`grS>LSX@6Mqu'm06I?N9G)l<7'&Dh#^klWh/DY94asQ9-k(Cf(:C
%WtA@=%S="dg>oJkpuT*KlIthf;2E%RY\hu/.B7Ake6O8l%`tsI9'b32!S(/*rCFbO`4JPN>2E8SIE;,BH38Lb99rP8I('WoIM&-r
%#be=8GTB&8+^L!@I<(i:+^qXt+"<1o_<FQkc>V9*LgSPE\Qm__q=>?AS?+b?\]kKcEXnHSG7&m*BY`$^!;6u=h6c^k$\:D=CL#`]
%T71:3pUWD5g2%k_mCBompNHL/*B-RR*kgATcC8?lO61@$OIJc)()bmRR588W.Icl7%k#N4m*@V2h`mCLN\C*d--r9Bd`h/T:t(Z?
%kNhg_mVI4<F^pG2A!j31=P;L&J,f3=hb-pcR%+f\_nU[#jq)\\L4B/ggn.R+NHn*"g7OBtC1jn'`M9MflA.bhMEdYO%K1T.Z!H3-
%p[CVk>lE<.J?Fa!mbl.Sd_Sie]mKP5]+j*6O<3U4If-?%jZT-J)^P*u0CS6<QC`@hXVX;)/m\A]il7<E'_cB:rCMcRUs#GKW^:2u
%r$^<jU#Suel!#6`b:tu(F;%>FIWPOpiUX*XJhj^eONkcghRQrFKAH%C*&>IKD-[gu<O]L#8&\]'+f>+E;14edOE^4`okeRY%GU-[
%Kp1rU$W+'98t98Vi,hT"d\=GuGAo`/oD_h5^STKYc=PNO;:_GBRR$5Q)F,I&U/[8*oHo$3NEEA3$!@Y\MtBG<m%k-?#a/!X*UmsC
%&VHrL-*W1-<04+#$3nf,6cBZiYlJu!nS,hVV,Kg'%0ETkMnKVZ&Rs?M1D62j%Ul*Y[A9Qbi-)+9di,$&l=WVb7:YSOjKJ8D1Q[LM
%PPfAW_rYG85.W5X&?H=7jR6Yqa.[j=ZhNMon0Z\q.4(Xeo*CS<N.(%a0i't$+%?!e.3b:#R$M&\k@;VPrm<#>BlZQN_0EQ?NsWGK
%ZGM`M24MUqZIc4mm5]C)J8(`tSJq5siPeNN/S''M][O-8PFUKTQm7L.l5ah<l-BPR;,5Ytnd5N"Sq[n2$EI/ce49-2Gplij$LY?r
%Z'KXENknc09VWCra#pRO$g3m/`aclB/0#Sccs6-;&X]l8SuNUg[9reV<C3%Rc"f/D7S>Pf(@t3<A'LV@!`o!=8s1/g^s_0%#q?R8
%kWU><9kMZ,a1]>!pc8Ns*@1ir!\'WIo:=j/N3eC)q?a[#n`Y;G`7+ojA1+i[-'t2F2^7K$L@](*(5>\"+@g^m&D3(`Re(PM2up7d
%gLrtiK'^4OGuWuc[46nrbSFM552u,+\;[KsQXnVu-n40389fd[VZcPeAruEK%#V?^6/eS1no[-j#H^hIRqSs.AK]t,cp/?5UnAAR
%EHQ>=^<gAn]B')V4_lqND7-\%Pq#PG^VqBQL)!K8;P2OthBa?O6ZY-3kIMD"km:3!V_K1U+B0>'06&'c![*qam]j%Z`]1DcV/A@t
%i+8N8(U@Sl)r9@Z2d.)X3K#UC>b'2V'O>AA\8bp+8SI\-2\)?58t;.pQ5aGE;&^_\^]G;U=f=rkc@V<eP;t#V"A,e/"`H6:olU]#
%baR,;3sNs-:imcc<!&*B&ACC]##?AlWd(llCf_N7PA2;?djPq%):"JZlQA7UGJKE"/o5P?.#4tB!GdK+bRd8WfjPrhpUXY;[LnLc
%aJ%_C29tDH!#lk_O](b&CCJ0Vio=Dh_'s5XM/cOrY:i"='We=b5V#]QlM,?t?*S#hs3l'-MXZ;G',8V5:bOVh+6]Tec;[It\gGFH
%%[u?p_*p<nX$LkH^nY&8?\f@k75_C3p1a*HdXW&FD$Kp>OMADp&lN42"=pW*U1p<O+e(",7)?a2n>kIZf3()<fYP-h*b8gATRO8D
%%u5LRM\!u2LT8s>FBa:reBG()F16qQ3l>?P,A[mhd&RY074Q3K;FIns8jV3OK*Dbf,__rc><,--%\mn6;b@C/Z>#Wcb1$9p6/IQP
%.X.#@XhtI-o;ENYBXn9b>4WILl]j0s]&64e5W:*89nPchZQm]R>T`(T1d/s<enE(tmQ#ZaS]'slP/qL52",u;#X]5U='0a]==GW6
%:sdY>1X5e6-<)ZjF2meZ@A6t;*Lm3PhKGt>:bN!0)iX'!a2Q/r0sWae>q$s:[;778`9c0'8/]6sS4;iOGd0*g#\me^-!fGC6Xa4%
%F^3%B6bA>tj1Dg78D@fXKm5N[oTIMdeS%+=TWKPZ'X/>IjXi4A$E-shE@hd.'Cc4%^-RGr@'pH\>\I&J0rs[I>"ta?lbRmdL<XLA
%Sl]mk#so6XGRV9o,O1"0EDktcSCH#6<Y[N4GOn4Z;ZCKF"LrtQ]#)0@ffN<+=s&f2h]>-<3)1.cU2QmSfRc8+WieJ?0*MN7<@_%L
%!X*pg(*I)K>,uiToh:OEeo&<jXC[mZ8@+:Qn!]gqHI`]`o\naJOce7dqB?_mle)@r;\&"o]jiIDZPD-HTscBAVeq3cGf:_8<+87m
%SZTDr\><$c=0W*Z>,[?gcbeOQbQt[^bSS5D;iGHu?saruB@"f0?%MWGRYX"8k6,i`e5Wt8M`/gU,?0Z!jg[_N&2g\VmN*I=4Fr5C
%?f#^Sdf_YC,k:/^+]SJicm]bY&pad-5d@%C*i0Sg)U1fQZ>=-!rb-.J.D_))XHu!u?a/`$>3Lm<D*:j?bU&+1>BO(&8lofr;mA4g
%nEo%7Su)lB8g^G!l:^Mt!l;2t;^lHU,al5DW>*?8<2"4=*D[r':pK<n,Y@8-F\!QQND18pdN9*CDK&4%kcT-!Gg3Ik'9i0lQ#p]`
%)-&Z.p5pnm_+e&=GZ"PS74eh)E##HX:mEiej3c0fAupb-C<*+T`h6)LFEA.i4Zc+jLW^16iDl:'Tf,!/5mYMHKM+6hOhfL,XG<+7
%ZEr35->u.X>TR%J:IM)JB_"g8r=%:eBjB`q+SsXtSa<q!&]rR`r'<,%8;%Nc5%@OP:D)7q-#*slrj3_umS=NDC#5A.%UG^"AP5Ta
%XM"_cd#ipLR*1Q19h9B6cGX0-PQd^/=,R@06&/:WpA7[ZrG;<E+h&ts];b&53.F8G1;HrBmlK/0Mk6?69F0+JPUY(=;J4@&d-;Q<
%%Ou-P8(N!C!c!]r3XpNoETB6\TeuL<,(=:38a\H#,dMtr`3c`g]dJtBqm)l`+W:\g+qEZFf[`N-Q][K!6oC&O0MR-D'=LjNj)B09
%\1t,.=HXN9(MpY%p*?W-W'-*!:uQ<H/5msZREB9oD/<$O]+di1FK/IdQ78_s;WqdP]jTuEcFSP4`gJ'Q#;'=NUf0<P"i>q_6pW8p
%C'8c-a4<VFO9\C;S&^?]hD$O<Q97r[#g!3'=pIVo5V:T/D+e6(d5)1@e3eio'NECS@"^Rq?U*u6TGIeQ[qoR?W0p"o60_!:KLhLR
%.T.#llX;jCUhkG]3LVoVcO3=OV[#\T41nt1M'YT#pPX/j7Db-0e)>TS*WjV''IK'G02FaQHr+,hP4brZ6am6ld#$@`>fDYPUlmta
%)<g,4(#2L$jO-Ur<Bpg7s)OApK.N1;o!BQ$;e=nq0pO\&O/XC8(0k)Piin:Y/XuMH6r(*1oZDep;V*6=/<&_bKr5mc3J5TiHrZo?
%8Cc<oH]Ft'M,Mnn^tGe=%.ZWHdX:9Tn3b`Pa@[a.e%K-2SiC+U@Ro5jCm7n9"mo*)eaV@33)98tTV%r1cOOt@A2?&V%g-hR(NC"*
%M@O-0"a1oRPYr`c:3E,nKRTFIb6DJ`f/aF9WTGVkdbLKF@'6o&ZBBGDR%':'n4@(]EpRR3q0/"mPVlC_!/WI!;]S[<""RZoZ[2``
%[8W6W=k^st+)eKYk9Moq=^j+:K1[kOSoNmH[$bq0mY^-.M.O<bWBA):p!(fESQnEl'O5<Nr_4])+H^s#K-m]H_An_aL+O\7(@$S,
%m!(/n1Q3j8-Hbpg>(-Jq9kJa(<\(4Aj?o`A4]#u?3929SI)0<A,V+aSMm8hcqi"DJ\I?rMAZ%.O=j?,+KVj'W9`-ca"mfX7RsIk.
%-*o>[Be-:_1*98<:"3p#?D]k*G[T'TmA[.J)baJ[H)q,#>G@Z)WnTGJ'rO53WP2`Vl/mpW[M*lu\NQF*,1ZnR<FNZM);qZDYL%9/
%%J>a8>T_@D5.JngC_Be$94CmO0$]f3Z,RB1+NmWS@Ar.XQaZQ@OsPbFSmrquSZ;FqJ8OA'ZT7P9BY<r[I:R,\:`Y`_g\TH(YXDG?
%(KA]6Ml2C%jdJm&<i*:u*6`NTU,.U2?F>JkLSOt#S"?iF0kEEEO6FAd:Z)bZY;&+AMY.%VKOGmc"qFfo21KcIP",HY\Gg$I\j!e4
%fH69\46lpufk`h4RIF%QFYd:2!kqN$5S&\4O&g>[1DVXOEYA,9AkPY"*R.2/i8SsbC\Z)U`f39[:glKggI\9;^"WKF^OWJgLG'Q%
%UVfF,kVflo]KWD[Pj`1PNQq&e?gRBFk[86p!P+qd(7X?$pP,\Hl"b#d-O54%=@ul<0fGAf<H]D<"p0HiJRB];Xu(^<O=Ke1>+g1j
%0O$@[o[O@d4gTWhYQX'iV;"X:"+C@]V;d:AHT4ooo8!ec:!FUb`+t(+?SV=*W5RU7'F78t_JT]2(@::don8eti0+:.=pH2\>6s,G
%8l(KXk$\a3V-86s*B^%adL^6@B1X-`$X@UiPlY"IY?tO^]+8DjEi3n+q2#ot-?^r9?,W;R/GB`d?mcn)YQ:@(Y,,!(Qs89Car_@O
%BBW[SI6^%E?0Sdg6t@HPk-Re+*^$:9^r94f(01d"5Ors!AT*LO2iFP&HRRHt)YXBa$M>rV,[drF3(T@<JkG+h/,Z&4UJY!SE&AXt
%26P:g7m-u[LB0H;Ck<2V"V*TZ$O,!mG['dWKtn*e&*RMOBG4i\%*gu@\LU?<MlrV1_I$YhrG.;!<RC,Y<,Sn5B@o>Fgi1-2'WGsd
%Qj3aGFskWXJj&4Z,u#rl=WR:'#ZcSiN=!GJg^Fr.0dTBu1RVO?,\Y%/TR'ZhOdrZS+SQ$`p`iA5b=D2t<FZ7q6UYeXj?D(oJ\[,?
%'^*Qe*emtFjDSO02O+d(-iR;c.'i'E':Blt`DQ%gT660?6lXpOLr\\=*kY]%'n1@1%jdVf'-*TC5s`%A!b.'fX<4GkZJA$LM,n-6
%*onC1F5Ke/*&s\AhLm^I'a3b?Ec,UE",,_]R)me4D^S)E7U+i=@$m[PU^Ps0ZW8c&hZCV_[D&Yk.H+.G@3"EZ;0'NG,g5_C]C@0n
%B`XtA72-)TnQF1uU*hKoCaBNM"^MG15c+R/eTd^-LPm)TA1(5(OP?4,k_^k[EnfA1qDPmm)%)K`QTXGOf!cTG5hMV;3Y[mZ[0KY!
%E!V%D&p)ao%9qb"nT44sS=QrFio]2,PL:<Fk'A!smr!"gm'*-G'_c+"P0DFTk%WYqV3u@5ihafs!m`cV%"3?K)"sKd8e"fD,%k#:
%W286EE^E2&arI(R/i+Am@c!F;"W*/O>!,=UK_j+j>;?YD3eM`i&11W'ep4S*A9W]q&pGcIP."1^?6uji<PqD8EdA/`:F;irRZT?g
%[t6g":`b>V<ec>:_d4ZM^g2'@C:hR'l4O`,cC(3078;R,]p(R68A[1TZDX+I3(C13Ed^mRc&,a/S&.:O(Nr.Q#Ib6l:<fl$b,JHe
%RV)SXW,56T5i#([@o62Y<3k6)DFUmWEFTtH(>f/P>9$m[4WsRJ,(_6;@HplLF$OH3-s*:KppAMA89^#]ls']`Vab7DZVhJo_Pnc@
%"G9RVHZ!*A?-m*$)"L4"YZ*@0;F0HHm<D)2mdh0WB[Ka73@7iS^=:A&3O!d'LX;tl2=:Wtm\FGjZs`VQ]:GAH6%*9X]EK83>Yd\G
%-[\O@Z>&T)GW5#OVAlEf<,<)Wg0"sO>XekO$9kB6C@Z/>!?:K6m`F:fB]gkDS_qdi^jR%KJ?W&28A6ReJ5H3SE(tXg)K!Z]KPInc
%44$\d7\KV2GOan+j3lGP<!t,]Io,rnk,(#31=s$;#8[#S2=A/L+\8Ls>l=sgC4^Xa9,ZTOM?bE`S=sR?qe=4R2,&QPXZ::NKt7D.
%'WA\*#b4Ga'o^o5qiDeNaDo%7$`d;<.g99H/VER-gc+^2mCNjUiDEqP`$j.>/+8m1L-C*#&nMuN1-PR#_'oO?=P98&L-=O:KheN:
%`U4O$SB%Va]XZ:"Fc[N)Dko_J:$rAF.Ys7`WsNFiVRA:D7n'k`*n2^/H:S&s=/'udAb.V._N%4)P@lLFRYi0ilLAaiK?f2MNia-m
%>i>F;!C*kF"$kB\E(6754[enVlfRD+&!$`&XL^g3h4!,[eq<6RfoOALJ&UCjW97Xd4*h]7hJset1/L"aYmft:@(q:?_1.p/#aFYA
%CsHZfIeJAcB1TqlUuuB;Op9[l2Xp4:k!00do3r&B)KWB(m6q\M8C-R8;_$Q5H8Q:ke-!*-!Q8f0L2gaRK?J8.56c7-CrK`Y)A9r7
%C@kOF1fnY2IKC!s6_-ntP]h$IOaaY]=Y]e&q-_JX=8kB1eh-b8LEs$a\S*&L@_%*Ld\rg@$4pA.\gs%YRO+mU9po*\#^#8#X)#6)
%&`/tXG7tMh=;(mf#!!-Lp#,#"c$ofkig<1l5fZ;Dgc,7V^Eco!o)sHp9#-Rk`[t=.O%7!40d;&\P,W#>69GBKbe&V"Z`0G"KllC%
%Bf?]28<"XoA>j'0g3C:hg2;>:*`NcSp<k)^J&$4;6qClDBQ2/UC'-6^[%+tO>ao&9M6",h)6P/*n#-H1W38'FjN+R!%\lH6,&ZlU
%(^0_\$Ws3bioWs@X!KL!_LC<c<PW\Y#ca:OD%VJjZt,NM+n\OkDRL,Z)W@&KPIC[IDuq=a>CdacVW&e)o5,4^=:e;G^cVggj[)Wh
%-'G^o_]2'N!!u-1+teK.F.KF3[/cBu<;3UW*s!DLJ]=]R,\hAd(jom8oF-bIM0kVP'd];!$IB;Bh]gtV$aGh#JoLohnpkAFnqsHN
%>"t8/LL[0K+Ts@qH[TOGIfHVU6c4,?*$;WK=2V&D0S*GLFaE'_$<A.D,pc4T80j;^](BOFBqBZ'Cp[r+1_K^%ls5<#a_Cf&VAq_+
%7^VKTMR/5O0dP"8:sCf$GpYSpII/nWVksCc(J@E*!Rhib@EDnHquKE^P-QWQF@79Zl5Mkh'J)k&?IUq)Kt)a`9p&5SaW9Hgd=FZs
%79,;bfrDYO/%5q5]!jbhgdb=`;XEsj"dVfqheW^/^KR#G>\J^1%Pfi`,#gA5H@/#ZgTB/b>IQI(Q=,l]_#;iC[*,%RL6=Sk]8DJb
%0<QK<1a]o9f*%oh;n)e4LZj"L)BSJ)9)be'$aCfJPG\8`)=\hDUO>+mXU\Ob4^AMA_J$6#bYm:SXb2(Y%k##`n.FHi38&Gja]48f
%2&>A;6ZjRfrm]u."er"V)1#P\Y(.9'nME3tAQ>`U.5+QTl)rbD>1D^f&DZa-K6?+68&GGdWpgic%J\>&fI@kl3+ZPP*abCB,&cTc
%T8=rUNE:_]4j"gOh9D--2g?!UilA=g+&t`6+^9:)odo:GS-C%T-Gp>-%iQ2cKq[m$oD6WbD!?c2ojBT)>l1eI<Uu>/Dd-91=qq>C
%7.X54_U\W$`<'WGakuCJ:B+)p;JYEb6"2(<X/mW_,+b7Z=Tk2GfG`Q/2#f7$I*"_T\Lg^6Z5NPf/*\<cL1$N>X1/`87Q'"V8ltoj
%=0K:a+oThEVlb^k&Jt[o3i-(26_uu\1[^62VZcTW,q]o`'U*MBf^NIMCN<hJ*"aQk)F'Trk0<@rRrC(23Ll".+AI,^jTTe]8)74q
%HDn8IY]/%R/1GnSHB&Qng;.cbPd"9=Y1MaJ]Df/GO'Ai-ZUY<072@E_D%K-T=ZR1A'W<e#MbiKaSUU9c$+MoCl"uo]*FMGOWoHX=
%Ocj$MdF+VQ#p4e5Wi=6UM"'&U^Sk.ZDGOni-'FT]Lc-7i?On<th0O&>@ZEjC=kFWj$;-Rl];,^Z#Jia?BXo3J#moQ*S67$<%,%^@
%@r0"VmSF!3MB?iC8a1]F))E6[W_9lKD_KZOdT]aL0@K?qBrN48?05VF,R4M5jtkZ_7^$tiT@<4m%Yk-<r5@8N6rQ]cZP4To_K:P8
%[1<b*9IancB]26ZoQdI0)\&9*64Qd?dEM+?Z$t;-*%%U]iBuJ>n">,[\38X_V+]+Z+_p9L&-W67KJL+PM!>7+$:pX]BX-Jh<P##'
%kQg2OBtn$n5^j"46@f0[cHg'(O*B`0]MPQ5!Li2ZZFRH!gH$sdfi9eB8a#-,]AlJ1LI=&5&3Z$82!DQki%mNK"a6ZkdS1nB>X<KM
%ZYsEp4\YlDD"\lgNHJVt8(u`>TGVBP:f/o4(HnO.+"ocAU5*3"`?j*:k@%O.o>\pW^aZY12gbN]ec`"J/onND4nThlI`S_K'PUB#
%G!Ag!`Bf'02N/&?4n!0rT$+\Wr"QCn7.S7`:/qH]A&Pk,3^]RS?e5=[fuTTR.4KioZHh=7\u%a*%,lHGB+*gR2<>itkk1i5h5QVW
%/N"TK_TfN2mH80sK^4/:P:uKN^nIs'noB-[Y">/[+n+$jTAoqt57OU_aGpq"6\k.:f$.Wu$7>ZF&6iX&Da(VJ\mR[0.]5jR83)$I
%J/(G4iI3>rkhNFrn-h6\.%%>d#uV;Y4CRZ;!Up'QSd6!iT,`dA0ei;"kCL0b_;#BHYe<n!7*?)X^$&D;(<:;KV%++JU)@Nsq-4-q
%@OJo'ZQRMtHg[,MM[jkdaWJEr)"m?-#F#NMlXb-2=]7#4ZoR?SI8F"]]loFc@$=F50f$]`>K>"(WuBo4p-:OH>1>J!V=f?i,l:ml
%pX[SDr7VXb7_T&2O1k^V5gpj!:'K/[-C@?HAdJ1Y1;@eS[[\ipR*f$\g2,,9.BV531dr!f4[<nPVRrPJR<`qdgYTUuBRi;3IVH8#
%^&U]gF^9bIIr\$!l#(=*.V),2a\SC5i!eh0KdLm*FK9eoqJl_.;\Z:*FBJruOZGVlcJpl6/lkL/18LL=E>rPK2U:UeMq'#:aVIsP
%j/7>G%gYI1l.`A?eDNa'4ihR8ZTmcs<e0#mdje;ICf,6#&m*Si3$%q$&DG=qmH.C&`pU5ui!*)dTI`1'_`8**@Wp5pi39G2Xi&8r
%*T1Zf-h(e\:od*%C#sO\6N^Js\mI_P/Xu<;=)^VlThCdD%T(>bMBAJp"fPcSkEsV`OGp(kHVgZ,qm+!b9ip4-3j?p.*H8qpEDhil
%PMQcBCg>S0>er0I:mugoXm!1uLIDmK.Doc%W*tpLT::=FE8T?&CE5&ThM>Q>32D7pLo.cm_>#+KBoY`@_00On<.O2/Y\QnDGrj:P
%Q,g3LEp>(lW!lsnIYUB59Nie!,X."[^qP!gN4]YdaH#IUQ`A>o7;#8:KMZf61jlV&g7N!CHFhSO;3le1LH&:sVVSuHI[*Gtg%R`e
%ADLjQJVaQR(<1defE_\TM/r<j-*jE\>/WX,fs'6cT$X5SElOXGffr=bbaAq"p'JZlBtbAe,P%2;)Tc%cP.\63-$+k`h6*_%q0IdV
%,d[fH6O/:oZO&S7CZ&0^OT&osdB+f_6SC9O%ZWt41C>*-"no#`UYp`T2jfDpk4d^+A40lhjUgNcj%W'7&UHhUluspPDr);;3+<9T
%oN7Ds7oT;hO*LMUA]-IJ_)Rg#1#I-7ZFoV$+)PJHOB1"_q@7a&E+)[*O2SiYM,Y#EY\=5ciBEugP`[,+[s&6BaAK74.;2Z=TSAq'
%Z_!)O*)K!B]jj*@*(5pO5hloja^,P0!R<L_L"%);6VLIlne'D5#Lr[-ampShc[]Hap$AJ[_ZiY(epOopMpo^SiUD)gE+:/'@/!6`
%KgjI/p73@f;.VAG>f8C)YtRuu&CWsAMm3*)/.V5M6kL.JUoff^d*p6T*`ROQF5%a(W<Tf^l?Y>+JA\qjk5K8bS*:5q\hrS6Wi>)i
%&XC(7JSQPubXX?OYpffh`s*EoVSmR[U7Ra64<^YXC07>`p:D*CF<9(3=Qfe+SR9)O0Bd9S,j]7dOCA8gl+tTS$WM,!3+]AY]WKP>
%VKX^miKEfj5b0d[?EefFScG2D:_rC"5OPmk3f8/e^u@XC'VsB5''_NiM_PS:Q35M.dMTD1UV`&lBkDusrtH#udO*GCC&\dj*mA8X
%m=%VUd,GDY,B2ao7jRJ!iCS9GAs'L&!bsCiJI(K+,.S!Cq)iE$1putg70g>BKDW*!j:Iu<VU/H2!:%sGF@J"J)*[/<L7rK0[YcXL
%5(m<XeoGKF0sE""VJhj?g>7SGZ"S<JjbLgk>o1qK!sLV+rKH+dX__>0ltC*)0<uk%i!X%^$NJP8bK9o?S>1XhPD31N6Bd9a71\_&
%UIi%_kcVNhQLJRVr=P1iA8!I/+\@mi;j%HHD_C'uS:DpM/;nYDOm--d.PEUZ$lo0?.e*uMC'k`$R1.M!fsiR^bIo&U/]Be&5>E.u
%;m;`aqZ16Df>iu7,a$TAQIQ-H_%-%Rn^DZOUuNq=c\M>"H2Wd2(Lp)f8\*,&;B$hMO@<'Q_l)BK(Ac-r5-;.rOZKI#McdTO_$QEL
%b+KZueq_BV3\iQWE/#/WEMl!c>I3oY,is`JF>_'u91."L]gTbW391*?VV88]MaO<!egrG/liu#;Kc/In>5QC>f>n2[B4,uu]9KU"
%Ye_-cLMagVc*Cb3@<O+YZ9]U9;68f(4e!u/5KRFS11V_t0q^oh"l`QBDFI4jjd,'mO]:(m6eZmdRF=eBA_?hMO5%jH]t&opPI?f8
%m*S7"TfrKQ#qfDnMZP\X[=GRdqfJb9-S+b#&()_-FqGt.LM/LB@58YPDI1/LO\7@q4*fI@Gt??4K"R*UDoV&gQ&Yt99<hW!efgH0
%2,^9Dh2#SWLe2#b.^2"V8t_tNGX/M!+X13)e*J6E!Vk<I79rg*TP8NKW[4=]B($nIf!mS<n4k/Ap"q(.TrH#M>5j4jq)#AkLO?`j
%1:s-dR%bu>'h^P-/SZ&IY109LWBBQW5TXXJHmkAg`u<cMN5VSje7pq_?u&As3k[l794:ojJ7h`^Yqec3L;J-q[(u178Rk[5EP\A>
%oRKUK6-=Lh\!CiFNtsd:iH\Y@C+0QNh6F)RC:"Smq*H=I+QIL@h<0OE-"p=KU6_VZH4?$r.NFd0\=ZmY<5EC-H3[^*T_q'4Lu)'7
%#sVT/J,UfPp*aP]I1D`=6QVIPCfrfR^&5/N,Gli[&e]b]#7\Y.YG8LJVQe<sZ#P`7R1aQ[$+SVgP/[;'EuuS[,FUFb]:V-g+@<#=
%ZIKCrE2)+9&0A=./[EQ%3FeEjRG'"IF4H[<;hh$'BKHZgcgH"\.C3i8UR;uge+YL,3h@H35jf(W)gh!Fc%o$q[b00=&bFuD/DQs6
%+PLn^O^\4o_+mIc,'F$&Ooj2K$"ma%J-5U/J-(WYOu$oS8h#]IJS4*s;Vgn07?=oBNQm6L/B&E:gG8qR8Ra)EP#Qo4;J\T9L7=!'
%,0pQo_P?c8Xk&*UGIi7N(bLF^=UYd%*P;K'$?rd0-,f=2bOJ-]5UpP3HEI9CO*A>%K?;luei/qLCg"NYQkmnA!rOU]5>7BE%bq@m
%e?rrH%ZX8fgT?m%&nV#/k5DD71E!JJ'#bk"CSu&t>0V*J,RHJQ-`DW5:`T.FhCP7PK[\gCh<DtPF4jIIV1Sc^>IQF7YbbXEX%Ei(
%>mrX5W\j;ooB[9l:dhJS`lhbY\.6@JUD6e\=efaYZ.L?@MV@,abj"nbM6pi6a-5<X'9+k6l)!R`J"nKY3SZ7.pROtIBl6F>`>/4'
%PQ1#POOAW"&%@.$5PWc9r8cn9T=oOLo]F'g=!.J;n70=a83&[$*9fs(J+:]X+5aa2c,1'AqU;'!5C`Y"(EYiSU:*:4p^bmF5LP%q
%D)jh0H3uN1eeDpR;Uhp\s2iG@*<5,e)tTVhIT1'#/''gN>UW9hXC9ME'V_62-,nc5E+C_M$_8@PRGYikdU#Y*q^UC=[sl'Hl?rEf
%E2efpSZDAd3#sbWS$COa0<Z4d1q<YGf2$U:rTqY!$qmkNr+/ZY&#(-qN:ppB1;(Kf!QUkjhO2T#M'A+g\uqCm\"/NL:Q:gdiq`-4
%F.`6QlZMMmVMDqcrk2)LE%[TiY,BHXgqtSc6)km\F5Qiom-9#NWI:1E<52[hq)4/l8+C)p6'P\`^LPQ=[l]7X#fX"Pohi,X>iLq?
%OD;S[It)h1R_/u8TXce5:2,IN6<04O.R"ED:'%3N>2Q[:S"Xr:Sb9.V6s>H*Uej0GZH1Ah:?gWr$.gYa$hRnNB\:#.;lloW9Y_.n
%.I^&H=!/+5#2-N>g3O:(E2J3_fmQWjqQqGQ6"eu?=fe6H%_q-?7e/1X,Wo7FB?/,2giAL>ebM#"LD3$1Fp@Ztn]U8#jC3d1d9'kN
%gd*$eK5i"XC]d&F_k>#O3c1K0q4t[n^?c>Q>MBU_I'?NBI02JY,V*7?,c!\Q-#_QkR->G'@?R3\B[$(YPoq7-6IM<4MnHO>C_$b3
%-P(@JW'?m;hoA,TLJ+5o!Qi/P8"ZMuHOHpF7TP#rnGCrgV^B1NE#[>[IV(/A]*YgqKYh"_D?1[9%AuH2M(.dK_r$28"C_ti*5Um1
%6k=HDI>WTBPgqVdVN!\8Q0%HKHp$rno*L25j9AIH35C?Ked\E_8g0oYPq-PclHq5Ae=gC7@oLJu1DGe8l3;Ce"0#;+Y7IV'p#hZ1
%HT!`@o4;*1A&VioeM\W?N7_O6,jCirmN/aL]eeY^N49cN/cgou%*;nqfbe]k0]H]'\/6HfS.Wo"Rr0/^EPj[lA&Mc[%b\?^q@&VS
%`e[+j`_,jJ8fbC2/[9^.3rV0A@r(bQL^g6c0U<Z;&`6"DF7dbf$1,Fe$i:!A2`_b2*2dS%)mP%CWo\,+(rhBLJIrE&`;/MSA`#aW
%gC9t.'?Z+OU`_a1`*!st2+Ci0&LV),I:L3k^(Wt08NO\DLG@fLN7d?a,L;kl)t%41UB<u5$S6adUh&<<!m,`=Ic$+shaC&6Ep_gD
%WX%>a(=)EpM"AW*G=LroE(4)k&N=@@eJN9h0]H]'\2Y]S`e^&/JLU*GcR0]YeIAO-Thtfa11CLS1e(`8&R.+kik"'D>1es9\Mtfd
%`e]g5@Ts'e<fN_Y(<m`eT.]K>)fOl4U@renqai!sWG(t5G:0>pA2JJ\E!%lkp!D=>NOnh0cZ!?jXLEs%S5"nJa/QYbC8lV#=s`U8
%`B<h".nW\<B8]e`qsX_T7A4eCrbEJTqS.h(O@Q!\J!GtEVX%h12PHeC8Z"(h(E+g62)BrpQ=6k$%&@""P?KR1]NDj+9$\12SjTRt
%V5m(O7OsMK7o2k+>^@5"oLniqJna/p*>:(.4"\>@AdctV=VD3MKUD?%8rd;rB1*s+1cPY./XA_Y5Y9NuFXI[pS\8Zo?&VVD<_`.Y
%99H;eh`B-21[5g^Q4]-D>d;,rrAY&VXI-L7g>&fQlnf0r,Vk%Z%qO)-0P%N9F]=HTceJo==:`egE7g,7n3um,UlH`>M`n#?rp"32
%DS@dnMBf$]lA6r"GdIg_`8_JK_<:<&H0;@/5A^e*WJd`PQ5ch`k);6OE4@T;F>eaRp$</2*>7u@eq@ajCDiIVja,W7:RM<pjh'nY
%]X;;ZZ_.S@<CGYl0/G:sTU]IX;,'Elhjn`oMtXZEN2St@>m4$BN*+fb&->`]:7!$LF/umGo`eXl!Y?6pi7&MG9J.Q26V<+Y1b$h-
%72'Y%6ZE*J\(_"@4K%7aV3rVD1l#QT(A8HDluscL?T/<*3'ci:jipji-<'i[6+VuPZ[d#>^!+>?89HV??oS<Z!4<JHjnpV='a/(a
%08cg2+/NM7M:ZHq[)jsjWqk0oGtfC.K6k+,c4"j*i*mUF,>8IPj!(UQT`KPL0o3nllp9)9e)usB&,b7I8H:L]P7^ho23d[oWjjG!
%K_$1O1ru$AS`/SZ7(C6c;'&hr=DHO&2_;8/EHN2pN26jNN\#Or@Lj)!+3l@+C;s[fB?%6Kk6%*mSo#JQYt8tb/dW/`UrP6/(4!<V
%r/_=So(]5sP74@KPK@N5fgFd/X:hM@_!0fqS2tlX9#*$*ldcI-VI:1?`>3h:EaY?eLCd:g1N@OrER@;jFUY4(@ID:F4qbebT!e(s
%3egV<6Rj-R3\c[Nf_2iAm_FVOTeoF$CBQAuB+l(c3ThHiM?VL3&uQ>ET&p8s^%&>u-i3G@*0FEbbG^iEaPIBC+=ShOQ-tr1@tZ;A
%EWhPAP(q:HU'$BSBYhT^9EIOI\ee8Q=0aXpfISA.bNd^k[Qq!K3ab\"X/'D$M'GiL6*HLDGmEDg^em&6Q6mZQe'_S39484:UnG4$
%STr\F2c#`5cYX!cik.Jj,?+nbl9o-_a=frO(GH%tdc=b7(N0eF5dpoN`%SHDhF)3C(0CUa1")/aYCW8l*gDDG=_2)7:B[a$4"e@K
%j'.[14/[WUEu+*omNj@+h<O!)gDd<+,RC<@&'#tKMstHbh7([,:AWE1*Y>=p[hN[Vc)I#G3Q9a,UG*r)k6S'rIK6.0ORH3kY)[ok
%S?,I"GQSg9]@D9jIdJsKG6PDt1$4uA`l_'N:`cAg06ud)!!sY-Li3__Vk/7Z9B9/)<k5_CcMJ87B=cUq>R^>0FVVa!f:0FsiS_h\
%Q]n<2Ig95rL)L5%GOt2;72[#Y:`oE;G1"Hu/[:*r'_*/=BBD?n?Lh*\Y5k3B""-)h2cc8`I.$,Jp'Jm*l&^s_'JRC%$2<e#.W]H8
%+0P=g!jt(t*Tu?@kr$P98jPp\@*qm.+C?/>3@]HI5nu8)E<p>\P*967'*lIn!d$*h.@aFH?Q+'n-/RWVmZs_H@Dto*D!HF@T\M""
%<m(ql^jGWL88Jce>4;"NWSo];[Ws9M+=MX*ef9'\'u'NdVj#iadf88gB$3^#.f;2c@%J$EaTLG!Z!NOHdB=t07u&o%gQ&uaVC.#1
%.!_7o%rSDaUMlub!M$%Fb`m.'A[JZ'0M[`@P(TB"k^!AK_hH/0f*st;o<`eJkt?Tg23Md8?`SN9bBNfM/I4+?")\=X*Z=S4/,@kE
%<\]:`EEEX0047-uD;CR)#9I"YS@6B+-fEjqcAA.C24hU8Nh+R8[;rmU-DIps2dVKC(/)*Zq1I_A4HJ*fTuIC5:-rNPi+[c:Lc?eR
%Ju!h%LcA,S7#VV?6e428>2teM_)X%R>3Zp@-^^o&QIS]Igqap'*fTbX<TNt+#Ya18.-GoI`BM+KYHVJJ4K0]6@=R"r8W.>FT4[B)
%GlTubaJ!5LII[I""k@R5'k@e"0Pqhp3pYmCRK8a^I+cM^SAb"W^JKi70li9qF2V#)Q.)(3Uf)pT&@m'[F<2\l1Y%fbJ6otUKde:(
%bL^<(*D-s8h/P#(gOQJhY$A?ndF>;^IgJO>lH:_"2\0/\2RAXqYR,>N*a'o@\^/?(5u1n5Ut%5Z>Ze[0lQLj+fi%^YA]qs)/OeN3
%e8E1Lp<l'RS8.0J/=aU)ab?p]<&&m)">pj3!Pr6*TK_r;??D$CIEuItL>A&us/pVS$&Z6Wg(nOt&DaepSg*n2'HdF=gVl-poF%+,
%<>--Hee;`&CXtJp*g&FR:.<fF^KpI_&?V_+]T.2d48Z"0K1uDPU_oZpKHe4]=>WDRe(DLc&/#-ArG0N^^-r*."k9?UR$mDq8rWuT
%fX0rWAr%`H:d`:u:`?CFP)*J:&WYSImC%^dg%@=$184^fVlE`oEcE&+K(`&i5rUAjnmq'[;m065Y:%fW=7IEH3OZsI:KmU/AP`*M
%%&i_H`l3[3qn@fG?,j:[Dk;(1df3#\<ftb`_>8,n)sYfXP'2PDkB/<MW]>sXYb3p4Q"?4;1E>(beQu24ONjY&h;i`(o:Emjdo1"^
%De!e)*9u>,1Z,YCU?B^]+#g3=<B#hj7MVn3:H@G(l.WjR+foH<:3Q`M"aVRk;oTA$7W$SdCTn6sZtn/CkSdnq3bm2=2GT^:4EVjh
%RT0<C#+tIV'[X0L?jM0V(!qTts14K\U0JI3YDIR=@M.h?FE\F.*4,A>IBJ@R.'E<KO,Z3BTJ,_$5m`'+9MR?X?m5)+>:=rKFh3k$
%CRPCVH]Yle*8Wh4\R^\nP.L).c-mK)k_bGXp+]5:$c7Om:o/7TqV(YIlU0\rnTc\iN"15Z,W_Br0OgU>_4Ku;FNi@14l/0.D8Q%?
%Ym[B3;!4?V<RLpPF=OD,6kP0)`6e/R<(o=l@WN*.RY!rXR,*p9;F>m&oK<XZZ_H,I_r5/4WXicKU1\VQH5CfeCW.S;bl5.eReL\l
%>#2_!/\SN"S!*&DE0S8m].J=NSX8j^Xfr9-]$T_4TZctLBmLH*X^@lPR4*9sHhG\RKOR,9'gc:qAXbAq41f1/(lVc?NkX1DMT8bl
%>Ht=Tdh#>c`r!S%^`Huc$X>rjf=E95eQUH(:(chGA'g<1lClr`M?o^d\Y?:_lT..Hno,%0]h^UVWQE%m%AEF_6VEYSF%W)L\H,%&
%L5ht)8[DRBUekJK[C8#7hkeY5+ZF^cai.TH*du12:7C13B+2PGP7GM$XHNW;C+tMt:)NJ7G5`&/8?tUl!D,+Kk!@Gu&["]5>"!M"
%'3O1>^e^"]oRL0\_6TmL(`NmmlA+>.+Qd2Lc'nHr./[V[QC%tR?I<F=8GPUVD$6AHbrS=3l6$TqlWK-;Z;#S:BD%V-!o7+hRjYh0
%!G5Zi[\0K(iM9J\%FmSOB`E1PT3J4`FbX1gMoA.]Fjpb!+kX3G)1A_(E#GBFZj7H!Q:96!+DMd#02&6O*B2;(9DL=8d[Y>#"GA+<
%DYH'bdq4^`%NV@r!@#oYLB<\%OA1d?2.MS]];D[+`(HKN`"Qt_\+iu\=!S]QfSqnf<^UAm&QK]65ZPKo\"dhDR"cI33JlA?C9&K=
%OH/"69h[nY\qW7'SE7aLl/n#oa&_MXemjRN.r%@pgaIMbIL#R7-Lss$^5\Wr4_Fm<#LW-_`O1Q_TLE?,M!BZs8sU.mMlTVu?AVW!
%/WBZ#abtc)%oWgA8+LgB,eB]o5[bb14D*6P14^Ai\S2>VJZHs-qL3Oh(t(<cj^%GG`W3DX^^rKBr7UnD0^%SBCD79\Brk=8Baj!]
%L%XpiG[m#@#o*'n$1osj&oZ&>"e2gYf-E%,@rc<2eX!pN&jLkNLFe=7>"ph$:s,M@ENFqiQWi2Y.3H<,qR5.V/Tm3b&/D])TbelW
%nllgT0Wb';[CtOFO=TX,2cuUcMjR\T&%.!farlZa^NAiADZaJm9eA(+98;V!LT)b,[T:7tULhUl#Jml?8ciKYE#>S8b@/NW<$8A8
%h*Gj[*<ZOm`X!^]="-b<_pW2&f5Ngq@5FEYk@RpccLREE4mpUQjS#PVLSC0N"@SsB-oGZQeC9IT>bdn<"(VN,bn^lDUnZCqV/L':
%0_Mr#6k;i.(9Kt@(R>bI*j'f21CK%meSeS$?&R<''Q^3b"CfWFR*Q)g>[MJ09@R]#C6TP8"XT_T&NhY@P84=f2>ENbgXY_92p*Ii
%FJ4VtAi%R>:knk0m$Wts3"6$8WT+sU*cN"MC.#k\6`GK;p3TnWB*).,2U<79'<;hJ>/p'[Fdf]_0B@,c+Sd-HfZduPgo(cCCD*\W
%;'@-R(S27?g'MPh&/?#L"@t^%7YN6D7G9]&Jm7WfG+C^G.WZrAi+W_@UobnK:/BHI->,sqh!8C)]HJY!Mo'3>7U.o5ao&&M,,8MW
%4g!%*>]<#'HOe*M;.5UV#U0Pj_I6<^[_[hi%\^_GjgDpt5i/9)`/,DU,G&B/ZI+t=<?j2b_2<sidQ0CrW`$?MPU4-.DGJ(38,AsQ
%@<0Jf8'\58Ds=(*i+dlVOfQ,ij?-?E)M.45DY(2pfnLiHeha)@RK:U<VP.5[5nbOVSd,Nuab@]k@6@%2$M9fi\'/HaE9"70[b4qG
%!*+`l$<>0I[;BWSX5trZ\3q!=)p4BX*\D:2rCsr/.B4^q'\1aNW75*InO+m%bVo/`[6bP`15b(+r`/g!=3<\ogqK[9LJ[>3.,1V6
%/mYWng+g/qUY=OsWSh\jJF5"7`5t*rk,mh;F*Kk+kXEZX1,RO]B@M>(hGunP+mg)r<)Z^;;2Hbg.5RWf.(mdM4noq4A+4/RB^?4M
%=CTBA)c1dBHX^h^8n?+S`:^+O76).+$/A8?M%Won]k2]Y-Ekoqc.-"\CH]l]d26f=L0#hCe;$4?Z`)Q!cddoc!`r2t?-UhN&h)'a
%FR)(,c=;44;HqgH&iULjDOua,chb?i9^JG(\Re]mW`PP93`\7rn7W[S2k$pNOSX&ar9TM^2JC64[]NarJ]\Fl`j;>*3&24-bu7\"
%jB7)5N:JcRh^XL>+r<8YV\LK4Z8@PQ+@cs'keZSO)&k<.p"iBf]hICN%YhDD@2jC3F?_J6K"8udCK/@UV!WH9NZG8DH#`Z<gPoX@
%nr%nt;VT2(5b(l8h#,j(T4.la<9NTMWDq?b*;Rp0DN*7JP_S'%o)P)ioXO1=/f`38ZB*9l5p#%OU`XMk^k'-Wk1'DQm_6'1XW1L=
%rB/ETs1sAAI6%0+"L,/U*nIQK!&:n_K<^9"mcjW-rU$d\W[d8ca2[@=c^R"?mUVKd:8q3U8u5E;0aVSo[/e9@^)q?e<Qt.#SdFqa
%qU4U(oM?Akg;&6>r$L?8LiK9=KTK"2.p\7jjk>*^0j2("ZNAkGLk`q7qWGGS:c(kAo)gt@Wa&]A6GXkI6k7o3)!4^EXcZF@JQLET
%fH[n"*@]rX/9>*CGlh`GXUGgkU2'$E9-kh&Ql/5lJ>BulS;BGW'$)X<!ihRLZ>Iq\=Qaifs0D]gaDoH[OcZ3QARiK4i\b?m!Q;'X
%JAGm)[*(XFd+GgdM'o>I]&$k*A_<.PY`M"3?()p:O/)$$q4,tQiJ^na#qXq#XtE,DF7:=oAI'M?G,jmW`hM[$gST?g?WMEeGM#(b
%MQohK!bi0A5^\fKb5ru\GK:L=>T'nu&&;19Zh0\`YI+q7XK4><a+1?Qd$HNC;+m5EkW8jk&>XE[jM5;8E9WWp3od_>F;e.fG>p;"
%Nd@H**f&bWACOdrpPc895FQ`]!8o5Fc%C!BK+:5j+7,,>N<u<aUVs4.cW-$:nde\b4E<[e+S!l)^K#Q1G!^V0oT]iL$2X1"oMhKV
%C5e1"^4&T[c-"XGX[8Kr]Z+C!!KYZh"2U?u\=X#*B<0(mk"sa7QrA6t-hq!T*-e\H!)MnW#!^&A?M&BkC0Qs-<,dfWo@ZS>H]bJ%
%Cg.=5PLTj\5j]Na-e/H3@kV\&!-3leLeiPW_,Aj*P\[eIClVA7<H:8,ZpPJ8Yu/Z[VU/7lg[&P$5NoefM6P)\K>\J17e\7gN0P$F
%p\'>%%#Et$.M?uJ^QKZfE,+;!*#,Z[$cDI?#`][lO@/_(Y"]&>'Y5+(<"O.P$al7@[_dA+%@_BV6KMNrj+Q:9C@17E*EQAn&VJar
%A.lu_ii7eE"iSFf(obK86690Q<X;#E/tQ`P<]+9<:!*M"JE=!I!8>$ZUO[]uLj^`oCgu=;\:+9d)$fN8W$m50LG8&Yd#9q.d,R_m
%<;6cN>aL[[09ZK.3"MOF,*kqg2Hs/)gSfBk2(E.i&3V=g&B6l/Kli6+g)4>_pIm'&N@H^jlBqe?(#^1[QrPif>J7?]R@^DVCss/=
%LTWG]VA'rsM;/.TPtOg!$0RE:/LU\MQ-..J;jfS.$;:U_WS08N@g":.*.dCboJ%2Q1#T;bD.tQZ..dS230Xf&Y>[W<$bH&#cVNuC
%Y1iu0:g.<@!EO-6QAe*gVV#]5&#g<m@#4=_As50]1^KOm.k1$L)<l$[.$&O\1QZ!@HKl4/1LH72;:\qB3c),-&7g-K$j!9b7TF1?
%VG^4eiTaSthbX&b;mWMH^H0pJm2lDFJ/Z%;5j[d0>]91p*jd'P6TaN[i/t.NBZS`7n`<=CaV52^Zq"S(?B$-WN'RV5'\r9/3T7;f
%$"`%3!kJjDaZg"E>FfXNWh:lrI.^W?,%+p9qC8GK%g.Xk#QXE$"$OHp>is)U/kNc<h\ZH@+8IBL#<#%9,r%6;7mZl9?YqNW!@<hT
%A^E1DUF^q4Ytbl5YB\QjV;B+K[[sdtVp;6OJghHP<t_]E*>m^senB-cK?_,F!)t7<!U+7XJk]g-#m7A.1r8pgFjs?`IDj9i9VeD5
%k[156>@3F>RK,.T'DVKQY?ptZ5+:T3[ER_"n5]p=EIM(P`dCP(6GSgObPDHjrIR@B-M3t]ZOaarpTdrQB2+pF]jV!uqTEOW1TM)#
%k^(D'$@s8ob$1PX,66+Mgf%ct2])Y7V,;qJ*l\)&1?#eKlf_GuCBbaq%YV>j8_0[,86j9'0Z3QF<)Y+cj3SGY1D.bG/?W6;*^;\c
%\q8s`J:-!Y8Lhnj7g'?e'`f4'bA*tmf)Sd2)Y2jJYO;Hmi;cHd#_Oa,g,CcMAlmM[M.BEklkNe=!,'Y9pJ:oD=!tm7)Sf@(U'S])
%$XN.s^IOJ)e5kM*LeV6J93T&g]>=,/I>nhpH)k6"((M2NfRf>Cm$d+JjIJV.1d'j+KPp.kh&[;UR7RK.dj:%n)-E^&GlYcJ5Zdaa
%BF6>c&H.PNXoeZ@1$=/OEm+lR`X&fo@,Hpj;iRjCqB6SSkS[>"d%S@.\jO[OeX%Q*#ZP-)-MpN1n$3rDf]1=Dke`dU<Jp<@N$=+P
%B=@+Tf?+5;AVI+Mrb5##5FHD9=*"nD[-OC.eQ<t1`FIL;!QV)W0LT(/1"D73?`+;d;XRO;QYltJ;9W0Y!40h/-Y'HdWMci`&-[`Q
%IRpZ`Dt/t5b%hWMDhg(a@u(g%Q82Q.ia!95#=,%N%d.R-$E0IiA;ChML<(aL8K)^20]7UdDIggUEjC4kOq-15\@\-A$%$C8NTED:
%F%h%rTjuA[U.5h`0Q<)':/'-a1SJBT(/@Pk<0`L_f>>?,8M\=1l=j(72+5cg3$oIXeWfUo*+%`0<27>:ciO>67B'+S.nC2/5,j**
%?,RR6R3KKA)"&&O^(/DBTnF$;EC7)+N__r)Y4cf*CeF%>UZ]$n^hh=T$`KT]@/pPo*pVooRV`Oh(F=[]1l")BRZ1lcTn!\<k9g&!
%3$K4f`pBDWGC0rB12TKV2S5(PAZ@F)^bKU61r_fS5`8W`$nf<?-[LsiMl]gW'&&Loa.,fK2T?:rY2.tnNRp<u9RC8Ad])&!AZ6st
%;7\Bdb"Jgo?</?Wb$Z5Sk&EEB_;N6uUoS,==O1Jt*VPGG9cPceAe-U0edKCKC?T&Y!rrEYfXY+_'7b=a66"\a@>NRI-d?T;801^4
%XsIYa;`+WE<V30HRen/V=9,)mKH$-3S>7=Uf[6l]*bR_pNJSER/c^aGh-mZ;[+)WM'"$'/!]"S<A!<g#.Yl1Oo-r^NoMO)MVhB]:
%EX(1^R1mYXTm^8KNcE(QIKPPnWCOOSH:2/6N2tBdP]a_Dk%'N4LX;gB5"#B@"Y5.o/hapkaVIg#F.ug@%Wjbu*K,Y6gA7>47/".B
%Z[RIZi0D8;9K06[4@,dUC@i^T1oh71_^`1VEiJ*7oKI5!MAV%6\!YJN1jsD#^jP5VLsHW`dYTmgJSn/J($JA'6qCe6,Zm*mT@"K<
%%H8EAHkf,HJ:U)-N0pf5!(Lad!q.jPpcVeU*1(0U+?@&,8Fc?pZ?$it)dUEs%7b;=A1[:+-md8=4-DW7]j(T*')i2;9"hPK-7HoC
%T+Wt]0a9,9jK##GHN_A?7FJ-p,7\hOJ[S\<PKVQ(NC&ZCO"R$H6jZ,JZX.CBS?.\g+p+7W4StY`$0iP(GI,W0,7^3+aj@sC0WYi,
%Fd8J>/@#_8+Unec-\0VZM&84E)GI$oEapqml_S-soEII2Da+_663?d*&o%iS<rb`FX.:j`:'sMG#@!o^KbK@41sd)YDnq3L@DqA?
%*H9"m#OG(qmM#CibSW0!n9?iF[h*d@7@NNZ-5@q]&7`L0;LkP.+TOm`JQ/s:$"Q]@_oVrlS=K>(_pVrO\E%<l&SS]N<5PUg@&IO;
%VH>o?AD[SncOg0e(#!XUV^']0Nk'b29^#6j]8^WKY[:AJQRn\E\HX%ek!KXO"!fAJ)^3%gkgRbt@\4UQ(]k3,KY<=N0*.tYJR.`-
%4.6b6Qu&iKm1Sg.YJ\a?#R6V<Z&%N9o2uGTLopBF*^QWNDF)XL,_eI_c)!PZ"P48cjU*>Z0+q'uP)"tH(*KRnATKQn=)aMg!.*),
%'0s]IOTat"!LPnHSb-!^-504O]Sh>1DJ5gcE-;'p^ff'NR.gk-F0n!a9Tke5?6JPd;)SR;DW9sR^$%,HJ7rks`X58!"hba$VlEX\
%O^<.U$ohZrJlo.[-b/2F`H[`M'*eQOB7m0M,q8:m07!I".P(u?ppPI38tBGB3aA:58d4KCR=3r5k>pb;OT&(HH2t9)W%&r-%W<VD
%OB";_>%sHGiU@ikJ=ZtF(Dd):4MB/\8oY\SQEVeaB*pZV&,86FlU&IL`moo.TKKRg'QJ9H%is*e#(3DHfR!e@QZ<tmc;dPDY&b't
%eh0C/?mHq/gJ>W42$(JOpN)lQ`--AZYcTI&*4?mY$mYNg\&TIh&Z(3b(nqPo&hSWu(b8R*.3!qj&se7LrWtj6*<o`p+s;"CRQ8\'
%OqC&'C%)t9<%6S\\!^cN9Ug,d9VG0ab8<%$JI,l^XbTFqN>?b@.G87dS1l3FP7lRF&LO<45dnr:p*$?=[;Fb^U$3j5E(hGb:QB1j
%6_Qg\5p=#$!tb2k4:K6*QQ,G8]W2$EAUFTiWr6Ci!T"2VRBgsKH"7,Q6":UT&c7I==Rd`tA2O]b&eBlCE0-B&Z-\D_*(!\.S-(,#
%S#enXCtcmF/jg+[#*bP1k0aim:'#7UQTmk\%6Jlj0\:A^<elD&*!qW<`3r6O#?]3+dF/GQ3eYa[4L(<+a&kQ8GcJE:7"T^`@l>)J
%JC7iAR&Rq9_DUJCaCB,)qj$RC!qG/O:J?j#D<WM1P+*,5:LR!)*a%-;*oOOc@m9l)(bMhgCljK(6t8K3n]1tL2fO<72kZkmRtn9@
%oXH*O"M5h',1@d`jtcP4fRq842V089nk.VoKL5>FU=/4V$OMY?eL<)aCrui+?!S:B0e/=V`7&\<g.1G9((%g9<0=c4Voj74*a:*&
%#a1TXoJ#`;oZ.L+9Ybhc7rWL>L86AXY>.b?bbX]1aN;XXo#d094LNKY;nK>n!1]4`A'R)R;o<VcO;"3;>I!Q4q<H'gAgVZ0fP?r(
%[E4[&8jE&LY/UnpJD@%bc4UW/gB7"P#Vi4YN!l7d"OPVAn<b4J4dGVeO5Q-mZ6R%[q!7umHA(&iqQP_'Mic5H%upC6/]6fKk:"TN
%DQ"hcMHG-qJbun?;3$?#L;60ZHf'lKopO$8"*13m`*Q@"Y'NBU\_mSjI>gU6g&)kYGP`Wi/FNU*""r+fnM/Y$lZ,%33/cEZ%iSqu
%`CRQ+oV)dCU7uQ?HFGk5Th.kGOL8//l#mV`W-tLI;i(j$Mn0C0h(cHKDLP16#%>kVMdk(=S+G^\m'5^,C'4jK'c`,6!R7l1a^(D/
%IY0?"*Y2qp!25'e(*+41WN2:#S^JSU;E<h@9Rb;)81R:b/"7NT!0.Yk!*"4QjP`_,;81r?]VrF(H"1)Y?!Y@`+PG`7Fp?%uKd]km
%AithA&tGlLYs$#VNC5aQkee$SFHNgV"?Q^6&^tb^<`W#9N&d*[KYtl@5iT#bKFq)[bL!W];F3rX/;((9*ehI%A]#^].d`K(OKoD;
%$/;6I2YIS>@SgYcaUL!Td,cV::i:qrp4ugr"_j``7<<5LA:l1XP)*J%*LCgJ7-nB[i"U_Gonm4a]&8$p3QjN%D$$hnfS3gl?7KF0
%W<5DXQBmI+#0]AXq8=a*g)PdCpK1Xt*PU"Bm-"t5nPYKb\(ibF87WG(A!l<I$UCdG5miFY@>ru.?urS5WKge.N_9u67dV@SI<-N\
%:Z)eG>dZ.p_:BBMPpk2(!0dK+meVI*Z$+KnQj0*`&'u(,.D7!<?:f5.Kqu)r=pIYN<[f1Kgp3k4&gjbV!5[j,+6[F%4gQ!:bqD$V
%7l(PhLZp+GMK/9,`O(gJ=;+LKWL.b#3aB?H[$8_N"!_.\b><igYbW;cG!mB1nGWE`^\#E,n4haa3-j<F\p7+kg7cN(TF=$2'#R]<
%&S$GI:o"Go7DWbf84cardZ7-:[ct]p`VMKeh+AiA#sXg1VL'iNa<O;8/sECB6lTG:i!$pE(CD1>iN!%c#D0.L#n2-%EXS2$5O?ZG
%o@YkU-sR9s7NcH[4pqI^F50#uG?o^9Nd/bD8r5hB(a:5"?('1k9j;+N7)![sh`N8h9Yc9_gNXp&D&WmBp-_.EeE%L0nMkP')d`l2
%&Ng1t5R^8=Z=<TbBS.hLHng2X@dq*9Adh:INEgq<[5lcI&r>'K,7GYGpFNXA#C>Zh.L77FWIGW9PfB]N6c\iK[lIYR3$=p3B63&p
%RDp'sC*$[Eab+\f0N`"4G<#8dX^c/f/tHLaUhPsp.1X_$4<2]g7RSMPDQ"P^&f<ak!q)4iTF>X9a%1ddb$Ah)7WiIF8&7KX(as3I
%UeUrLlqAIuc>tsa+I0e0!+NP[#%joTj;3OqJRCb4Le/;PDf[?HS'u(dcWLC+P[K>bRkCUg"B@QrTLq1;,]!l39iE'/-#%VeiYm5g
%@(\mi>m0N82EcIk.aHcQh]7X3Z#gPWc*^1EN`kmhcI`/g@AO7!'0O&<R:YuUK(fBo=EIXSck+X3)9"6/Z'"Jm5c+Pq+p/gk^&p'd
%#<Bs!Q,"LKgIUL&>'qL?'JROgWs.-\dtJ"7`re[V7W!qj<8rB6UBlAQcq"[WF%%50D*SC!];.pM6Wc?C.-e9&Tk/t0?FKV5'.,;X
%/j4U`>Uc\'!hCKE0)0'@S67XK%aJm<1>qqfS-5!(cR#?((ooDW)M9diRuJEqT+)J-4`[H]<QuZ+J/Qp*9T[O(/M'F,7Ol=+]X%Fn
%)`QRMIBoC''a'2l1Y;dLT@@@^G%)CCVL/k`AYW]o.Xt8R(3@Gcl_0;tA+\`d*=?P6d^<Hek-8SZHX_UB:-&&7OkPW?*.T2-\VgM)
%oSs-K.MWGQ0c_M.65<o1TGJL;LHHjkN#?+6!02>G!2sp$!RPH&(`u5SC!<MY`gjb?:R*KkC\)RD/"dE*?3DuDMF6EkQ:o.$"=88P
%9kS-iqm>W;JL:FpADj!OmZ13-n@!IcLdYas(ECGb5ol9#.NALT=$KJ,i"d+PY[%SAP(duu"&:$;0me9p[NoDmkhGCb)]ZsF0;4ap
%PV`eBKFpGW)*eVoQ=aL0fX_+86V:aPnbe-Dftip)'LsLBaqVoN-fabE]_^a+,NC2k_V#EG_aB+cLFBLU#ma:Khg?#$("ZrV+_Vim
%R%NJq6-k"%c(Gn@1;HVBhqtZV,bRR^T-5!.p1D%<l-SLQ+6=o>gDGUgdG1=VMMqPAQkCBh(-MbTY1=FHd,R0-#fgUrLiW'bXa97d
%\R9D>1'Ccp&hK%l2#(`%)9o.:MJ]W5Su2u8Mude-k(9lSOB=&L"g+",&R`W5T*Z$EMalXpW2T!bD6]^hV[U:u_<2L]&S[pSB3t,L
%D[R,\>G/\\B``ZW-YQ_K+VK=!b<Y]9oTb$M(gOdb3]:K@X9T'=`2[,PNXkikW@dqmQnY0$_aYhnB^:iY>[[/N@?*rpS=FJb6nd+%
%W#?^k:FFmP_EA>R0b8nt4e&'@&?+3*8GD1I^NFkd+tV3FdG?,.O0@>Moeq`97qp1;3;`UCOS+pZ;6UnDfTS"tNC+445_bde)30$8
%((%O^fc5eWSH\.[VldVa!NpP_OuLJAUhi\7@g71rNR91%0anTk^^O(tq/Z+K+=d(?Gu)2.f#u*BFl2B1OG;unPs%IKCLW*XYCb;%
%XmjCK6=K7bf:^BO65a\BLS(ogU"CRVLn^8aoodK8aH%(F[N:r+nf\?d<?@;WWCJ2*R[1\K?m^OCL:`[[6(IfbO2X]S!/QXt()MT+
%@)+7pV=+\W-pds6KKD;j.X+UF$W>.Dm/3eu@DZjj=,ee5\M/dgC.krC<V"0a<9\*7"29Eh*#1LB.lkI("h-(jZcMf:,3A8JL'Z_9
%<@36\T.pZ%[D=Gc$Q2n,.\Pn-7jS@Q>!eh$FFfW9Nt?q60@ql^N'd\T8/F'"7AbTG#RaX$CrS_Q6`A.BmkNUpCF`ss&3t@1#pZSk
%!15?5m\-DS/WZLn+h<?Fq.)%Zd0H(!lnIWH09Wk;OT[Mn8#CJCN6`h1e_@Gn<?k-o`ga<N[b-N`[^`gj?pM+1J=-6dAg<JXKbOP)
%o.@f<Z5hA=O/E]L%:V-l)Sf2elaIm"')DJh@RbSBC(%eq2)YcDJFqJ8ZV"p_\(FYIP&N7k!YCEWR#Q?VcC3QNC5ckYRqZ^/r_Uqb
%8[S-JO*k=D)D8)20RkcYWupaCng'h^E>?\Kg?W/DA#Q9@:G#QXa<J^FTZ(#96B_Hrk'%YUM)#j@,3d/OalLj4Q!joE$kFbc%%47L
%D$<N5=_,N5"[W93k]%;G6>D[=RM@6'MH]d_r),d8Tg[%W6=WKOLe,)<+bl)io<BW[^[0Rm6H$9s@^R7`)"(:q&'D:t79i/3<p@[:
%aKIUd`D:R^bV>QCXGBe65\uKB[4Dg'"gm!,A?fE)8V?K[6XsLYY\+[4\OQs.4S=BDk8sH1H@4XT!GS7=GVHoe)6RVl5JXX6_?l9?
%`./SpkWR5X!l101!P&%7C2rBH!+SHLA6[d)!IJm5Aj%;f>>u,qSg=OonnfA6Z0ZhI:hBoWI'l@:p4_FhlP9(k'Z-7%;!Yuaf;l0^
%A>U_IXDZf$UnU(Oi&_Vo!^E#uBgXj%4/AR%bB+`u@A\XX#n0DZ$k,t_<F_%;8;+!F=ZYqtJe^FrgFu`%P2'*a$8;?s$XI]OM!D1W
%J>rJ-1$mh.Deu[u>b9V@T<Qu@b47NN`W3SLG*mf95mMa>Cs9@Be4]Q)nnAPn.t%0">eWATS2V-Y7U5FKl/!>RnKq`0&3-/O56N[Y
%2aeT`&d(IJ\?J]b6\)dJI">7'A"Zp3<<4NqZPS7KbPT=$_u7r8,7kRtLujJ\ffk[D0JRp=)$-<\0P1WAR/'IC(B[[[$;s@V;7Rrn
%+<F$9,qs#*nR@`ubl%-9eZb<^fXp9nh_inG]g*lUXleSgZqVoAWRXk,neHAP+-6'(d-Uq8^*)$-8pe*WpsI-&WQYK-1r5o6+h1i;
%ETGNi+U-M,_`@efkunjN2--J)qLE]lot'6F`/MD;W4e$$nDmIk@ueeg@[7MO[$=Q!!`>kMjC*EN[9U/[f]nkH)l(s&k#ACI9CAjf
%68\ruk*Kb?eY[':.3Ld^g1L,LJ6RJ3Om_n[W<OCD/ZK8t]>pV&c97qDPR`m^jpm[OUmee#8EJg7Y"+m6Gb!oJ9&1>D_;^B+3U/%f
%!SIfgl$,3Y?hPJJOZQfW'3]FF@nW`EZ#g*t_NQ7T.b"ZR0g-FJ.mIO:VnE4fJC?ASr!`WH$C!L7/LE/BG`n0q%&$Gtn^:OW(j+JG
%^?)ts&Ir+PU:=k'\>mW&?>)Ae2Ke1\'G*+p#_C9YC?q*1`\);Vls,iLQ*H0VL(bpS-I(/a]<Q%,EDlFPLI(Oo'Ob1t80ru+;qVjH
%O\SCL(d(DYAMckP3ESA=e%"b>j!7;5?rX'%<k];;4Tmj:H(eU;Baqs814m[3V&+a\S=q(2PRETW8O4=!LA6uB5gELQ3r5^lRFt1e
%8-XU7&3Fk-@D8oKUY2,1g5/'WZ9[b;"N6`\!43CV39(-)0Z1skpU6,cdK#)(=BC37ks=6#K?NLB'jN-aG'*/C"<Ld69`[3l:5mG*
%EUHYi6g"I5dVKlr@-H"t"?nk.#IG"Ud>;'a,>l2#!0!I4`6s!s&aR"n7U&@)K$@b_1tWW?;9H2'C."Re9I:9,@i8J:&dGf$!%A36
%Qlg#^:*9WU[-rt]]p11sJrZ"!A&+u]Y1t:R-n8?3!t[+CKU+>(*.4?+Co^i^0Sqml[?;GL=Tj9P\fR)6,63Nc:O6OO`:,0b2tf/L
%TN_CW*[P:9j%'7ILnQZ>$;REs*L6"')uFV>%HPld6VG7Go-PE_^QRc5MRsI5<H&B<-,:apc9t7A*l3!-.^_koN!C_3PQD%!XV*9F
%&^sT+)Frk!!-!@D9C\t>2J%Q^!#Z)2gH(j92Su\o&acYT+Ws,\D%$a29NN&a.tQnHM^L\e9\'i36>QYcE)o<Lfe.gkD'=>;"'h2U
%P/:V1(QM!D_F"ff@5/uGlP^3^'Gak]as[g\NYhB_Lr("V+t$KW!t_#A'67G<`[a$^mO!:uK-L\]\9=-jF7sd)aA)@TcRAuX?JcF(
%M&G3+R6<U>87bdq[`*&#EXZW+oTX""*ZG>!8bcUV*6ZcuXRqa,Df9jlY_$h\?XZ&8SgG90Rn`=<&&Q[4)(GCK2`VA,GtA&^>;*E]
%"a_c0\s&VA8(/cJE;TS>+uZ%h9%*<G-/5?n*+eP[:W`:jY4F@V`KV%MMTaofW@4r'>rtm^`0@;+F+-Yg'bURn]ju+QQ-Bo$1(Z<[
%?\O6-'NI?$+]\tZ$m]-SD,?f-0tkXh.RAkQ9i1N%^<1ion2%S[HH<OpXsWcVpj@2R4+*3ER%MSc4t)E9<$4pKJan\:=VUa)YEO<l
%=?jE-<DMRZ`^roHpP+S+-jK%IXOi*(EQH^&"RL>?I'+q51KIeH74&Q1;hR7Cf`<'t90U3J4bhg)Y$Y+CJp9\A`_0<44J<-4T*dsa
%9DDI'>-l7%k^XFs!OSmsU8=.XVD=*L*ZaM0g*b"h.^]XU!jh\r@o4?\_&5&nmh"4kci=1AY]9#ce:12^i?f$!2d1s_cY'Gr7gmdN
%!"t?S=BK"6rt_?"Zm*f(&/n]sZrauc0G.5+!\Q%Ff\igS$o[;D%mlQYCP+<;$<!nR@WOs>86TE?"Jj(j:d(NCpRY,A!EV;Tb""'M
%-37u[Jq9ldRb8e>>9HK@\_rk4)^\KF1=B,]I?=p<,TlbeQ>'rc7LBX_jr-M=],kYW3!Dd$q`P#r-JJUU%Bk*g$34&Zs47CcL.ajH
%,`bJQf3fhG>^rrS;`EE_A:fukeK2i2O9-E8WWGp@&98P"!;aWY_\510pYSMR6O>njMjBGGTW4jm5Z`;Y6)l+:PI8Kq(A<U)@h%?1
%VSfRjOHG6oR9d*AObeJ^!B@!.$&i[D\kle-@\=DH?S"pEDs"qo]_nFi0dVSEQ0>]*,<mX_B));<LJLs0!9;8I_>.&t#CtmMk]:?Z
%X:/<F$lHKfn<fir@DS.cRnpR2BsfW(6sHUb*.6$:)esj=Z_]LpBFGJ)'[Ccmq%2gR#B9B_\A7df<&TabDbd)[gU;%]U*31+m;mSL
%U!BWY?NPY5\$c`!.U<r+.g%J;]ECKHbiiU/K/Wdq;BnOBY^?REcG55Zn2Q[>7>c(i!G"/4-Xj^J,;Z$WYnnY!rdtG?V^nIP\AiPZ
%p1Okj3E4;h#]seOWE<D7h]$^sCj6\S&4;7Vg18D0VfP/YFTR1535[U*B_$Fm;9?dr5n=&V+ptn\M.?s&W`4e0dS$dB#gH>;rU%#J
%1RElu$M;2SNp/JPod8Tdf&D-@Wf,3<r@?/e9kQ*(qu6R<],f]C)O4R.gO;79FZS&R"/39j6`lK(:OR+;8h\^e-Ck([b%)Y@j5Q-W
%rmc_;fGIk6nL+6M8,VaG_#DE"RJk@[[?[_I0.r82SWQFAc6LD:):11G_h!LEhs5hTT[%W2K>o\QDW#4/=U3psTq.!4(6f\\i.&\I
%_U!bYXH5Hgd,nG#RdC%I03\k((.42jA#%6i^Bsg%go/`&Emu#j]%V1qX.)&:PT^jT'k9@t['BW`)[?ij][XQTXK/&K"k83Xr$+^C
%iWc&E#3O!(Z:$R9opIB=29*ZN5?'Oo86,<3NVc1As6X0;^`4<k<+VXl0*<9"*rO1_<af"6=Cj"AA30M,Q>^_&pbGbF'_9'@"CUr4
%eCFMcAeDF.hbct7Gh)tPMMZ]&/g(gcW.WXpFT"ag14o=H'i;pZA/8!.&1T?,]-UFL<!a<`V^pl=!#Z^7W>^;R"CcmlCp\9%d\6<`
%:/!Y`kRGm[\;hfp%_%9!cXk-%Rqi\):Rl+B';>k^8C5^4,KUN`a8r[;:e12gA2"8BYHU!JAJi%T@us"W2&s/%@S?sC4cZ?43DY=3
%FV/^H.F\.dd>%j20sFV9:O"9hLPq'E$A](mSdAQP-q's98imC'(o*KM8/n'rX5Dl;50N%c_betd^#X"87"_7m__?JpQ'mZsiS.b8
%Pk,YTI&d9@D^7s,5XFdF9D'=t5EbOO$3TX#<Kg,=Lf!R,nkL-ca@58]RAuK,NX6?>V-F4A;/1Dth3(W*>S[Fb?UTtu"@/8nMc/G&
%@*hn"dmI,K9ED-b]>lqtUlOBfaqIktH'(h3^7cMnqM^&2Vi&0CP*K-e6/"e=pTPe]ZC47g?BNs'%L5HoK9E5cAofO38oc2.6D-"7
%TJEo)$t^rb"XYCe?q&u34MiTJ$kVR?l;ESi(f=$DcXR_]2\dbc+^I:gTV\]FA<n1%-1sT_1*"3o`g%tKE91@5;J[l&>Uk8E&u#4'
%35csD*i[JWp)aS0WDFcEd+J])V+4F.\1laDD/9Df21W!?4q?3hiucdq%94B\@+!.OUh'Rr4CYOn:7'18KXK$4Fib*WKY!at9Nc8l
%.-*I?+-GH<"+(uFZ,'F;![1uJBQ9;\=0YWHFQ=AE8qkWPe_mA7Y?Y4NMn"e)2OHGHTuf@1HjT<4k`cp_cBm1<J\7+25me=O*nR(S
%Ch9&(aVZH3Ac_YZSQ[QPoSd`DcLZ5mUT!_!B>3gjk*YiL>QqBPXKF6t>G+Pke[:N5QPDd);2^Dc'#n7Zb-%[q_m`VX4WCF#W)L^6
%am`Rl=!&Dsb+[/UPoG5<Z$8`.Z.SYeKF4C\#HB/9"Ue9B22.8Q#G7<mkdWTa*49WMf;>r!?1A*!68]Lmdnq1,;?Lo*G2RnjTiBAZ
%0jA)r6fShON[n(UBfZBF.0d3/+@hCB7QCJ:l<N@!<&*ZETE=9+!JpQm4^2b_eO*eJ+<kpL;t(]*BmVt#,NqLt53QIeB#`kO<A5MX
%^B^pe2MG;LTo^F09S:)`+dO+/J=\ts!/M#6V]+%=Y4=;8.4hOer_?@XVVL4m*g*PKmASu'C=SmQ*ORuo<P*`[o9N8NU!g0--Q3]7
%#3JP_S6)l9))M?=Z.0/^UhUuES^81b<CUJDP!i-F+n;G1'^>V2?`4JcFMkK"&Iq)9Yds'_";l*okmt7]fiBJ-.sGaQ7]H&nAdMjD
%1+-fV3RaD8P>810GfWS?EnPKDqf:KYPb@DcAe%us_]Pl`W(ZTQ*Yf"d!2X^?TSb:$ZqEc.1-<5[qBc60F_Cr6qF31>*airjL1;5P
%`*]G8ob4KQn_[VfE+`&),EX@;<kP@Y$-:"-XUkcplN,1aAG3Ud=9cT!RKaCMd$#tF^?0YSW$?/\0*K=Z-,dFl]R&<t\(HcmHba]R
%1.?juD,if^`'-)&I/]^HGL2UI3Cn)lPO\Ve;p)O&UoTDq:l$+p@VO&N0dou=J2IfTKii'*&$0cok'-2h3DI7"S6Y5:WJ6,$)dtA9
%$m%E6jiXkh@hopXd<X;$L;RF<[[GHn%<-h_.9O^#B\*?ZcQr,kiMSI<mTd,0FP7&c7nAkkg1uiAMWkQ#(+AnmE^PQbYQpaHh'"Eo
%LF]9W>i)cIKR[AQ#j%!\V9Wmo_8VWch8;Vc!;%]KO3U^laI#kRn1?^.7CPll>f#`]V(RDIZY?nC8!D<_igBE])EJ,/f]J9%D;qn3
%pa6K-T&of.n/p^G<GMmiZ6#<X5YF8gbFbh"`2p,bI7a@0bH'EK+c\Y&=oeSR+bG',b1U2B[6cH=Y9^q(PQLBn!Tqt+a$B.^oqX#o
%ZA^_ll'E;[bAm`hNnX<dQ3&A<q4[pck*F9-JD[at<LZe$S]IMW2Irf28.nbG?,2,=Y'-0ABMKb0"8/dPioD>?Rmsb.AUFJ#]IDf=
%q.^F3GSkKe5Y-"%Dku%STne73MS--ZF5XZt@O)HYKpU5cptFg>IE`tZLg#sj(+N7F9QCc/B*_*L!0T,I498"O5-g-?,O,3D'VHh)
%Ek\2S_H=EK6nUsu;3c#]4r%NtpYk_s@c=+cq?al[1&^1`$49<<P&QL8"fNZ]Ps7SY*i!c]'EiP-U)=a)V.pD,i=pAa':(/A\4e/l
%T=@l./\o9[V^)0Amb(Rb*keKQ-uQO/D/D9V!l`+i6iNm"dK\)1WXE'f8Zr_^Hj50I`aI2MAK;N*5W6-.C6cSr4XWW?`nCI>AE>/g
%P-]K8S0Ek6di\Fh3,JBNVk4[+rr_jb/ut+TP@Hb?![Anh6jGstFG]euL5h@J8^O^SJJ"_f@dcAa#7*&ghWMO9Z9-ee\?[h\_L*\(
%#n^*!N^1d.1^;ZM&_68J6Zrcgb(lJ'LS$3fU!S`e_>i4;!>1_:M\K$f'U`Qdib#1\3[B$U."^7*jhG=U"--MAC0UlO1R^,VOOHju
%]HA$n*Y-P&aSC?q`k\dZY"DQaJ4>Y'QPJ@JV:ne^+S;qDFIQ.Cf_9?pQLC3?#^o>%-*=EZ8;Wf[SX`H1p.=/T=CVnYAU).=!.>4Q
%V,0YgN*/D+S=IlW3^^gjcQO4^d%RfWZ)/]*F_k%+JETlD:]\6rHg7S7!jQVrY^nQpJ[5Uq+D[jTQK3SSOi:$A$./JW#8#fr505sp
%g"Fg&MNUr#<rrXjMLTf.EZQ:TCLq!\OM8!c>bCs5FL\`;?.5AW%P9Iunq^e%h@8Bc)LU\7K)s_IBQ;\2+GVKPM\fnD;0SsCR1%G!
%QF'CL!2S#Z_85Ce?&T:.2?_=SXX(>;j)JE9;4ej9kW4/`(bB^WnQ\i]!@M0@0Z4a'VrRDB+ias./d`b'&dutZ<H)d^Lk[TK(Eh(d
%8HG]E3QQIbq_fnRT&C_%LQi4"_I[S[>lcCfD9/RF:p8FeaR4^)2NT!3TaMG9p]8a>_p8Uk"%P$,DhoRGG&3r]iO!AT-2X#)\kXXX
%03Z;9,1k4#N/6NR*-dVkR;7&@3#4^uL+6o.!erFR#6FR3e<o5P6;Gr0<Vd\-*5dW=+Y5VHqRa)e;&#(sGq;6PN@>&9#dYbuUVJ>h
%_!thK1<36-VV&E6OiIk!N:r9jlRXj<HJ>;@*C<%!\Z#ZMbQ["09WoSn3pPNh[oG\q+\>0C7,Y"r/5cd?6fPZ'1[%_l&R.Un8=?m8
%q<_Ap_cKUZ1:s@%rG+02oaY0jJD$i*2tR13a=7XpF8M9c,UNA.ookmJ"WjTT,F?]+PW2p1&9B=H>gbphk4AA9h@nVH7EGTb9qE/@
%I7A1e;j,52.1q98!m1h'rJ7U8LANNt@c.Z&/j27"nBd*%:ZGRhJj:N?H:@iGH"9aSA/RZl0+I%ET%7R<`CFBX(<-JfO[H<9H8U;$
%#p1*M#8g#WHpCi4-./`:GmD/:RYi:bq)Km"'cl*_Xb5'm&7GUAH1`'t;'I$$VGh%WYUc'hLBipD`l@b-H21-KW>BnPH&_V]I%U%X
%E!N]H=?gJ.)6Cnh(!(T4JO^cB#prIh7ZjV8QAU.;<CJ5;gui4^n?f'qM;[OVE@i3Op(=E%mcB+4+U50^G`,imLM*CjDTbYg`+s)`
%kKWI9Jo)TP8_CVSL.Hu#1t>oieJ1FQFkSn_@L<B9'u%J-:#5![]T,SqV?;TRU2u>e?X/8J6Nd*jX%Qcp6`4@VX8?[cM,)6AQ8gL/
%"HRDAP_Cs(1(6-o1^E(Vm_g0879lUZ*Lu"!>"3<Xm1tk?.aX([Q,!tc#dL4J*RK7uN$5(h;neVbH.S$lY#GBBWYV^?-h<8Hg*+pW
%@0Hbf;[L%b*cY<n_u*fe(C+cu>6NE0:WRK`M&it5GiUjm5$X>&<edb#!\hI1BZT.)I5Vt8JM)B<_Li@9(7LX:nXP6J@2Tj%m\i6t
%,+FL;fTn:q.A3^ToK_7#!&9SYLD?#_Q+TCU:/'X_bZ:uDKEWD32Sr$#!Xpt5ih`]J'slm9Ws-9U]U0B)P4^B'Pdt266>pZJHijEa
%=&Q:V'8Dak"4.OP+dM!8Tr%?HCa&KJ'3Y/\!Sl5H:_mQ?/t#UrX_/U[/)`\RbOR&ONR.@;R("RGGn`"<PHC<RiZVo07[[`,-Oa*(
%g<rT<Un$KWK=%j-D3Y(Q$Mc:cX/*N<8C&0Y8qtD(83)IR5X&b'ZIk8[<o-AM.T+I>iUnA+6q6MZBE]mQVE3uDQP)A_[Z,]<7P#'L
%EM,+L>i90/26pl9$6!R,=Q]`14[L*Q+nHQ51E48TD30[tF=2,;BqAadM5?2ZZ0AZ5q1_KX@Ij5C]?KA4[f"c[k7+V3()Nq=+=N%D
%#[2UWp[BUgin$;s6(kNJ2#VZ@,+5o.T*l,s>3&#8Ek5sXooee/g.(+";IQ-A%i,2hkFPP8IjUe:^)+3\B+Y&$4gHku9*i&AWMhIn
%n^&Br39%pDC7PiD7h@bGI:^aj^dFifH]Wh,V9VGCoWN>e:h;L^qID)<&;ar4b92hP96K;A;,A!P_oj^-A6W0D>bdrX-+Y9ClCgn7
%dF];#7b^/UTh?nKXJqE(dVC^AY;Rk>U*$l9\>Z9J#IZYko<k#lHBt'(+^6_T(<cmI0+6Q]I<.:JcG/?h;pS)I*8Zpan0:oY68*GA
%$_W'7X;<l$:sTM!r46n/)Thj_XTfCI3)(</Zaic)L"IMiVpdI6&8>O(NQ/u"2;3LCW4B35r/pUQN(q$;^p5A$1#12`HJq[];r'=I
%=kP%]1doM+"9TSSAf=^t0Nq*IR84+,B`O7qFsA?DbuNRW=rErcI_:O<Jfk(fWmT63PfDD&!ToaorP,.&fAKcTq#rmWpV6@;,7=@/
%68&*^FaS=fK+!t5L'Ea--=9FZN?`9hd:`t3d_JO$\BQ)])D1_1X%-$>"p2+%Z`YoRNK'WG[/G@p^:@^NA0B&iJoBT4Cc`K1lZ'm"
%!t:be9&0lckTJ)/`^^B!.D6;p2;9+Nk!>!'i1rKXK[p,Q&s-lICi_XVNA]'3BJg)!A=J<+P/rXUa:,Gh>Tfo#3tD&/H=H;:VR`cJ
%\gfeY9.rEc9/t-_5``UCD-0i>+bR!2h$C$I:MHE"0s!H1N3:PH5brta7W=i4Z"^RrY+hY)+<]+J"IkDDcj[:0Hr,4.!udbFiD=L0
%%VTh-;efj=P)R<nl=@\YS5q+T&Lb8L,!&]c%g"NH*6aD8)oF+Tl/[0jNBNWMr1ki67B!d8(bPErRd;)HfY+04BWMGLT^<]scso07
%NuZnXD1Y<tB<m&MP_+,$LqJKCN[cUT*b2:2YO"j'i92]eQN3I_%h&\4X2f]L4OH,)@:Euj7TW#Y'9Lm?[L],f<3fEa!LY-a-3ur"
%'N"^$[hu?oWlO)>k;X_:Ftc>a$SZ-KgBCOKa>?mJ$29_@6NKU`9W6rslF!sjq&:#[3Dbk4!IFXBff0[Eh\!1Z5EBc_i1%LZp9.8q
%VXf4=mts=?m[gH?N_o_]Q0)?e<WE"qU\%B"AI_n/C2<[J+#E36NDdGrHYA[N+)>G(HJ32d(GeA>[?E&j9:a:99%3%K4Q%nXYV#Y0
%i:g,4m=SqJ#F[+^n3Le*M(bA"a;'`B%t+01\Ck^uhSQF7/7s9fL.i\ZPi\\e&0Hh2etK`jeJc#i_U77eZW1bL1V%h2;B:L6X44)\
%i`O.3[th@+-ss$C]kZdqV3Sp6D*Km^S]ArGVplW>nYCM5l82iN;[uI&:/0[qf;hT"&8qd_O@kAUgq<EUebgYoQ,96LDEO4gjeeW_
%FH"2AAlBIbUpd>37"b3nE,6o`<`@tUf/&34`phP%E2a$/<G\LN,l2H0WrFlJF^hI0`I\c/rOeqFr'%tV`HnrHR]f]Rla?HGFCmgs
%OlY*n#K015g&OF4f,OY2aXhJb\(EGR)-n4SrD`bLBFWsCJ7,-@GtJ+QccEV)+'GQCoC,!>=$*]Co"X\9n3R)N!RMl]NWA=1&\`5X
%7o1X+79YP_..TM\D39/7'95=UY<o#CfD.*6r\LoS_&u05&+f0W):9RM+V:XP$eu6]&,ab$+T?.<d*tOQrR5K163_0%<;hFbGfI0<
%QfW]42'X-L,`(r8#n_Y8)L]%pr<"T."aCs%C/m[9$>Hhc*Vbqq<X8R,(;*I!'u=XIa>MrPE[5O=>CgXM_m/UMrRk]FOk_(cHe(d*
%.]A*aKpE(aJf$\Nk53R>Whq/Le<%TK"SiFc"H!L_)qE%i`gF]8g3R7&5?gSd3l>B)ZAp(-"]H%H`,u.\hmMNpS\Me4L3;r]pDMMr
%&.)c7g]K^Irr:*SSXuO5J#iSS/"^Hc,"7%\:N^S(>KD0E/bBPQrMPFS2)j'tkW2PR$M!M/Ip\?Il!*JqfQSZod>S$cjo:Aum[q0c
%dSq2/O&S"O&fEl-XMkVHa&`M;pm_%#FaEZF_-cB`+Gr]Em%qeR"K?H;;J#llUl\X191n^RJWqeQ.SN>0T-j^tBVdd(1$2'lK]]#&
%,@2o=qk%1OdQ#[m*^;rL9KZh^OEALMV*D</8/Spa?'DEG,,%5JNt/`&aS@bI!I];Pephm[j6r<(GLuW%_\_*e9Ip5t%1kSf.2>@e
%kQeBPMtOERDWp<For3.?:1W^?F"G=U4oJI0RO8Y?X")#K&-!%'&)?s^QNm+]G0-s3l'pPuI06g(@kbn.lp1"[(:]YkUnssfO"JOW
%r?eu)8`rmC1]I*O`SF#TO,!QKQnPA?o%!V8\)+Ze(>?$d(+bT+-af;mHBfEeU"*1IZE2I2S3`*><(%7P,sc6Wq6tib('Oa.(J1_G
%TgA#!K0Cj:X(&4G22?CU"8L3leZnn_h.atIGqh;+IiF-3"TS2!_m8g[EOAa^f>mG<[/[VJ64dOD909O-Z"Jsa#n!9?]O3QWbiqFa
%:k!4QpV^_Xe(Du<e`8Bd+PTdYT)AD)f;o(Ss$LaVX;<pr#:)@f/9bI$ND@4;.7nSA!L+mYZ.H@sGd5$XWEH21pj"kUp$\5n6St/H
%418/$lZU4S8D2E-L&+aEO.uGA]bp.ZO0s;1<@*D5+_nFhX8$?&USD0,VC!5KgYYZ+p9O5>@($f:L+YE>+5-f8K%-MBM%$e^qeoqD
%UY2T+_PMRbr*6@_`$T4[pIbqaY1BNWK'cD>.Fu^7[IZtMAqY`(c%"lMq"maiLGNKu<n'`c?sFS#';NeDs7_6:j$I2=pX-q][/Dit
%4H-W%D0MF%^OZ+V8!iF;]*-h*S=sC6NkSEk'Dk61oW-C2hmJa(pOE)Blhc0_,]D:Mjo6AVm`DIOU(LWdL/%PY;uV[\D(fiO`L6Vc
%Yl5VV=F^;o_t#BuA[CDUL\40>dWlgHB\;mB(nN=S0E_3siB:4W&!%s+#Met'(gpr1f5(p9fj1p/'TKfkIHR8''DL4C`n:==0;DH:
%@<p;f[`[,?]^>VR\bTTQ?aN^[:,&nNC->NX6JDL07iU7_7T^6#+8lhqIqj&:=DYEP8qXQi@c[9kH?EoejI"3Ss%O74lV3epBpBV(
%f93pO*pkp[Idfu]NApSt^"I:a2EG[M9+5U9?*.0sT>-Ft'5CMt>tJG4rm5K33fbp=%63a]?XiYG03rfAD#RaXm?cOtC'tL$UCB9_
%b?n`6i32XiEit44&nG(_\_%`n^@cmD9+3Y'CRC+Lb=8hpClNUH1g9nl_g?b/ef*Xr[o2$1]rLSG&I-qcao@NdQF`XL0aO5q[\qgV
%QPe]2GZ"It.!#(d?>8Ln*,2Kdo3Z"/Q.l1b[lnt)VMLrg4*(23q'F$Db'k(\7D2YAn`@`+rkDusNTU5$Xkr+D^WIs[+"Mh?mnOp>
%pRNBd5Pr1jR?rS6iMs#O#tI3ts"dUPpW$9g&]q"&1dp(?0YRIL<5!F>rQeB*]^Yq6,W1:)o2>H-kmm;X&_=\rj-QG!V:m@u8tFC+
%+=@*B`/IdE?Y1QdC:'R*PoFU+2Vcn^KapmB]O"4tB?`mLCVMbh^$SGM\u9![*>t-og&f-=":5+Vd^3Sp1KgE!ArbulYkC;07q[!,
%cFfHLX0#(-p<p(4M,e4eTh266\SIL7Pt]jj)5jY2X-Hl_-$*=.2sXcA!+V%#[r"4ESk!8?G@.1RGGj.+h&Wr(m:n"Ypbs$HSJ9C+
%Kn$iq>FiuP1UD(AP29`E?@.A1=eor^"S;^W*ZC^)3o/]:d&tT_]F#COeNU$#r(!`H3(NaQ9;m@?dqj.$RiZ=.++8$.'B:!i?$b`]
%N-Rc&D`7?)^C(M5j],":?+nS<T(^De?Gi3b0N[X=W)@+X]Y&Fego/fimCl$<s359W*8Xc*bX[ItI;HZ_*if+6=!MhA)56k4ZYV8S
%^<,j&*f`C)Z%&.d.Vc38I/UB_OP\FpIa7"Hjl_C7f_,RChXd$)"]^bOq:qqI3utf`C;3_s]?to+;/-$W2?cBBPM0<E?L.MLLs.ip
%k`aH`Ybd8cH<'!=2INXt::+!*8,PotL4UMMRT&O-5-n1S_HUA-7,k-I;kLVq=n"dcGsnD$6_F1(mBb`SI2:7D5K:dCG>/NL)hSo-
%%l`HIm*2qLNV8>UEkl2rs6-LpdG"HEn!jDWnE,Mo?i=rj&ps4;^Mj)UZ9MX=LkA?W=pT2aDq6*1!>uROgeOdJ;Lg)uRqI1J@cY/)
%Js]HV,UZZA'FV"ql6TZC^pU'tl=?C&q(PVf6fg_W_:Wt;BORJe%0F5\lYW\W$S`*Ccbs/>&FJ3iTErXM1tT)$r_mES&Fr,W1"A%c
%J^Ll%hFOor4?(3$]%QI]!:B+A[Pa`d_A(imjqWH9R,D2E"bT.P?Yr$5<[s/G6]34`lU.D<5tYh1(1"/imTKqh#Mm\++SY>JnBe3/
%R;&=fq.;#neLEn4AkD)GOND#U<lZK_c*er&D`2L<C$s6.l)&W5)PpWoqRr=XXo>qr.9(&Q;F47-@^odUh^^Q*\oR0s?[7q/(e-De
%c.?d4>*;]u1/AjBJ&Fjo!SVo6j%6Ym<U'if[_Y/<SSt!r#IO^UYn$=NdFrDV$@[u]FinI.1A?0W&\FcDCK*+W:941q9p(j#f!!"u
%GcekG"JarEM"r1SQ8&bZgQl+4o=nAM*APZ[V0]+<:=9(Thj!(0<GmDhlbCE=GS$CrdR*<!EjJcF<`5e=ZhUNQ8cEW$iFKm_o)OV3
%8MJ1'eEk[%UE6+D15oR`VJpeN"r;%(Mrq,b&Z6GQ`Gb:GH++pi;-ch2I3eHnH\E_2@UJaKGeNLucaD@d0ji8U_u":N`<b2JAkO5X
%bIhs@en_1/\)"Q4ArNQ*6?+9'SYA^<5X)\(1p"Z$NS'=Ug">/Ar4HE+7>@gjnCA'rY%Cb\5>Eht0'7?4M1bWZH>E-6ETs/O[Sn08
%S!r-2Pnr*BK?mbU@!l\eoB,>P\$i[<F`MuFeLcQqK!QPIYWZp[ZJ,,Pr55&tIXV$(@:jq!m^9abhK9T&2s\Y6@kDH'e&aah*UTu4
%Gh&";g;h`aIUQ[UTs(Z5b,+;UbSNJpKjQ`"q5<PKpLSe+qpO88Mpnj#34g)fGDgb8rH[h15'\clakp;aGH'6OL[fe;G'*C7Hb-J$
%2Rlhph9tumb&d*!IAspL17Op5cn/"0<ZmHkjB(m+m6N[\IsiC#lKe,$V>K%XBB(`E@OF/+D'E>qpV*i7XA,9:7"XXr`m)Cq;uCLl
%H[`T44dMRuT&+*Uk/SEuLl50-/%US0VIn#*Z@=^=n`\d]Y@Kl-'=55FF5LT]2^Ua*2lb]%e[(h:a5q?PoF-5MbnfaA*`^h#[9*c?
%[J/REC,\5>>lDRojEtb:CH&kL1@Z@h0YP35oB;'LK&s?)ok^Bcq(hheIsEbrq>.?3L5YGG2qog#gU#4!2PVhdGM6\]F5^Xe4EmpM
%;JfpK,UV4$s#;l#=3]:5_\Y1bbInGP)qun'kCpJ!LLA'up/Nf\)K%BMAlm8-=%gipppJ&Pg@ueFZl7/I_mEYPkJ:!t=LFTESdsn&
%JY#m8/Gja@5JL<(R4+*?IVD),!W6m]Z,e8d)scqJ[O;)0]38IU^TF"BG#eF!\\^:Zc+.r)`<s>`Ali%AF&%2Oi?KO-s1#@>H2;V-
%B9Ob[p^V=.FX()OG*mqu9nGP$nJGG04UL`#Eqrq]mX2FUjoo+DVfMJfs"p4[?ekTd.$Z.:kCU=l8+GPnMpL(/NSItArhT79rVQ99
%KBOZF?(Tn&L40FY?OF:9lrhWGa;u&e:Zo2+[ARDPq>TKn6ZM.8`YL[Ar>(..Q)<t'3r/c\Rm#Dnfe)?a/%^[#`+uaa?jUp](QN+Z
%c:[!EOB."4[(^qAH'^\Ml#ce-f>CjG'/URCXYE.b,'M>L#)#eg^/R9Y38[cfnlG;H\guCKb.!XF?EB9W\_14D^?M2l,]h5PV9)QW
%BC2t[Q$e22R&o#pgW\OBfQ,fLbe>]Z.o+ph/nD)LdkB#=qjS<h8Wk;apGf;kV^>`J2]dV3kJHTB6;apfYn&IV;V7KR.^2b$`U8&?
%&;(pohKX8r[);"rkMpCR`B!CXLVp7j=T\E2c,0D6?(<f)nT/hs6ZeMTh65$0@C$m8F*j8"C%TQF7_?pgn6Tq&Jn$g1hL>Lqko:J:
%&*qEX]`5s=?/>D_6)JsA@U/$l@Nk2q\R>Ep9Ziq1Hg>KCp6o@dp,\Cal;V)1ou:,jHhr!W?JsJ,AH]2j\`P9;3&)L]AWQ:%-cK`M
%'=hLomh&"OFT-`0.hM>2+-fAJS6]rn6l/#Q?D"gJonSSE+Rd),n%?^4m,no@G-]plpA"9[*^/':=/9rek5ob#)`2c?Q/(u\CTY+P
%BhoV@rlah*a^g;h>7Anr>Beo?eAq%@qW-o:'c-F@-[ZI.<_rQ17,MUC\(gXDI[A+RSDC;SAP^&-CuDL:p=oGdf#E;To'K,lK>!,3
%rM=k14mAPaqH)>eA=A%]XLH>F'5G\6NOjAFZ?EJ"#fGKH\@'er>.8[Q?4,\Q9$Z.u.p;PSS]d)!ptNcfJ<e\[R/N,1?U-P^dh7,?
%48#gD?Ts=]9ui%S,Q+'X:l#gof:lrfFtEXdPZLS`nLJe#"@=UPOmM3Vhi#ApT>0$(Y2k]b72&KFYm;Oa2eo-$-'1!T4&I]M-H@FE
%J^8\R`'j@n]!m:H&bsjhY1AQXG<,sZU=JEan]+Y\jJM9nl=QS(\T2476*^(*j<qfbPL[m2DN_>k5/0<C)*KdL]5bhKM-kj6Ck&ib
%X@dG"[F>.TMaf<@kdmCB6),</>3$OMhZtP-ReS83%66?LQH,)pnRZO_*1'tbrVVgCaDTH$V1pLg5o_UK%?4<^.MmmqC?2(#>498G
%8(]!F8<RKL<]/g9eO6Tk:\B%=WqMFDZK0Lbp&Re9?8*U@bM^[!cX7i^93(]YKQ@5)I[&Z,/fMk)$T0nRV=Ep<O48W+f_A*t;,.K/
%=><P<C$9t+32"%.+i-Fn==:j1Fi'R5l.KsL\3=%Y(&*6*a#lTGCdX_a%su96qj0spZ'bbTeu\/m;FDG=r-P-`jIb&Ma$2e)e8B0U
%$g$R?'C'BiF:>p*3;C'pl6<Rto""q4[H*<;P+$lfT3bGWiSjM&=+09YmUOiCqUsq/]^aW;rfZ0prLPg#Pe4&0NuRnIooklr*@SDi
%obT^Cc)eQ]/:Fhh[k%(-MTt!b(Z.qoM2UZPCS<k7\sNlfS9a.0C$4n*o$s/FQ<(Pl!k$L:2/c;Qq\gIl[l[Np&GK89!6=bAo3SD5
%I0_Gfn_&;2EW>fL('k!G9'GjFQbRTe)<'^%'r\lmGo>T'6L#[He9Mn$\l^=ta>_HA"r#N'>$ErsT0GH5g2sT`P8^T9Pt(FRGO^dh
%D7X_(IEh6CJk=A-oNglurG!['o\mA+<ForYdgf;YAR8Btl<b!D(\6<V@7bMM/fqejS:YQe.m0m$SRrBrmtt[0[]*H*RZ]s\%`QlH
%+IM,9YaMNs%p/=>+M,tPK76_!#PlX-%oom\N`Nsn;&4YNlYO;L]8P_&Aa`P1n(rRVbfV1<S'C:kI=5.Drp\_r+0Q\El^u4,][!+o
%<!C%.]f1lPcBm_aNQ85497l0X>?V*[$Y$mZ+9cf3qm5:VEd7'C7Tk=i_bKRPq)G7$i&,F)<F4r+9[unt-6;0).tt/7N$U%3>gJ?F
%$]QcT:Zk+C&ukO]pO;W^$HmcX\YI(86YH8djV*g2^&3sTqK-`^=*"/rr5hAc2^b]r\U/O6mCb.%2qnSf<_q>S4aVMTfj0MRG\%ZB
%>HPrlhU;E!Rd=J9>$Lt1(VgLG52OpMO<;-t[W5\5BA%?ugLH(c\@Tf%bIdBD_l<BYTpA]f[DL^FleTieEFsOB';Fet>_(rd%<5Vn
%(Q5cO@ui<EGCAT@VQkT!1cqu73."O:Vd]KKQb+EAqb/#7oD+s.bVrd@rTe'sYc=/_:/519D&YQ&G![7,dUr+%:3O%9EqhON."Q4d
%DMud:NEWq08FsasPu&q;h`#jXNaN;Mn/dRG_jn0?CN"+Wen($k3u[u!;IK@lY`mnVZn#lD5OO!#j=;nR*%f"+GN(ZuB&tt[`ms$)
%h],j+:^.#5D*.d]03,b]<0:0bLPr_>_Qb\SSi!5q,.^X"Iek$i(N+.T>RBsC`n%ofDPm17HfW^)A8q&;K4%0]%;4$TiGS0Y/ZIDo
%q0aQmpiqJ\4b*SKT'sFc,gUP^1gG#.e\]SIh6#%+Q9k6":D_0[f%6u^'d!`ZGTJ=4!;gu\f2pNe:ZSulC0*Fqls_,b1irGR4[,Dg
%_S5iMGoc%=m7PQ$@+55KEA>4V[5S1+aK]P*AG+):)YqeF`;>bXmJ+V2ra)f[=-)4aj`dT!VkhJ1V1;Mu*^2]EPnCc8^41Y'R*r#_
%Nn*05@<O!-2pXRQYLhOac2-,j:5?I<'@Zk5(3K8-E%0$,V[N*Qh^6CFmAnJH`5+sH[-R-Eh;9m9-BIkSXuD\!jtF2UdKZ%OkKf$'
%QEQcZ?\c$MRgD<EQOeD2/6?beT;C@\l-mOjXYAB)@LFpTgY!7TGeNq$R@/_O:Fp>Yf$\eIS1XW!9"e@8/iGXPD4Ia$/.d4+BT6:(
%Q2:B_R-F;4L>%H^X9HH!F%H6VhbR/4@6n_Zh&uJpr4]S%YOD9j6,nbo)'@&ZT6tEleD@n5`VT9<ZAmE%B%fS7Es$4HTNQ`'p[8pc
%m(lS.GC;LGC9$AdgWJ#lCHh0<KO2uZf9K/-qtSoTiCgR7dDOE-WASrNFFfq)D"I1)#+1]]19<pdIt#r/$aS?lNMWrW0lYTB8c5)1
%S7]\6=R)*Zq>6pF*7@Go+MD">`Js6W6ZHW7iHX\e7sd<:00X$tRq-0'f$@+#9?!0D`ummnjmdQ\9BXi\p#rf+.nuE\h%ZCD)*)&5
%/KI$83``*W-*aOff(WN`=2W973,cN\=h`tMEeW!o[)'\1,hC&c`;80cC"GVa)XMS;$ceP.oqbG[c\CR7r\tAD'cS+eFMn"LHe*bG
%LtmnJ%hhkq=^QQXhL$Pk=$;`l>6j!^ekNcIT=ZTh<i4c(pafJ,jnIQR_5cD-BTCr+j6ZT"<1oQE.3\>r%ml%5?-M2u[`!U@\plHC
%icb4qgZF:Nf^='$r2,[mDmgEZenlt`d>)F\*4dP9gon87)q"Tg1klRc[n?<C^;"om=cWO[R,;0I:_e:H*%9!Iq<UbDnLbWU[O^N[
%!W<ARiZ_`8\UfZ,G?3T5q3f<pR@906f(-@JQ8YA@#BnB-\+-lhop+(ZEH>'AFsR&f=Ypt0[HG7,X.R'let:h_!g-ohF<b!];K%H<
%C$Hl7Y.3(3Pl6@#H@B9`KjU%sn799^k2GkbgW\MM%Hp9#IlA:!@nJ.Lf#,r8X=MTIdtt>l[VTFGj4k's!,T-R3at1C2R8XT<]h!f
%l^Lm&?afn1qUXtVC-:)N75%K<C%HAY/tX4Wjd?"Vo4>sMO>qutF7jMN]tA(;K4k6<'B)V$7*"iGr;B6Ga(j<Xp:$p$>eU.5Xll9o
%X>Jrc^FS)B/!HiZO!k,'6ag=$_OJP)4SDn1j5sYq5BlV16424`QcW!m2mSp06MXo+/T*UZX^WG7hWiWV^2G%\am8TirQE-4\D9@Q
%>")'2$MK2O/hG'MLMhhp)U%;tfn7CL_8Dc<@I7+i`I?Tj0=ibgUie9#iSMo4=6db=;aKlkFu":E_I!5UnYm(LP6]=uCAUZ*"XSt"
%(tH[+UZkF]_0fFfNA%E,Y"PmS\+R^*#gAsU*aUrCZI*9r!tXYf`MoF(ZOQg'97+4\2";bZI6;@i^&%[rWg?UMYEc.[dFlc6GHVOs
%#pI:VQ_Vup:]d-;npS"$l4q7^RJ`fL"hue8Plk'Imrj(&PjsrHEW&0Sp64oYjm?V!aIBHq"PaX``>Ud]KT`XHT08TH(N]1%dn"R*
%f4^l5I<V0?jqlm*WYk@Z13#K8W]BOY;@1W4?_9dGg;_^`j&P1]>f#:!Y8k)3q;'klGPpmaq\eU3`R7._IJN`Gcq)'L=j*61?5>m-
%bHj0_mpEEAFoOQIP"QVWmHKOQq;!&mXT%bFC\!]e)hkI&!AFn'BIU0;eaG:Uq=7#>3BpGH/GI7>(0rK!=C?PO3#<Q`#uA<q\)9_6
%ZbCfsI1*bnm2C*<[([(h2FQ_I@eO<?:_>eg1jbgDn?/D&<-?b$6`+U=0R6rk&&ObHEAR'JXb>b9@B!-RT.YQ'\a($G?$@BepHrM=
%''.YGTmC")kFV:/:PCI`].YT]Rpl`5k)7pQYnjo^,k-DU58Ea1F%6R2r@;QPZ@Q-Ob6Ik3/ult&Vl/(Ic-om:3Mu,LjRbm7o^-d%
%9NlKdr-U;I6:OenYB)d,T=7TT^I4ul6.gSfI*dk_Y0MDJXq](HiS<T&C?%"/VE1q*<eAYQPsqs'5L1XZpu4i309-:>UTHD!`LU8'
%!&O2@d"m=;=S#&[q<Or4>Yk7\5b-cBTu&Hio#5;8902WOpG$lVI37O_Fs@:1e(74'\NA`_FIg1mFh6#VCG(15YN*U$h-?1-fUY#-
%8"H)N6^+(4%eYj8\[g%o-@65A'@G'BTpWUliXE\D\%]M%+I"?kmNTD%G&JZ8mmf]kfe6+C]4Z,!1HO/@pr!6_ikJI)R=!#Hk1_]3
%D+P^_06"n$8Tl*j2fc(%/i(T7$F$#s!d%@Ghm4iTF0)T$f?N1fVbY:0_XlLGV;)dE^mMmd"E&Z")d,dfi-\tXcFU-8)NEjCf=Uj6
%nZVBrWic3d%`l#_?hSNVH?m=HDHI@bQ^d_&l@@PNhoH+toV!!?Hl8E^mVh:_(\b[npH^(nG\sW5eBI6H3C1s<]GULSY#t9+ZQF#@
%]b5h50K6=lrRk;OjgcbD4^Yh\>aR_P^T6&r0Bl`.QN<)g2]boSkDL2Q[d_eZCT;R"R(4K"Up%FkfkWFP$YcKhO<0q:G)\Wthi>sF
%DO&-!nbTmYA[pP#\r%OV>X_#pa'Vbj?8%m!=4CKl'fFsNXd\^0j(>aMacm\Yja,_FXIX;Q='ogQ8sL=i+2_1&UV-?%;.:6U0m$Aa
%W7F<qdGHq>$.e1)C,_)_ahb%O,E+h.C%^-bXSs_FZ*1@5"dKpLLo2a[Wi-@&jJZs;[a!Z`Ahq@[*nW$+dkKSi(Rc3r]2fiMEc7:s
%><She0_Vo;0`l:i#:IXYa&Ht/]JM.V.;r3%R]V@!iIk\c8gJ7X".Q^AV0\E3^"MoL@H>U4YBA-lQF82@UN3+mPbk*OVcMF>,cPSK
%iT5?Y%Ip`B27fhiX-L.4Q!;Mb+`uU#3X_4!Ect>"[C^WF2E.bEp-QIhHaQ%Rj0TWjUj)MdRbJ40l9iZ!SJ]_Rgh_(C@fBeql?6=M
%M=sT*SqcXQ;Pi)&,9KgQ6,Z'ag?oW(B![!%0(]<!Uc!akKd"s((<tHOo;req@2t@\.c&KIOe**@f[Hrp9<b2G-k@%&Z;mmOBFYhq
%Z<9N^%Z279X*%`@&:]k-on0'#=<p5JkWgJHhK\PHVQ>U/W>[<T2fZ/-B3+7K$:N'a1!>X&f)JS=dsu%.m2:pYmcJ6d,'k_+\Z*$N
%j<eEaI(QLgCo>k3ncl+3VQG>].h4bi"+&7[FCHD0Ut3$t[YAA*Q;M8W9lUB2?[&?40qACpQ-up_IkSagI:r3'S`]8%NEaL\oW@7*
%X07Q'*mjn_e9Z$,:d.3]:&,'S:!,t>StLJX&Q,OB[dKX`W>GCVpC$?Gp)C=iKQ=KL,B-q(J=(-FM$0eoVDWc=8U>o;<l1W\+,Q9>
%:^,1Y,r:`H3;&qAZ5%M-*daXX<n^l7BWe@7GuJ19c%bU\SJ50TnZ)OR_7e*uST-%dC&;'7IA5R8SVl%X&e19ZJYlZ*d3)^u#&p&Y
%B<ZQ^Rd,mma56<_k-bSkoI\CKHT01lI9gZnG'0`#;&Xe"]@7M";Jk#,)K3_q):^*14&"Tr1p0W_C`8)N:m@fb3i,b"qm,jF);Fme
%Y%kAaF1pC4&H?7X/`eiI3E#\YecI6&L@X>_JDUc9I&d@][t?NWRe65q0RU[eNt0h0V'ef>A`a!\>Li1J,F`eDb-0P]5<&_BG6Dgr
%jRa&Vee_BE(W/gbJ!?p-02oOrn;kj=>A^67(IWbQ`BdJTg?"YcT8,uWZZW8(&_\t9#+7Mg29XuMb&$uYC(*(V9X<N\=.&>O4kV&8
%#L?XaIB(/!;Gq6l%$b-G-)39QmA4<3l`q)/UX&"_9Te/W\5E%FWIu&([m$`i)f;--JX=0d38tj5>^(f+I,c\jN]b/SKeQL_2,P`8
%)_PaiSm=)Y=2!Hf?WQLcjr\LOgA-;rn+?8FVI3%lpfhOk:9OPL+B@S]nL'b$es%J)^kfq@5;itrLpAU(bO@=224)4"%DWie^:HP9
%H**\.]eu/E&'-L&LF@.lC_>Aao>pe2/(hS8OGpn:XBs$blo2k7e$FY`ii;SP>]k?gLJ`4QD:Q+;(,ns#).hAggeLU?F&L8l)p]D#
%bPNMFH2@IXclM8,[k]%)^A18deK=.-#937$I^@EQ5IR"6<K1Cq`bD.O(i`&AQo(o5buX)T%;h^slB[C96)i%f^-%LDZ_AR(gZn^a
%Cd$t*gY[NF8'8Z3p7VRoMEM2g17?i.W'+tJCZW<#lmZ:mdo;_6R5&qs9[/gSpn&K_aL@>@s+tVN9p"V<dD7QM@BgpV.'Z^ZghP]2
%3d[\fX)&)aS2B9+3O*ljaWtEM]B8RWF=Po5^dTujgR`i?fC+dFd]o4MF6NTr%_)I(q*ucHUY2S:j7KbkX.@smNGgMe%rfcq-6m>]
%+UO^PT`^&r3eZAmhEZhe66aFYFn*(i>CV"=3X-Ng/a;#a`d;s6,TA2=g^gNX4i8=!K\c`V1I66MZe#^unOg:M%MSjk*YI.L+nX^?
%5bL%EUI/WKeNQ$%"r&LH0\dbbnP7@;7#^oRH?WDjr\4JHo@8#^VTa,ghS)_1l-T00('$#rV,$^UZ28Rn.+L;dn^Qfu=MC2$X.&98
%<\nE?c*So#nK3hB7]*:c;O/4=PKg<K18QmZ[3H6Z9O*\4*BOmZ'%ro%DWXsCImu!K.S(2')7il4*_NgEq#2*Nc"0:Ur+SNW3R_[D
%MK1RQPE%u+9YL'GUiJ$"WaqU'6/(/c,ETCja@dJN7\b9F#e"m[Fj59hIBB()2P(jsTe23M&d@Q@X7lCEH'MP@Q:S@FWVPaBCt^kV
%gF*G)D77pmdVj&=Ai]g?k4lii31M4FphED2gU-JX>$bQ1T7f/SZ72#m$AF]3*Jh%6UN6j-4lh3ma4[(-H<:]UXkLr^4EldhGu$Jt
%7Ra4i+7V0N<mR:cIN!)6Grp0.gO)`ZT#52CY(tE%(f`9c&d59k;OWZf!^l74W:>uSO_qdOHDRQ'IoS:9KkD*C#R+_mGiKk7G2BjR
%cE#&,m%Z%l`fPpP-'k"1QJ^ET5GY.o]=6@9*hb/7m=p9IW+051oVrP1euD2[?h'+RYr;BmjraKhTb-311oB"oUI(AR_.-J3D>Q4=
%2I-D)"R3tarZqk,60ZK8B35%MiU#:Oh4h;:]0A*`p=OBDDiV;I[,gcg8,P=A_m6mtg<&IFj3?bhn`,ZV#WGuL?_,l2a2-fg[(H!N
%Cjp@:i_@I*=.`R65#gq*Z+7oQ'DQ3[_;1$g?Tu2QnCm=-,MBK6G49A!gA87a#)#Dp#cZP#FUPPQHft4\mBI?$2?1=nf_2fPqH`',
%r_(Xon@\+R^[r\a2Z%`aqtA,l$$Y"Qk/9L-o:l3/Mtlj^6[%LND+q_(=?g,<MWe<OrCQqsa1Bl?[Cgn3>.f(iFVE/^*b=SPl,jYA
%M7U$oRq!+<gM-*iD:,60^&3%$rjc1@.MJ.o'CTu=U3/VihmXB7P::S:\((rXjXc)JH1.9")=aQZ!.#07?EZQuq166U8+(G6:p8b[
%fAAZ^Fg&R%I%e.3NP",Y2".76g5aJG6+q/]nV?IPHESjf-:Bf[anO'3[,JI)h\P'Eh7Z&PRb$fkMR,6TXMO],fp>LKmM-ME3I-ru
%XC<eA87hA(i`#K`i@Z4LokG61b?G'q(#;PChIRjY\DCf9g>$LMVGD(!qe'R%o^7A,b\Qpslf?5%p3J\)0)7Y/laG(S+(_YL9_PWN
%SD($pFoL_=HCaJ2:u8V3=nk+OeuS#3FoAnZUH@o.2>C]6Nt:N`gq&@/MtC=?'kYJ##Mjg]X6?FYj7`7`XuNB3XYm"bInB+ZS%bCu
%Y(-G8egl]VqsEG9bkh-/.;cRq0eTO;kVX3,Ira+D*mj67[8jlr3gRJ%Q.ER?g<1S0(XGiSHek4XIN$l)AG'C0+K\]^9l"<VZ.4:d
%Hk.7DoJ-0?33sC'NrbH^fA9j._V?I2H9"4?dq`p.pO"<7(#@MrYKt2+E5/JYHWLA8[F]V,hqR,]ped.,li'SYQI`,#7WuHDI(PM@
%_sQd_C>(^OWj^B'h4=SW>H,nj;L:R;?!EW.b%%Q'\=^KQmGnKE\m_.(?:=%kmYuEd*ptLT:Tr-)m.bDCD@U4JkKUujqOh/=Xg;)Q
%I6auOdq:W&h]Uc4Fh$UMG;B>J]tM[6c3O"<e[)Ch:8`GbKl0l1T+2p60(LMKWP)V^(6/UmqJnPWEA=EDU31hTI0I2R*U^c?FR(F2
%hFR%An2)3qkV_'449&jYWEr6d3h*EVfo8%?`n">Lo.(>tSaG/o#NO"V2r0g)dHehRDm/&1No+?Mcga]'=9!9WgAg4a"_tC39Wh--
%-'#XCKi\(ZB,l5gmhZ[b$Y*PaK;.RP^"mnTIVm*)f<qTpSEs6uK1m?0((V`lYLf>ASYTNg4M/9!E<geqlp#&Gg[jC\`09Dmf^8(6
%<EfQnL)hof/L6+`of;bT@R^"UY'o0]98n#kWpS\Lacjd156Ko%G8HgFD:,C?h61k+>1pO-kLgC6MJci$RYrLG5OX$V8c?&$)I'JT
%^Wq#NI[(.(Bl_`V[1C=,)MiYecAd7n^!FU".3e2_&VS-t2Z2:<Eo(Xr^'9S=^fB,FX[/]s*aEXZ"+KWZ,(&uUR/ZFF`7Xq&H/V<o
%RafgCD0M:i[s,jHl(@EJf6aj1IWrT2_<n/nea?u%YFqf,gYKP->RJg>;a6=,IBf]Jeul17f=?@0A\I9[lsKO7_8PNb<FHW1QI9/P
%l>0tlI!rf6\XE'`X]fVXY?Q(W)o:c?rG)qmp9V`9O43N=qWFK2+.q8rL"QLA?9Gp2m6rDi=37gF0Ai8jcdaHBo?6Ged]6;q]q2do
%7Ge(1mIrCc)$_q!FQ%Up2]!7YJ$!%).X'Yh<7??1\#pf#T=3Vd@bQV/UWV9>fVc-acWdN4[n#l_dF8m.]$UJXPM88\b.YTo^%+^/
%2VHiOp=T%K?8ku7SR-S!mV!__<o^=V:Jqn+)r/I2bcq^THf:X`.:,8PG*d'UHd:`6cc>1nDGJ46DC_Vp;chFRptHtI68upHGAhoi
%MRWGeq(0TI=dL/oXr$i-`h^*r??AKE:C0=4^V[\$NF9$bnSVO/Dsn&#k\r7*#[?bfacD5K9'_1XO<K'Sa5'=44dF%pgk23+lns._
%VS=SeD0BafqQ>'!5Hn47%iWfqd!EYokVf-4,s&cQ):Ij5Qp8)^\-I#WDPG_g0'mO?pduQFerreA2LG*lhO>KK>!FokX\;EIlX&]/
%5kca(cNKHjDXa+OX*8hL\CYrD#A[_NYW^rk0OVE,38=u2#5).<dd*d<Pgn0F*D8h2@'?5:Hlg5b\UhFdR9&+7ka>V$:+-^[J,)$n
%N)/9P8F6o,X$,k.ifVgah8..:&Q#pI\'H-)\H/I#R#l7lP6*$oT:7SE4lUB!T\OBWhU&@phVUFT(2Vj"_`u_RD1/;eL*(\XDsfT1
%,?R+!&Fs`0C'3]K*TmR)9?l#=WQJqYQkKA\(*BUQ&+IV!pFp+N5atZ5F-X4IE_f-RU"tC,9$"fue\VRO%j<:-2LU6:2Vn.Ii]B$6
%!GdRp*WO"^kQ_#&(.I48J[?He)"P#6GOCd56\G9*T+An*-fB$mSOoTuYh:G1g;D$a`%c?(&&hFXTBS'Q.^&5_2:pB<+I2KfO(7eX
%SMJ&>H["q\&W/g626(b\+$P\Pg=b`i>B;d5O,HK`GnM?$h8hl7cOB!gk]=7Zdcai1D!N(^Y9DQD7UG\C948aRXS^-.(OpFQC$+FK
%Ctb`[P?WNlqonoU1tL.2r$_=.g-6i-a9%VRL]l+HNF"&5pq$!1p;#]1.YZ5cQ^j2-JmGm(D__e]SVN]H'<&"/YcmQhT[U51q^@W%
%ILc@e12X.AlmokWH$=cM+1+2/#;!?RK):"BGOOu/:>++1Nk`j,$+6*(;.<Nu\"<nc99)IND0eO/.p^Y3cFqAQj"Cn!Kh^NAINbuU
%Gs<XA]2_"!Qq/^tk#AI#If5kXR,;FLarfQdrR02^5mR,rY8ht0cOO1+f)<V*eW435hgK]D;sJ)=%9RqcQTFUX<<Gi^DW7CDm[qk:
%_OUH)k=[sXoWO69pY?*R9"G"[6tsJ4g!cdAqt<9kMiZ-9O8X_`I35Bqgc=8_gm<75IGN31VGae-@FOce]ui@_='S%Wq##2KW8nt!
%$>fiSML*ceHg6g[D/I^gjN;(4`:b9O`(4:i)jC1>FoSmJ78cC4IlB9U?SK@92ee0,%6H^173h#BU;P%A5r>_0c)^#(?)%Ttiu>Sd
%D0L$M3>C;^V<a,P;4jU!+'lRYUh959fIE)]_@I6U7;"inj8nk]L+,pEdFS:&fEQ);Iu.lCo)9&p-)K?,%MR)pg1KC+/hZ=N\(`Le
%153KF3R=jO<g<ebqrZ.m7f%RYfG[c_(>TBs+LZSLm!j;-5(EgZ\aJU'J)EAi??T6a[.[q$Lo&RA"9sj71[O97.Sqh^LG,FZ,mI(f
%H_>W1qdp["7*4Z%^`H,;_QJ]?9-0$Y8Q+k"9)>p?2q[\e!9gsUhRV*=ZUp`k\Vj\\a0+jqGr+Eo6sF%j^6fui'r\O>I-8Or(h!?q
%L0O00@*L#mOpotkihD`bm\eH#c`9FSqAH"-KMB,T[/H1VJJd@a&).6lNc8k"B`A=u2uD:(OS/WeHdaUHNMTkSqcU!"6Sm@'%GapB
%&iKs<BIIA,N,=Mj$lBK[0_;mMIX-G?Rl_g7P#PG]mQ0Z:lTFT0.@&%!1*Um0jL#Lk'o;+n]0snF^V9`[/[Wfu0!1TRh^k$)TH_CA
%d5'2L^L&jJ[`9J-1g\Z=Kj'JVCW"E2@_D%SVrr<;lHOeJ")[b;ZgI-H_iO]WE1Xl"K?_-KR<%H=kY.CNDXF!YWt!7_ausk1P8E.S
%=D'\@E9,js.ei2f=:1;M\+8QS+4:a!\l<U/:?k2+M-f"UT"fdFj5?+Fj0?EJh>Xpp;f@&bl')'MF3(Vc#3PHfFl'rc:tSu95V%4D
%V,/RN>3V:hB\J8jDJD'+c;;blp4bm@/CChW]K^DciO_J?@P%b<4drK!^U[:8Mo0+'X+P2J`XC[AA)H&ZSr1]:e;E@:iS.l8BrD8?
%k<)PD^@^=s^%j&+_6C4s*mS`NY7q.YmL5,jlFbe`D!I4&M("0-+"`&BktVYKT.rSee6LQcc^`jmK0mG!rH*Oa%Cj:#%J"c)IQ.H2
%!5JL.eR)#o,P+Yq[!"-9O\N?!`tB;m2+JB9=2U,+*n%*E=L'c)o?Y2Qkr!:U2Du*#SVM.)rG_C`VKn3WMC>t")g_F"'Ad,A&/MhW
%[8ms#)mqSCW8G8fDq7=_kR?rAq(^L_L8O7rB>>*qjJ5(k=0P0;R)3F'`D>C;*6hA9Xejc[HiAKVm"BJ-E+J36bfp[%[ijM`^R16U
%Q&.S0]"NTuS2HauDG9+e)d?uM*EfrWoAT]=/P(Et1SibV.Ic9:dZ*W5C?W`r#.:`G(7,qc]TdlWgcYW+i'8&UV&tp,5s9.Y2,!l\
%'a$I:d?X7"dZ[U'jF;/m&2SLN=Ght(s+--reZ/HSL-JAr%#IW\R3Qf@CFaQ,eIm'KTgNTc%]DVmd*Seo=PVRKqt_ttp,3Nob>qe[
%BT7a*ZTJ%Of?dqFR\M(d2/=.7^4Y#&lP1.#XgLZ4XnI+43B&o;7Ag$n2=:F1[o8(BVFD`1YVdf^eDZdcOJCB=R@*:B1shI)H>X8$
%gn#L8IW>h:g5ebtJ/(`8kh?&t9+T&PO0p'BB`D#5m$&s6Z(](*O%UheCUM:q^%qJ[..hS5__DDGjFcC;kMo@=SC%t9,sgT\FN;fQ
%#^uU;j0EBu7PjMWjV/bPM)Dm,CaD%tAS)tdF8#E`drqkj@>5b_KD+aB9mG)s*%gBHB(#Fo1i1eV"/#>7dBu/IDqLuL]<t`V49(^q
%;XI8IE=_4R;h]m2H;ZnS^VYr!&K3Ut$ToD`n1Pa*3LfBYT3`Mp<bO-iHb8F=.F4L6oFG.&E7hQ\0kbY+d"U=RYmU/?%O-=fH>]Re
%-$mV^rIYiI^?)X[."ojFD@QBj6\WK[3]%)9:V<o*h)kSk8Y7KO/<6:ic9J1J^=BcAiAK@]k?FM#LT$oKV":_6jVs^KLJR);S]eK@
%V(Nf4SSrX'hbK`RGkcBpe[^&h_plZCVXpq8jU89F:-.:t>eZaplJeMdq,Z\LM#qhlFM?;9I+_ml@QNE'b$;[BcBJdeq,Z\LQ!TK9
%!RT"'nD;BnN!GL>bEJ&@:PQ@'m8Go_msY%M?**h?Vl+1g.S^/n$nUYR/ASqpf>Ok2i#iLsF`3K=oqg,]lM0'MW4>8Q9_56YQH6+e
%F+7Log>5:dQ(&]H2e_U6QG,%an7=%&$J(^DL&3\&7#1DnDUiRM`dN`'a(iZd\tN;s]Z5Kb2*U2Klh9;JG=sO*.StCr)V=Pel#lMB
%6_j.[lUPqR=!)Y##VKBt#.NaT2Mj(i)W:Ybgmb8SP>0LO`Q`ce#P%JtZqiHPVRHsHjd'*R1YIX>0]i"uA#QK5;F5.lZc&7$=PI""
%i"Z[TRsVPTEFZE@^57MlEr;i3*iLr^nL//9`n\5Y[7RPtDIcV3,kU&D!&mpkj6TX2$@l:<CYTkU<;sBf,DTtcl1LcT??fjI1>:"r
%Vsr)heN1_JSANE%1DP2M5sF#VoVJ`u=-<5-](P%1m3N##r&dJmhM5u#O1\7<iiG0,:JT0nTu%F3?I-$#\?dZ_E,A@qlkMg-1To8I
%kk2>/7AjZY2JI"s0`N:#D)uCoY_0BS8_NkpVlM]!+10a/m,&6sqN5R#2PFrYpANUF[HWp]m?d]2f;J$gBd5R@<;,AYicF"dr'+uj
%q1hV,qg:7uZ@lO)H%]8OK9IdRqXWV8:C$=Uc.i$XnJnSVP9LYX.k@t"k0DBXZ*N.5>+TQ>:'qDa@r-L$7+=[N1*^"A.X!M*a=;W#
%f)#4o-WYQDCCO5@qYo`.X^Q[d/lQte?ERDW^V9_l'*lRh7(jmWnUpmGSsD5YD0i(N(:l@NnSBXG>3fn;IQ7;j<efnhTMOV+Uq&k#
%g(uSJ#HJhMPbtpH94E1=YQWOA?lC]EAUVuG*c%g>rAO6'/.[T`)1%&UWnMf@WP/7Z>\-<qm,+m!qrW-A0"#nXj]W--#'YE8n'1FE
%qcC89jLkjAGA7N%8[i>WD^:TY9g7?p]f/#D?0pGi3?J"iC@BDBOX.Ok=7?LPS)h6&fPHcpZogDuN/jC:T]ZJb>lH]TNP4iKYo0h3
%EtmjtGIEYXH0IW,3Wrlo*HEO>IjTS%)gQtjgmJbNb@]8hI(5)INh"*Y;6$ZHT?U)?>@$qR)]n<Cr/R#h.RrBf6cK7h;Z)h+YjBjG
%bj3/A.*lgWIB=gM\C*DCiIKn;-Vb+1fmoW"*Ubk2nkIdr2t+H6G%TSDNaUV0Glnh+C$s+U1\5).ocQ85gR3=+#/_K?1N*shG^h6S
%/&TTDl1hWfBBI<OQ3JLM.5Plik"41HH/$WgMb_?1&U-l'o*Q#XjC,Knbe,>-<eb];.Pl!ZXY&Lci-3j@50;J.2fNKX<n*&.K+c<W
%[*C\*Q_V?S6V;n78'h0i4IR4.3MW9fq2NY@@PfnqYn,M.B_]b\TJgLtD10qOH+uP]qS>c/g6t,.)775/S0.rs::J&g*,NXKn-G4t
%jC5T"#??duc0l(!C<tduf73U)`XWp.[&*ZiqC`A?+8%>dJaAl$n&L3%[SuIY)VSR`/e*G#6X/3(BOu"":EF<;)k)o"?>9A]Kah4d
%CZ;EGPdSAt:#<_[ptd-*$.t[[D4]F?,cIgjao:jSRn9oZ[4N`Irpk4?8[@aR@Fib5]RuFsG&APX=*b)V%;eCeL/poUj[]j*Z*/?%
%-HXOdFM5NnQ98!r-n@p+DAp7m6#eMq`r)85Vq4V^bl'MhPZPr5:%O&s8]j]Km4t$fG*;F=6(@!63F#J=L;(sN-KVA94h$Z?8,Hoo
%iOc4f4E3U08:E^";I9'pc&:r+M0b!CpWF*3Vsir=MaO<8jj0aiH2*KW6#0-R%L5bM3K@aZ[\P81+Z,[dn*:V/LLhe\QYr]L!joDD
%-"dA_)3u@*Zn.B_0sb(?Qc8Hq81mn+0#V8l/RP>5\Z2^"f);5%rq+fk^@B,>b6K-'>[2dQgVq2L^VBK:^&$j,m2rO&G^fPh[7bl@
%iT7TEqY*,hrj[5,r:JLh)aF:Ait$:tMrWFaHm14`iJ7D@S,h0s]i8Ts%Be&>n\`7kFYIX&MY>#CX,e;S9=t(8C"hCTO2#%8#B/EI
%PPpphc.T:e][`Q4l+]=Ola!n0Q-"JnoRJ8,UtqU:q8(LgT).a:ra3i(_TiQF_KH.X'O"ML[8'/;J'*80YJ_HYh;J^fQV4XAcE'e7
%4+?53rmJ862su'BDol5>M,2@OCVR&Dp3XG%mI$cSrmmRrT(mTQ>Nq`r:VQYflR0l=rOuKufQd/9&'NjVrVD-c[IZSppa"HjM#ScH
%JKN3E4K+U^P2GN)c0F3R`+uE'5C;A3N$e9O]`)k5+/\"t+.Am\RL#R6^_Z4n:KLVOqQGnI*<bPt]jf;uMFho@CE#`=/Pe"13#T4a
%@Q`f/JQ?R.lhe%7U+:?OlC,fER2LeKB1-h^l?^.#5/iKYD-X8'gMKH7gU8k:YNqC%7dT%[2s[SigE$9*]fBH0'CWf-)]?;k:[;q#
%Qp'q[P8&&0VVMb=0%HHK-b+J;VJo:Dm@eFZ)`rk:SCfdXB60le^8\3JEmV7ZfJiJCO^[-V@c,U^Ze`R6,:?qASeEael"qa?9c`o[
%X1l![^6ur6NgeV0aWZ(c`4gOi3NI(Y]6hH6^+#Dm:/O,h98S'q=a_fpL(9^*2l/6(71C7lZ*/rr:0E"A0!M1j^8\1t[QV*gfJh?Y
%o"<XR@c(-ch`ubH7Uk8>g6s&#>>+=PRR>J=[[Gc,V'd=Q/7+q#2q:kA2HrlA>;KsI9'i%il9!FeXj\-=%GHpWqkdJ_jcT:m:@'JL
%8?TlfBH+Fc<q_b\I=+S(26h'kjScM#qkb8C$,+U%^8WqI)RSlYp.^t-m"aG4@c,+CW*t_,()$MAL1=kAZ,X[.p.[!:=h-u1em'B-
%hF>/"qV&Q4NMq;Ss4<#l:u@r[eW-aQH5X(MfiPKnJgWZFV1d^R/Uh&#>i@X'ZT7"sIT*:H9\e_s[It*g'gn8,M.:GTBcHZp_6jeH
%0C6qd&bETAM,5Vs1ngpJ[uR\mW]iQeef[0S:p%F.G:79.FR/ak\farB1YYPHCaOu)=1@K/@Nr6pN[sSl<^Np#?N.DY'jt).lUS\e
%Y7rn<n,M/'j!HE6gF3fYk2l4UVY'[<*d[\^^J-q,FSXfldCD#4C?*M;VO`gdqu8RuKc"1r2e,/"Mfi9Qq;9K'/A-9#PJ6Zsn&1/"
%Z*V#2f:+kVbON)aiS.:P-?Qpj*^9#/l(_l)]t#pL^14fJ/"-`(IC&>]>'%sJ33R%,Hd9h!gGI?'lL[KYj7:9Qq=baB$+]`Cfec7e
%cJ4Y]SY@%Xb593H]c*e*h0V$RjBK[,+`D8ukZ>iB2:Upj<^X"WDgqUY\Q$J6+*&1Kac:!hN?\8^YRR^0oZaLomCAsbD'YLch0n@d
%8.D\ejHZaZ-?+oIgGmrsb$cB(qbC*u%bSbN#PSGa%FNn[@J\2;WaF;@RX<L]EL8<uc2Tsl]6Z=*g_@cjWi5<X`LRmD:]tUZD,hg5
%I;.4)K=U`&Y=X]KiUqBD$Z9^;QTP39H>X)/C+8ZO`?B-k*G,SI^%,<OO2mA$>*Fk!Mu'<*Ng*q_'CYQ3<FA#WGL`,QK49g]ZRGB6
%fdMP`/QiLQm-H-sl."HFP;1g;03A/oNGssQriH[9R(XTnh>9,[e!BFB6f7dM1JG_LnqHXup\la9^0':>B%q"Q`%A.k46h$,-T>f&
%]mmB$l:8V`D\*FB^A@;V3VWNt0&M]AQWZ7`Y=f7m%KWQGi+?X!4urUe7Xf6Kr'9RQRdL"5psV7;KpAO[Ntag$<::sNh\kO(G1P7.
%ieEKWr*ljUBP7e,^1_(L&Co-2>Mmfug3+tZWH)Iln.ri-BA\bAm5*qc&ubQb:Ij9&.8d6N-.A1B;Crd2a7!&AbiCaQ=h.Kr*R_Nk
%Ssu@\<l5qP"mc-n^<V&O<h&lRfUg/H4_,a:kta[pit'>PoO]!dqD=(Yf^KZ.TuM>"s85Dt]XhJBG_nY%V?Q^5`atNK?&nUPo_lJ1
%SA^l>0W4QMX8?]!VV+tW6;r'pTZtfp]t-G00mIrfAeYrb.5OgJ`]W$GhC\.**1qf$CGsAJICQRVh=.L:0%Gg=,4FUTi5XgK;_O*o
%DU5N#HZuIfKX1is^Z6JCqt\7Ln#u\;rS?Qc\(p_e_eZE(\c;$]eLqI$+C=^>Rs5]so!7\Vpn@sodlhsIo$MPkhWMp#jn(.pE`@mO
%hd3fo/uU6UDst#Fh^lqU[""_HjRZlbVqr=uK=nJNM2:V]htZ5>l!'VrhgbIhP./"93E7X`JN@$&pD%V[H+krg3kUpL_VY1^efmU:
%]S6XDr:KaCZR(Haa%nA5OaHimpNCgGi83Xh]rDF/%9!=0gcB*i5$F5*phDSYE@7X(h0AnspJ[\WDuFeJr9lk9^%M3$I)'ZMW^Z))
%-1L>tRnMVlh5]mc*5;+#dC_6P/mSa4U_SAflDG<1qeXjPbV)dQk5Fqr4oUulS-q9LNlE)ej5\>Q/QaP%bEo+NfiLUTmYraXh>?j;
%#4ZE.NpB3eQA4$CGGZoe6$dn!4q6NU6FSi[Z!![i<@PaG8%G#LdC"+JF(GC+21DHMVq/erc'U]'efJ,O/9#AnHJEVl<ok-bSX6i5
%&p1d^G*Z-$5Q]ld27gU?5('\>LuO:F>eNC4Pj5o!Xh4.8BqGT/"EFLoLOm_9;],\G1V>@$1A>Hu$Itkds7Jp)4ZrINWL=bdJpF*V
%\*JgF5q@k$WqbCT0!HD(lN8)Ok<I.I29mn>J%NE(ROER=01Y]5rH=ae?q9pgKo)G<J+'J>h7XPao_%ED48RURcWaUheY'=]hVHDm
%6s4UA6;a>Sf>CSE-c[%(^O!>mH)a&Ga-%M=OE^]1[++US%fODiW4]u&*5ltPn\CfRg@@R91OORqH_u.4W.%/MO`5AiAV`398mt<k
%EHB*=\QM7'pL0_jN7k-=ne-FV?&E's9WrTdpluA68Y=Y3qL!!+L)I";fr'CZ2"c^uZjlU>C[jV:[reSNoqGf/.a4L%+3r1d4Qa,]
%4R4E]!qTWcV!;$*ChGe))Qg-T.=$B_g8tk=nf,UZ1MFsM3]bKXRAI$FZC$uZNKT>^3,^]L8R/R/7eqj=iB/'T,d("NQ^YE'VBjI3
%7uR\h+oTc/o+>&<SMO.VkN4!i3qUkb?8=)'0,e(:!&H,OEGdsL\^CtMP.3fTf?t8aXDH/(I)O8\l"(Rcl?pO?Zo"69JPpX?b6iGo
%?W+A8b6g1MgE$!n_O^^#WX-eZFkFkE#6?MSr^W:i/s0l&^8s"?kl:$]KrbdD@_i$.AVE3WVUtk9ZGL1a^l^6"*;!rRIMpM5AXpkp
%=W,EQ_Sb/cWS7nQM(se!nF/-ZG)*TsE64cpD25.o/iU<0E!rAQF"TR[*s8p9$P-=rG*p!U<c[7ZW`gG1_S_l`\[nfk&MH7O*>hAI
%,hoiuE4%Sg)4Yf9$P/"7>i0]am=@=:Knl^=V0;jEh@Da7_SanG(LFG=$P0^eq8rI@%p+6Y4P#O?iF0t/>?S]=kSG;CNbI18cB(/!
%$<.niP4G5Aa'-4>kSG:8-/%D92\hs.W!a,;H]r[)(!i=qiSeNu3%7Zo^$m]cq"/EYS#s%4(ERI[OalR&%p.Y3\AEO+fnG3^>?R)n
%ZIsqe/#1<J8Tl$h*XX!qjL2ss,.%'CfeG!p402pPNc<t98k*l?`S>9QiSfG#iltkXDWAUOe[HP/%JE/dOkj.<eL*tdn44?:Y3*lM
%7bOht]^Tn5D26<6mgUp4>i!P#8(XUS*\M@72Ytg"8`[b+eZI%e,oL'73&BZ*3jeWP(EQ>I>SL19bL[`u_S\,uH@4K+R#mi)7^caL
%#;>9m>^3cA]8!qE3u8s@2R[7ulK^)cguP'D/aUOBgCB.,G-hVf=19rYW_ZoF\Bu%F_komlJ<"U-iTf/-G?,tuDKOjrd:M%5$P-;h
%5K-5Vg4b<7NX]gn.AlT2(EOX;4*ZPh&!s[Z\&?5/$P1j$XDI(:_ptln#O:X:meI;*YEmseQrhuR00IJS>uRB0_KioLKniU,6$98G
%kJG-eUPZ2-b(YUbcmCn?eY(/_]Gb.%\=p+tYSS@`cJREF.&;-E`2grI<o8)1=bu'p$P-<SN2930dY3IW29%?oH,p@(Q].fsG.<c=
%g%</!eVk"jk\XRL\2sJ2d]7ha$P/R6)J(>@@&)l?/@_,Kb$L)Q??j!VXOnDfPofY9_s+L:@J8re(qaHh<cjdkM,fgDaWml_p+Hm[
%mU0u:'6NHnGlKg]Ep*PI/h]4J5HP((kuX^>N5ThL$\e-b@NJQOHHBr<'kqC&:-Uf2n_!Yi;cmc2HI8@D^KS:"pJ/E:EpW."n%LqE
%s2fsjooEJ7/(X+$s8/jLf,pWT](N`%cX(p>o&o&R^A;g2fTdE5*?9S(S%EY1rf8G0IIcCTqhnD!s*f%Gh-[gClsK[qq!7L/hs^Ob
%??><*rP$&DbH86<gi)**q=FUChu<6<_9IV95Q:0Ik*a\Z+(*hcoA>>s^Yc]8\+eRJDt\Xor8HHZpJ7E-pJ.>CG5V%)f*@p)-ia24
%bg22[5OA&i?_@>WmE&Ffk)W=;^%UmMV$m$XSc/4.^?1gZnsbtmT04usRiBVK0:Ej;s*1<LH/eMQk2nUHs*j_1T1eA)IJiu#;t!MQ
%]DE;7IS;L]^Nb*Rmp^M8&Z4Y,-/^Z4J+/NV^&RElM<<`ckJ^D#%UthF8pUBprJ,/Qhmfu%EUh2jBDI-Q^1$Q]QZ'X.*j:p4\c;DV
%PAf>arn#shp>asjHh=H!23X[0nb<!GB0Z@UVgBf'cX)(rah@R1DkHn)r`9n1s68-Q0;Y_(WVY`QH,'.H^L;!Gh0=GI``M>a^&.!E
%"([XF(QOr&hUU0qn!:%trVjp^as.976bKd5k)[]`;)o8Ur2C'r^/jCmO'fX"iUXg?Zg^6Ip#bMTQe0cib5qV=p>nL\I"1n5/bf.u
%^#!).FJD(rh&f^J]m\lUIB358iSJ_6icMs!(H6h+NW2&QGO=05+)d[`p!m.2p"qBLIeB<\#;%:dhs8Tp]^9Fjr:K!]H@5%>F3VOb
%\*%c!T1"d[Gs!..d#5)7kXuGHmo-hqe=S]hel$Qsbo-@6%,0gpiQhmYoOlh,hn9JK?9THFU<qumF7b5Oq>'3ghfsP2d@KFGh_+qO
%q6S&FGG42Db-%=Orr#"Y_qFT&Y(#purPQ2:+!.e=K\*#LgFrToYD[n-IqX^h3.LM"^Z.Q64[\,\hHV%MP-DXZa#AM&In'IRQLs#)
%jhJL>ci?.h'>iUCO>QX1^#^":Ik#@6l#32i`kU?iT0.PNT#[JdPO(:If$!;^r0hQuq,bnt<Aa>b6T+GhB=GUK5Gd1K5<io)N+ibC
%hUjpbqYgjCrq6/0oWRP=]C8=<lhC;SRc_i9Y#-k@j&ipBY!;O4jj0A;:6mCdjbK!63\YOYQ>(%,@*n>7d<seefPXWpgE)l0s7tN(
%cec2c*gjQ@r3(U?k5BGbkPN<jJq!Jc?$Z*hnc$\%++O2O0/n%9iu]r63;cl0*d-l$74='Yno@g`If?A/I;nT,2cfqDjT?h/p$pFJ
%d<VpuT6^!PF=Q:K.oLXG^A4Q9"_jaW&-Z1_O9T.6S'T!%I=D(a_>?0X802%5puL9jPG2H(eZc-rgTT8l#Qjl3I7TH6[qYI%A^/6o
%n2>+LF8M>[e)AV[hW"hGHe3cBknZb[(C?hEm:j.hPcbE(J,6K&"eH^KDl@YX5At7*8.&0+3*C#)o5cnYIsB#7p%^cN3D7db+'a%I
%ksl%8iYP`Il$r15mC?/F+(.I..<g+<J\T4].C\`U`?)J?Sb'KucMcmt-[?9Wn3>^>qYQ1$ImAR1q;of[s5"Sb"tW'/5)=uBFm]+%
%4^)PY0CN??^<X(2\k?mbKX&(32/+#%Vq.LX0C2Ns8GZ:B$?JRV'D:5$qq(k0U\s,X9')`]o_BLcO6FXLlM"(K5(3f*d=AE1"2B=@
%coTRoa/A[gL=<m6aSO5\5HEPXfgaW!M[r[Epq%'`J0%\cn'Hs9_g>qsp,-4MS&4(hemCS_D;;=9j"4'Wfdm&//D3tebc<B[%^+8H
%&HC;=e2ei,PIG0.HZ=EDn[]K/+>2>3Wic'm7FVYs[/'2UHhk^g:[$Sh\q$Vtn+HIMk:i#to9Cg^>^LsmQ@Pe)rs%lS\7eAc+5B:d
%O5h<'f!PNRa1:.JZgYn[%"C."mRdeg(`;l6B@/c$9jA8N;t9XH0'g2^jYo.X/G2,Jqj11UO)o%*r-e:d48j9tDXcO:]T4)/2POZ:
%Je_-1Uq=YD'7!::-,>Y,'0W8&b%.mV9.,@Md>pMKB4=@\=fe-P;gb2m\"Wft2W*J!cK;HO^0]Ln'.[F[?.t?"SY1lY=*=XPZa(\7
%r#Y,jK&-8WQ2`i)LTge=DW'-_(>,<QI;.W+X@N-OZG@P>RD6MInYQ,[/2Zs3nC(CNS@+"@_J=$p]Do7"!Y>=5J',?B/mFNgpM1Cb
%=&DZe5YTsT\Msts:XpMYeD[ceI3Zo3NQ7+?d<+jMNU,lqD@\UUJsuSg(OUnB-MZTq5!9rNpsk.s3PBpX8+Z="O&*rKrV&=h*,`%H
%$P#j*cWbaJ>W<1,GjE$?\M2H$33GKaj8H#*Bj8>1\"8!2V4V,i1\i-V)ra(e`+t6[HZJ]B`V=@Qcf]dS?iKu];Z)<R%e;jJPFqer
%-2te@D>K%FUaFO7Me<@6CB0]>^NoKWrdFV-RpYPM^n2'?i>47Zc@j*r^E:?XI+Qf=_%&LArk*INChhl_nN=/]mbK#_k%n/*cbC_3
%"g+[I#6WY?i@!M&@,[^cDg6Uar:tls4j+L\E:8oaRX5nO';(m>m4>nY59,jt([&t-q`V[UpFuL4kO[:8Sp^P%KtmUMp#*jQf?JdM
%k7.?,hj/`&.5FgRqU!Q<YOW=YC:d=jV+/edm_8'MG]%G)55"jNCL@$[nX+-CLHi1d6%?'F"oZZga!YE.4a^_e+?V*>gXC)^fK:NB
%_p\hqZk$hfT)R6H:D[B/$3(_K-.[^@rhdEn^C$n%_:'d#reiYH1jsGqkNj5eT;p554*1DGs&+7lh&3Elhl>"u4,_[XeE?T+h\SBS
%nQfdO459SeKC;"<I/`Q'GQ7U6cbI*TG5`.ci5(\^g@i@tJ%WMcmeQJCTE!dZf3U]=q!.[i+*K=(*aH7*orG8WHgUX8f7,p'"14):
%>-hjQQ&2NCQb!&YK7s9qg7S>g(Um.eGO`e_5F[F8%%Vu_oW=$j$6j$Mf\RDt5!Sb_oCgJ7F+=5a55r428eE"l"+N+Jn$EnVT"+Ll
%h3T4emsVnEn_0P;Nnr%*4R)/)jjWO6YPijd_B!UWQG)e0[7bjr5PjsF]B[,FF8=7pnE7.L]KXH[W;WVjPC7J[hQ71pEaF4io[oSX
%mi$Sp&*Pnk:WH4:lOJrG4*13Qi7l<G^--r>f\Wt5]D..Sa3J&>IiLQEohW&WSUGkE*RsOql(PNW`8\>\etKMD`"J8T98D*H'<=1=
%NdPLl4gEFL[Zs3ql&!@hgMIs792DYYRUq8tW>133pq0dY=G^0:]?.%IC;r8fe*O#'eVnR,g];FpICmo>*<e^^ShgNM2YlM[dr+2q
%0!Q*Mp\)ijdfLYK(_H`QT<dW_:<p'CPn3]Qq-!EaS[s'<%Qp'(2a4r$IkqjC,Q?gIY<QG+ES0uh!,nDT0.7ZMfVc4(b%>RQ+38/*
%0:n(XK"Z[%CNuVXmXpB4`g]c=Gf>ZUEA1*n#0@EX$.P?@bChH_:;]U0g[4Xt$ZR+mTFX%W^@eS$IrUl7enK,VIrSu5&.cOiJ,4am
%a`DC'2V2hrrjiujK5_%aoECr8hE(Ji0A%3q$bGCdf6JA!316X+9GGIP>pn*cLFJ[^>BDVpH'lYggociTb/6UtD7`Q?.5RLL!S_`P
%9mN+hX(H]RVC<#h]*#M,A=E'CZ-'=O-e"<d?tWRNo]T&I.45B_2n&!^Rd*9YRCFOje'r&gMfY@_VC<%>%,*V19N)uZ%XQd-PA/1W
%,aut9SP2uY3]*<X4.2u<ocuTu\,&,pg30#\;u1fS&c<14oc:2DZ:u^qPeKn6ZbdTe-%3H>2ZGje]lJ#gn+:aG4DhpB[+_]/7cDa#
%9<8"`R3OniCMC1`W=7`FP&"du=+UYthP8-Cs8A_b*!Q,$!8W/(iStmRM1,<`o=t;#GOabo4b's4T6?S$Y6k5as7Q>.X1DSJD>;!M
%>m(W!2#Va04gVacf&bqE/+5Z,qrcXfIpW0PjPBjj]g14G?S<IJF`$li0)tcfq"8:3VaI)Fa5Q4?T?`PIl>aF_nE&uf0C_j4Du@+l
%rVsTWrU.QU^YsrthZ*3>jn%<s?gh=7It,H?eIOA=O*CTPls@O.r:GL.GuqjaG>3VE!W**$_r(:ls2c?(If'07fBr'7rsdW\fepBK
%mlpTUg&5D.r7cEWs)J!dCYEs`BtrQ*hX%s+0sfb]^#!m\h_Zt`J$&I12>s\aqo\^m"4+h_3],bhnY:87pY$A,,XC4?V\7R9-Gr3U
%(";S0NAgT4&\pc=5Nt\;a3r-"X275RdeLMLVl`k\T*t\HC&2@^d<3&rq0h.9]=SWUpPeppC;=YpO1m$SDg^jSZ-$k%)P_KYTX?QY
%BHK8IJC]D8Q[l./</mTJn/BiUi^(>_S$jQWlH\d#(OFU$]/m"&V'1SZRf0[mq,7+8K[C6rl1_<&MPmB$C,Z6,?aj=MS"C$0DECLn
%%l%t8_jKc:X1ettD"g#p>QLdOgU=,"BSadWKl2[KGPceu3Z7RE#"CQKI2Lq049+hZP'tB/Xn+,m9u)^OIPn6CG6?d:k1,7M]\7:n
%T)\N0..gr$Knd1cH.?C!qL*2`;u91tQE\_Z],LaNXeUo"b'3ohdgUnpkgB546VD=3%J(R*>'SDIf.=s9Mk7>J[n:<-H]1;d]<PeM
%_V\d+d$"'V7s#$1R4u(hBYn!j7OeDpqMkU2)?A?(T7O'8</mTJ0T&TZ(Cu7#j-B8XFTaN^oF-9%@4JG.;`0;tlGIAAfFDSoTj<>.
%k\.qgjeW\d]Q[f^2>=duGp:,3=<:0R*G;@Z5)9T)JSAqf6:JZSe\3aiA$5:NDBJ`?Y[Ephq-gnpn&F:(*JVP,VaG,`:j=Rb0Tf*)
%O3k%En];6kQL/n6b?Kt6&qJ7aoZ8<dh=g^u9F80B<mjmim<?i*`dD9>"40*hW)rV++-lr0MZEC?V`0Vi*`0!8d.]Fh9<4%g&PKF6
%`Bn"L0SK[eg\27@@@4rAO1UKsV@A/e[<I55[L$CEj))[LF4`oEIM>u9%P'c&V.[Sc@G-@kNj&[s[Sqd?e.#n#5)B:LYo"`XmkV[1
%e_#IK%r7.S*c/%e>O&#%S!F'1H2<]N8(speCdD0uHH_E\,H1Hpd4s*p>"9(>OQNbT,*XElh\r#,!Q]+Zcsl"I=jUTq-[;up>s>gf
%O<dYNQm(4>iE"n[H<"E_jL`c`Q_pYeHTt1iO?H(t/d'Fm)mGi.Qk/3-FBrc2"7iU-@.>EV`/93.8^.CCeq[DRmh4OrM\,;Qr))a"
%ChEHJiMlSA6lr?]TfM9j5s@h`%,EEHY@2d4kmqf1FhAt+F-\Q,.m0>R/t?ZbII6bQ1]k[T,%)G0C&gpLA1%E'H2tN2.Kd?0C()\^
%Duu<NRBRF)"-@nfJCYPA['>#F$o)'%)M^0sVq%BD0N>/04CQSq1([thOMU`9lp+!kCkQfg[%jn?RiX>m&&T5071!@A<XfK\*]HlP
%6'sdjpV!)`,WKWWB"Dh!%d<DS9'`)FWF_k,jqRJ=Cs`G7=ubOWD7ZrOS"Nf):t7,cB4Y5SNA/H8n=XucH4dSFagOAQem6H^$^9B5
%#/KmK.Wi'-;r%-F@k<VRBh3i7Yg?8U;<usj4#hb0:ose93)'Kg=kE^gF]`-UVq)!Q[1/:hG=t2cdBo"Ti.AcfT3;;#+'(Z%.gYhk
%r<Wf1+$_f+D$$Z<!OcC;Z!I05'=Ok++/jDaBHfgiQ0*6>"@F+"8176A9+?[0cobXnn:FQ`VkiSArF%OO/j=#:#D.9%PAV13MP0It
%CE1QL3.sT\m'2,7k4`:o[k5/uXZ;430_I"@g>SP._S,>?g-T:g_-di-!/$s4Ba@(e>rW(km7AG-,cQF#!'h3CQ+L(LpkH#Z25UIB
%^1G-o"G:SWO:0b`Nf^^4556I\!c0Sp,n<FCgP`L;@m%7e#`$5*B=BfDcT5)MJV>?&0?%*s&#$Nf<K2q6P4r_<`Z*aRT6Zf!_&*Q+
%@@3]1bBjs61]WLF_[5E58llT"6'pNTN\F>iJcK6c:O*q0`Lf&YipnHU;'HB/<i@8@J7hjgh<:<SOGD3u%O;G2+rp1'`XlW+WpPB=
%Nt7:]"q2/Ra\WBRa?q.0%!^[Wl[/eSkb)6>0",(pMhtB14K#I9HY5%JMAO12'#Y'n_gnjagG=4+D09[%VJgTH_SOh/!=]Jf@:9D?
%f'Cg\qE)FX)=92qJeSM1BK*>./T9JCY)#1RksJb!5>.Um/WDut[$T0l2E4WXOQC>Ha&afbgBJ`<Q>bAs,*fb_%iKGk'mUBb-`iT;
%d=Xb<(sc$oFK\5$Vb&#HG!/gnYb+o"Y*,5\A$#N2K9N3XYZ92,L,E6t3a2dqS\<#YA5-JmQltY#fOVfLm[B^p.=?7:4%P>XQl#9)
%Cp)'A8QI%j/???j'aMioTEbXk\LRXj),rONJ7Q_^*7#ta^iBX&Y_KE^/6gFR0iaP,2KZNO4=rie"?G.SKB+Wc_K+:bjUJ$;L:=+j
%X^sdY"A.m507Yrj_K]`G=>1'kUnGQ_d6XpF(\U"9365k8FC"so4We9'$r*]DUG/Gsp=1XojfK2tj01/Q(PElQ%G"#LK&1+W/&V/8
%`m_L.#&_KM*.eP&4[VMA)L@QY%7"$h"R'6\B1/2g6#%kXQ%HT1TC'LuFPP?"NoTWb?'$gpG\,Sg(c=jd"e"Fb9bji;k")^L3h#m6
%ffU<m3"m9]6druQ$A&\PI8CK=;V)+7]HqDS%%+L5s&++XScFDV#$5O&FKit@L*l,DN$o44K.4uY`!DUIJdh]6bV/#hO@D=AMB$tL
%=qqgQKr,XtRT!s<#gu3kd5XI.A:Q9;_\dMuEr^'E:hU-q*(0I"dkKbj<<&96au3uN2(56T>+C4+W#;K*E@^;#3s+.pn#m=Zh:^f_
%$:F8#G4:XFMIctI8D.<'UG;8sFc^.m\R6V8Y$d/;!1k3D!/u#EKImHSeUk'1HiRR".mQDA7t=gD0imJEpLQuu[OH%Q5-0G<K_*"+
%LPShcKLC6oO;(<`!DFtC^h?l)k=Ao.nLoU22&7;7B5K#5f@XQt:g.F16X%i3$)Rti3F5]n(^1m2[%f]>$MP0d"*UMmVNDE0WUQK9
%1d^G>6%F7%m+bQ,jGie>"N++`JXW&8s$T>%IUbd;M5[,.V4XU0Vkur@\B;`:&_D[B$dq)[5Zg^`=LRsCX4j4<.*jE._;6u(3>:41
%.,*X"dR(=!TS6bTfQAJ(_R\G_r`L$g,lg5EA3dS1Ko)Wk$<ha0!3-E>FZ<u(",@ZL#L/Wd;RN^EBPMh6UB^;;fP!*E%@r_GM(h%I
%iqOcJ*XoAifSCN"nd89V_u%>f3mstJ)da^7Lb'N.<F\BM%O2H;)gXmR6Y:lqD55c$a)N1Z6t8CKEG\./LD=93%`@uLdVK_U\!f7_
%-8eeWK;%TJ#m2C"G6jp#*4ZMX9)(?1(GP'4%E*Ml*IO_LJcp2Nji0+981tLS-FCoCjp7d6E7>#QBAbsM@NI0)_l%"<1pY<3B8[G(
%R!au\JjAI@XYe5q+\$=&<NX-T!nIRTZ4"U+iFYK5ZOBCOOaT^%nq/ejXkE2,8sdk-p*3J]_P@bV7T*+P'o8H^r*Tt3CJ[hZ^([Ut
%3E:]Hj[bu\&2ZKniV_4uU!I\j`Aq^Be!j`d7J3p>Jd#'oTJGLc#g-><]UhADWnX1Ci&!.EZPscIgP)7=E_Z;@a[Y2T5WF.M%poIY
%(<s>XaV_NNCtP!9"eC]>BMu$Sf4pD]X,!M&e63f6PUR"\8h_n($b?\E.A8D\&CRqZHur36cs>[Cgde"GYn!d;(esK9EmQ3d64I64
%;7<@+(6hPGasL6*@HjXp)jK+()s?FTMcc#N#/R6\98A&,oQLu2@@+C9ck?7*Z,8p[C54jkLBJ5&KF/sLCI2hR\sO%CX9KJg3/'@o
%jg/Bl3UW:'8Ya;Rld1QohSTia`eL-7BFWaG(l^A:iM[rde\J/#Q(\Cd:V/<Z@#hs,5rZYeKp..;!Fp('Fb6aF!1HGF(IWHJb(#N9
%03Brs`Q#.o-:h-AG;"8O_KsNX:220ZR=WX#Zdbt>87Uh,'kDOV;Z9ha2E*Jl\<TQK:(UNf,lnM56)T^E(iT[@;c2I=KaTqD9nEUD
%H^d%bn9<X?2H/9l81('e1'^"[`*M:^;a!YbSiH4IiHLDjNu[p#>7bMs(n/OiJToVW/p#qg&.UfeQ)X']`iTojRQ0agP4o:HfHX8$
%1rOY&aH'Yji,GLa@H/(J38*:`@PAu6%N@jGR']D:"*'2Z`]Q52hYN*7+(8Wq436uU#Ue)dW8YgN!so@0b>^H_@'Zei$Qk"1ZM+hK
%IDL:a!L5@KOUoLY3ota$`5sId6'`:Vp_X_>!NkQRMZ[sY/*LgmF;C1\p_\t(!o"KO"sA#kc."_e^&pMqEoUY+%LpGt-*uW.@N4.e
%MB4-:ff+>uO5oaW8CWM@-X.X`k`R12Z)GO.as9!-dh_rDaH?X=/39/4ne!3Cp!?hT;,1Etf@nH5_oWH(9j:KV@kaK8$M.U9j%I0q
%1:G-k$=-D^%)kJ"^)SMZGKs3Aq&#>^DS>cZAPW-E>?gXXP@12L9%'5CQPP%#Ji+q&&kaja3N/sdD_l5?P@*'8CpTUGKX"1dJrWU5
%3QP7Y7;eZe#KHB>*R67eR.q",3-Wf'%boNHg)Q=e?;]/5,A]ZCH0CfuBQIRcq]ft76[iMA7G8^k#)`6![.t8:9H@'4/UYN`?V-b(
%TSd?&_r<SZin0T:n!;H`<&BKt."5`83gD:.,W"-X.(jcOPYgE9Kpb.Y\eT^[],k/pIGr=9?8W^h<c[C8o#qLY,W^QGkp@1:[S.'@
%Z_5\H>2B&!UBAnuGZZ--aUK,rDT/E46*YID!^W3GD8<[Ybbi;An!U-#FSZi=`Bk'KP#-p6DI&_<oaEOJ?9FL0n1c?YP9uMBFQcst
%,%_sfr%7<hZEYPi#LXb4U*/%/LMl(c/spdiad'!,Fb%Ij5'-$TJh64C\IM\UOJ9<qf>jO$o5p(\r&Rua)O*N5fR[-L#Vk[234,TV
%fZ,,BL8+sH4!gH3$oA;S9H:YKAJg_Ok1BdalDCaFp(=fB]>$;<00&ZUd#j]onc2bp(R?'<&<#rXkV;m!(H.3<066=_TRf'U8G3'P
%m6FYT;j(j<RMNCl$_"aT/I\.;_6`01Z32YO*B]:uOHi4\Yf>?&P_aL8raI0"U)h=:B-1Rj`[FkFe*M#eZoA@9bmm[E![11)I0@tG
%"O5,"8d\=A)@Rk;q50h=8RlaGT=K,C7;04GAG[4.1"N_71>@gp_t'n%eu(gD5^Rb?$c\ai/#[e@j\BQ4CEj,kpB*6LDu*/=PLA&1
%3aI%p!i('44s),sl#3]9lL2aHJpJM*i[1lD*tk2t0%\e#^CpYfW?gEBTP.pHn[Sf,:LFQ]'KLC\D;Y.__NRT)5U$mnr"r[4SQm\k
%I2toBP*\sPjQ5>qoJ-Qnb6L>`#MZHAjl,V!IG^;S$S&$[IF1pq$EC`=,GUi69!!Ac@7ebBIc[2umn$4_^Mr;F%meiXf+hgZ8S*eh
%<j;6"3k2*r\t7tX#M$':lY5CqAk7S<f`b+%A`B7CEJf?/11`ZSUX-4N!L]PhEnUmfX?@-R4e'<;(kT%s3[0=dl5lTrSP@mf!=3sX
%4I:p!0dmeeleR]/LF1#L#8to3<Sa=U+Xgh</=X@ano4ero:ViKNUStDPolm'e\*H2I"UWqWs^DLk#eUOarc1JbpnR&/@g//fJAu,
%HjbXa##DaVMZ=6&.kZ=-;,]dQOcEBRpX>e%aHaj/>Ht=eRicg0#PhK,q'0jpTPGd#:OIUVN,D6ShnmiJde(sk%8psIO#Oe#<^X7[
%K$Y$aDf@n)K`27Qes[HH:qRuG:'VfEjR^90DFeau$%4?M"dZPAoYZ5Ta%o.fj4nPb<u20kW!jf91840p84)f\8a)4#Brl)e?P*(m
%SK2CS9^%8L[VHFi:_NULO?TBPeY_EqVa8XPF=-VhFB%Ns,kMPYkt9Q\rWj2JUk(^,o(gp64To9:k>-\'?*tE@cY>50Gm[$55RR6"
%8fs*4UJ9nCEB8cV0GUQO"r@@+VI8p#@7ICbPh0NV,kf8d<$3VL,sR<@$>2-':Is6+h#7itQ-D879F>f)lZ&'C#LZIOETHkNS0Hdo
%+Sa"8@d53ho`,8RhGMj%_<>McddYo;'UtVkH4,'/_3cOD+1>`VQ=9VmfP4$d^1\u@"f%^*7)Pq"&lkR\=>K`PA,0cBo=:jZ2ca@4
%T`kduWu-5b,jqI=n-S`8c/<)m5YtMj^2Y^C1P9Tk-RBAp327%G>r)1B9MCOe9'PWWE;K6q_%-cEf=J\.n40-&KgroJ.2i%kVNEAi
%1\_iE%"<Z0+PfP\]HZQ)Xs!'g@`g.f+X0`b1bn&[CEkNnA)Fkd_P]d^aOZNk[lCgMY)a8\bc9On"be$0Ej]Kd59RZ521n-389Tb9
%%7uh:_"S;.ke82/4T_^E0*qK+fG5Am8`5XpC(3Z@W:#hLT*>brbDF".#VU/"i9u<OeH_#4ipVZTJh]mmbPZcRJsBgQ%R)!>XD>f4
%O$IFhl9ec>g2_FeVXHZ9=fZ?7IK\)\6VjO1;pb7mSm.@!"apo&&dh6"hhT6$hm"BpI;#V_(L%OITM^?!;%WM.bHZei_$>R^]SaNI
%J^TtufTEu\87Ph-0_jiE]\+$P56C("&2].;.G4Jg/=`cSd05.u$#.Nu$pHGk?u&dOrWn`cDP8IX$pOS"OD+l$56\kN.#`<.mt9\s
%I9c@;d$f)q$iW=P8t97#n=eu1H`JRm&L\![l,*GG*'Op,nGn],\!#'7EVLbT'LYZ8.-Xle4:I0\,4PbE&>!$ep`iW-0+(:Q8:5qa
%_(pjc3k!KnM%=IKl^G^5@Z.31Co+*AZVOM;E'`Gq0N.[b/2fr&3r/1`LnfR<(Up:lIthIE.>%XVP%jRj'_4DpPkb(H_NMp"h+GH)
%4dUmmhm_=d%o9UHW`a]YL(fu_-&YQl[hXf3c-/"N<AZm)V6nE64qLKRNJ'FijUC^H$S$W7MQ'8-%f&sULQXktA3LP@!sKm<56f(6
%&*JqQpj<DM#O@T[r;mR#^N_FGnRIYa6^i5JAIb?lI%Z!)#X[F]*OI^-j&eY".Z&T+"s24)AG-J'A:;_h,:^i-#FX6U#^Q@^ZO^ia
%),g>VE5@iR:nV+=mDFgX[+*%]_rIO!M;5hAS-Mu6q]eoGpl;kqK#OA#3r#pY_<bB:7U'.Pq\I2GY-Zs)T_K.i&W2[<rI>_hdIYrZ
%+^$Ps,>b1umJH0O_[:Xcp9!<O]8G;aJT@>ahDkbIO6Q1_?W6i`T;Et/@71r3PphK;LM0J"ZBEjq$@uaM9^LeAEemeR`'+/t0dX(h
%`2"h*[3Mr;;Zq2?-MCmC6]8%%r=Km-,,0!K%Y#Cm3Y2IuO!DYA;LRX!NFumO`TrRMTgK`#iYAX=L7RF0am2`Sb[8o55,]OSkaL*6
%@*k)^YpU#fW_&>/I@L_Wdue8ZQdl?UmfI<r7-tY\SBhm4"l42'FXHk'T_Jp0r'86-MRRE]pBf6UiqGsqJh;&I./,k<queprehb3>
%!NT%\'#dY<"qpp'iu_]fWDflVnj-!f:+8d5%'",(#PGGpJ&dRc<AS%U/]&#;>Q,&6+P2oR-)=rA1Dm[tgf3A#o,A'@5Be[W/9O-6
%2>kJJaEJVO;UP8?k="H#ir_,+Z=b't%Q)>O055fdGSYTddeF#lQ+\cJG^(="`n!!G#`NX(YK@CVGRQ!?-IMSm3[JIYP/\SpZ5ac-
%1RVp(NH:su"co8f+nG5G"nt1^jUD]S<9ERB$q//BaEB^[D$8!`Rb$"W4upuPL/\f]A=<m=T87mH8EHC1jJ+PcEWqLGJDR\^c/XjM
%Z0?nXYA52OCZi3Za7nYVn-+mA79ihTrWj50SW&G`ZC_?'Yg&$FpG)7enbDSbF>\t@JAdN,H_eV,%R2(@La5mg!AKbh>]BI*/@l6T
%OQQk2/Lm6Jr:o6O4)uHT%Y"K+Zp?pQm?64IXmi&2M'$O_Wh*1Ppu1JG+X4WCnR5(unBR@G5&)\A6ME9mO+J/nA.jaV&I%-.(4QHZ
%CVjLM)BW8cAhA_V%q]-D3U%iL56C'o+K^&n1\T9?'p6iHNUMu"i7ik'GGM1iR`6G#1<a1.I*L\])j*B9.Jl[J>LPi>PrsL,S>O7T
%.!^2j:A4pQDae0X4?bU7!K00mU)qrF0qY&/1.<r]rG?[dkG=FVMJ`K_C[iiQn"Kfu`8QLO0R^!:%Y"V=^.$-n'o*<]fS@E(j#]9h
%,BES+hC,t;jR>[t@d;UGNcd=)aOaU9p'H[O4+r0*,oI4H>pjat&nauMcE8;\iBZ^5e)lr/:ic7IN'r#-.?X/bKdCB(qNZPr^*bfr
%qSMMoa.OP!ZJt(rb;gj`8+4pd.6)XtODaraUW9MmOc_#O*pPk&AS%GR^,?=k.675:.&MMMfOt"_YdJ=LE:cmq.^S's8"cpf:\7E(
%d0HoGEAA\c1(ZJBr*7(<O$GEW2<C8R7NQ.90FS-5$Vss62?`&B8m6P:ki);[1meG8ml_VK'h.RS)^CcFLWc"Sf+UUA4"5DS;Y22q
%Uc*JFVQ20B!/>pV()/q0B9WZ=.=-6]WD65Td17rg'pKT6_+g22r%bL3gG;_!4lp&f%"/XA_:tEP++Xe(K2pY@$p?Ebhs#`(mp"';
%X;LdG8?K]AWerodI&Z:d!Kj''2nkLa8.>G&Uqm3F"-]`qkY]*jd;;V*PK%AB3VOPI-'[JRU'Ci+ZbN6uOo@^O>bpS1e5`2oMNOV<
%!Y_u9kXXQ_60Br2M4tO*#BeB-'RfErVP9mM7j*3_;YP!/ZglLP/520SHE)U2D*cRE@MhNtPna0&P[P&&R&`5nhoRlXddbd/*:0f2
%3I7X>*CN9:d<d@tf4C!!UQuIuNPs5VSjOYoMLL@5(i-*e9]FQQfZ"=2eJ>g01ff7'*B)bRXWa6&.KhFmmnfFF<u".g`1fGMjGf%l
%:J+gMkc)dnkmEFl%$ZAc;f_LTE%uKu<Tea*]X+Rtq@#i&*LiM?$UjD'[DGb\ZD-PkekeN<r3INCIA;^d1/^s@#u&!XC+=5ll&?uX
%+8_=PQ+EPj)LZ%:cD*?E>]LQHO+L+@85_58*IC1(K"cld#$b2#d%`KJ>VDM<LU,5D`58iZ8Q4Y"JprN45nFa>i]6LX@1!Z4*rt7S
%$\!O-MNL@u?:iHJ/4X$.6CEs,c_oq55(/7/11N0i;=WL8S\g>YY)0W?`eIk@6f%X.S>QKR#gea)mnJp)0B@L&^6-9A'02--(Ud0E
%3?O>jFgj4i56=2f@:u?t[\Dq"<UnHte+3p-^_*%!Gp(h'ONI.m(o5`%(oiILT>]GQ\DtZUj&_aj*SL62r&C@M@-:&4Jh\bTQe6R+
%7N7[CFs+r9'feLqW%E\_pMK`%6Ob-&aa##9E\fR;KW$1K>\H^Q,@-/H//.U^Q*a_6]EL#3>%,Cb,j#h>n5.i9,j#i)ILq'tLj:*g
%?kP1)UdI;EP*d>Dd[Dl=6HnJd*O>JR0sB<(lo3d$`;CIJY<^$mZ6]fANM-\Jaibplbtt-`jQ691Mq(e>r!9)a%_@'uqO3`],>\/L
%ahgh^peM,]]O^/%FOIOr@ci5a_S\/chg*M"aNQcr4/>MKbkqa*MP.B]0b8ed<>)k!;%cE$'D!GFe3`M]i_dT.%5TXJKW75#]_i$L
%V(5Rb8;#THa.\'B[!X6C@]&6S@pr<9R[5+IMlDnUZ&4qCN`EfNR*T09e);a__I,.\mM/f4X-i_HaNQjV8l;e(ZDicsb^9VK:erYh
%c98kFAEHh*o$:4k@nX]m>Y31MT/p=\R&BF!WYA`:o0-.i0;s0ZfEYMUo2t-]MSV)+Nth[uOnj-TNN#WHc&][(6?(M@cN[N\S1hBt
%'S2:oJ)]T\TNL+.:iZ5]S$sfWd^XmucUd-Zo7I494p%]@7#uFYeTk9b>YH:Bn7u4nlc)DeN$WcL.V^$-(0!CHWHg8@#<DOmk<Q2o
%bQfD@:9H_jJ=Q!A1HtpWCk6>c/$>7b=Kb+f-Y>O^@LZ3!M4(8Oc.e\T++^eaTro'H<m^?Z5Rq!igjC48YS/tQ'1^g/h#%ElIt?Q_
%+!NWSo!'VOblaY\ZJt":@.Y:$O;H5$XEnMs4s6*!=)mgV:eh_L>GpEA+\dgY/@g$3dE_WXSIZ@)C6M]b4Nr(!D&#.ipZr;\lo^<Y
%TFfboc3*R5,3O`CSApf"Q+;1M!N<GVioYU_")M%[o-5r\7T?LaUuA4;.Sip)o5sb((4RUm47SS;jST:J+n!"J2*$^,7?Xe6iMXLm
%Uh.Zne#a+CR@DiSJC%OW3tL2+!i$Dj&!LA0OZOA'eHcl(Jg0YZU?;Uk%$`#hSe02m0'N*C-k:m,n(ZjTE,]f?;PN>?&lIpjaj6$`
%"e4W),PnJekQ0D7b65M29VlH^"?d_6*<ge#JprM-VTuL$_Uh,QPQZC=<ApB%`g_R*%l,d$6$:.mCs,RrATBtLYE6LP23j;UT[."V
%eT4ZOH-^C[#l<>]pp8cOf[T+(CE$W#'M1a?GEHDg$$q,M@k*'O];0;uR\7],)j*uFF-;?$?`)!+5>9tcr;6g7@lIMOVLFiDQ'n95
%g.5lmr;6g76QB1e<:i<++C5lVHq&d\:QH6<q@Jk0`moYS(%2`@TIV:ho<pN/`eIk@8'GA[cBI^E5gK*lE9Wg]mi<3D:#%kr?[,k>
%o0*!gI9j^=$ng0L%Eaj9aEb`NI>TNJ0Qe+^A.ps6KVO5.EdeFSq;.gp@`cM@!F&up,<:gWET0_=k@+42<2H=^kJs7*&fb2o&.*Y*
%`qG7$a5>#Y;tBN)/344YD2SWJ0@V:s*WZ)E'0e^7W#b*#n=pft4D';&/G&HeHQ1,f/GOKM$-9YRo(+QO)qW`"T3"=Ri%$6#57`D\
%Fs9.H87Qe]c]:A+9t4orkK.AP$mkN:AG0Lr(\IV2'1W4_Mh6_V`i'B$akT!m-Zjc+jQ9&(i/iT8c&Y.63?$EYEpQZ2S;t%@L7\V-
%!i7Ce8oC4QKKs?Kaj!1ek5*nrS&].7_W!:/:E!OUq/Tp,7psgMD:^.ISZ6TeD=r,%QK@LhOJmh@>njCD]8@4H'0d"\Wns*?r!4"-
%MmB$LH6-0U/:42U435aBbWY3/E%=uUr!6P$SQW"pH\`&&g&2(YT0_GgaeS':6,R2F15f8=p"A5jIg0tm/R+)t_4;C8;!b`h8AjU,
%(2SEe=8H)!T%MQV$WgL*,R#X+X'kBf,Z>aq_;7!#Ru4m,U#Z$Y@de$gp"!aKSnnD,Yo4L)El_+;eUkIVK@,&!Q'=J]K7.+2pF&L*
%ji0seIK[f.YseMSm!UkKH7BmTg%u1Gp-(]BnEhGs$r84I'3F'1p?kod;lE]36VtM2f<$RfHQ9GJelZPQ'keU4dNGji!'.kTZM/=4
%[M7a<fm=j]b9[[]]cVl?%5h?]LFUr'J<nVL,C9rScN@VEQ*QRFQeD6J7SS"b^eI8I0*RbJ(A8dL-X91<?7@NHWhAh$i.=6E4.,5Y
%+E4D0#%""S)s'0um/7c+0Z\J*jC^'=qH[_%(&>Mr\mYLSUt1cp-8*qt70QNA\mW6=U&J)e"sSDt5TE^B[Xu1oE7ht.;R6$(=[.!/
%L9UCZOlMlcfS.!D_RaO!hN,L,J4*X4p)_K5Y/me:-Z%74h#.MR05*bO.9QF\Ybar+-<'Xg<c(O[4V5RU$(8@HK/1HLVkOQe\u4@P
%@]a&&Va2NZH;d]8U`aI7.dETjg1Wh/")+q_&p981JXh08G<Z9J!\.8JohZ\YGddaar-@Gma'dC:X((oj_V+B6G>AK5H"HDmKLL$c
%Vt%j`IF@'uFg%a8))UJHh%N</;ON,1h2fCke1juR!>#de("MVWQ'fqc[%AeG3E#F0AA57(HYc8Dn_j4En?BosBl5@CR7GS2Ut]rh
%OciKn/9q'IXo'^6H#@<bH)4(C@7ILJ-#HFUS+Ch[D9nkr'lQn&6ef1/5!UTnR<X),pGmA`q0)ha;oWq=m73N\$:1M(M[-NcSP$g`
%!9#rM_GD)$Z3WSE1s!m(5k6f\k.X*6\M##JD#5%`'/\nq7;[FN>Io$e7$QI;;RSIbj#D(AqTRbGV!4"8/\$.]@MBMhS[j)TI31,f
%!-bVCH%PGqMql"?@n:eYG<Z;Z)DVAQoegs>AU=dLhC(":R]1XdMa_F@IK3543)?J:6c%/'".<@g`'%ig1pQg<&beTC+LcVfg^gXn
%A!CPlM>MhmIDLbh7uA%]c;r0f#c-#_L$sHcX?nmr;&1707He2LhN'pj4cgts@krJ9-l8k`fm?]YGG*hdp0MsA_e*ZW*bH5D!Yp'C
%j;o[25I:)bEBIZAmsun0Gq[hI&\)51)iNdj,u$uJjF-5\3.P"'hN'qu#R#c;WZp^U0s"t4<_)kTe.WB!M7j.'3$]ZRpL@%>Qn#\5
%lodV"BUPil`3;6F,>7`:`OdH(p7@L[Qu@hpa.lT=,I.!=hR+cg:pB\(:_Z4,@lT$m=C("-';AaNhN'A<$HZg/Sj^:^k3hb`l\OHE
%h#/'(Xc$X`9CeZ>-shbC#NArUB1;B_F?%n(8bHS40m.s8aaWq.?OW!riF0cAN!K/P%9igSbk8&H6u7u?E8QZ>da#k_Ubr?.[^Q@C
%@h6%9;EV/_7]tOdKc<j*B]%a^5Tgu!VJqCtl^ShGm,gL1\I(n3`5SFe&h#/^$tJ=cM^<Qk*cs!'%h><7ra4bDhs:DNP_s,jM!!EI
%oO%_>XsX`JpJh""j2k1u=0#c\O_SmaK?/O2fm[2e5\_-NEd:8'2Rq<V%u)u.c*iLrO??$1W"(afJJe^@>MMm-&e?9ocok_s9F2Wc
%;m.`"?rHY'+FVF9^a(HdTPu2hqEVXOZ^b:1+I2Dn5pGcD;/\6-joO6EI1q#f("7p%k--LpPRK(r`0ouf;@7eNO3JE8*i6D-0&WjF
%,0A.9UbebFiI6#?8_V5d,=.1@ZCI0=2HUWtX:"0jc?]-Zi"G14b.H[l/a)`h.rg&L5]KLaH&OJuS2aj,U,E;pi<HbP.gp9rV*Kg/
%Df[QtO#W/7l,Z^(QQIs2W#92I8*;VDg(NnVgd-NDMCk73QW*dG\$Mea[7$;pq\Q(3WU=:WSIph:Xu:5"_4*31,Xrdk\`@`gp5&_S
%Ru?'G-mJ^bLfe`:IaFHA)$+P5$gZH.]2.]_BJ9i4!RVUWWD'jQ%GTcB)-f!>jskYm/M8q;>ZZFaGBkE=02*MpLqWpW28s6-i]f,B
%*2e@t35hGFQn^9MYfQZKf?kC+#m""/dsV)B/SWbt7D`t=X'2c]6i.SrK'c8"BLT<=6-eJI.oa<]#<eQ5[%fKR%ngXE-X"nu!X6I8
%UWM."<_Y.Q+L\tU#-iS\a5hLH=sgLg4HpWHR)]WZ$&Xt_i7>og"\sU^:4bqi*2IK4WuNQ)nBMtF]#Ot$nf1QWE:<t*&.F87ADG;`
%U+B[_^udlF&c?M*b4?+NrS`7DAW2KZk9uu+l]ftTk%m:V3rDi1/Y,:`KL<QCk3m1:`5WT!m[es&poGGVgm3YP`dglX$C7dY+R`/&
%JrTq%<@1rj*jVgX_W?%5'ItpkHK&o)Z$8Xl<)h7o`a>Zk_dP`p#Tj.[8?U_24=T0n9-`r-f_5]"3@,)%8AG=D3`c]G#WhPEfsVM!
%'kWkr9-?qP`DaSXfYEN$LnG3WBFB\o7(ORo@2(=Zl8tS#\k<-l4DI(P)nmN7Ep_1cU+FdHNKPbFEe0<lK6\VDW'K9hN%^,4?0,er
%B:?\_kfOP(H'M9\(Yq/&h?aI'lacqJ6NqIW@`K!?NqMFDku,;>s4q702p@bHiD$LRACSO\%PM2<pG>RhYo(A4bH"?I\^0X<2!@&-
%ACL%]E!9-eC^,#YrsTu0g<rB'^*OTaZ`)6/OehnKH4Z4G'M!nH7<1/;@oHuj/]G40"=VQq["r$`XfT%lpuVet<%hQoQ6\uPGZdsa
%gN`uPU'R<&8_V79d!i6o7PkDKJ&Z)gLoZPOD"A;)=`3p=EZdp_T<O7/\uZ>V-&ATL_]l4K#(ChWKJK8]hPa[Y[;]tlac-VR&KdeG
%!/-ie=SaXB#fh92j*9Rn,SGA:7FG[pHd]9?]nY\ndb:to7GKf'-]4))Q_Miub\u*[Sq&LT/Vt/k.h9MkD7<`o&%fO#5%*D9j1'X9
%lCsdC<<8ECX.(GCIPCn0iFU<-P$@2d@cBXg@hFH:1JE!g(-.`(Tu]`O9-4[nP`Z<&KqCB>AI8o?3'e7]R3MT46T-b`Bo"e6`$TFW
%65:g@.#o<*)Oh>?BMTq@"Mo_]@[<\^=i6O_"cnfU8T"SqRa>u!0UU")2'oh"nPd7<#m(."#SR?;I2*q7g.'R;:_<7A_S&?3$7ZL6
%er">I\HukKH&b@jD%*C3c\4*MX+\PrmJ0h*ZNH%KW&=h=\R([d-l5.5b.a2DQ;\pe?4&DY+DGJ-E$MLoFWSValH"SAfL(?G:n<Db
%f5kgc"l+:l=fbS!ku['i(^u,C%#,+O6.B=@b.*t.G7]Se,'V4oXk;RM;j;5o8i-CZ/W7]Qi;c-qU6NMhe(`?(@1I:d8[/U*Ta/23
%5V)gBbU-PuT'ts`\dM]6B%,8!\6O0WXTURu>3=3>m1El]S^=idF&p=NJ8V#_8dop*mX@+`_(`>tV0'@#H.V&8'I?q!eqd=)fjjPU
%2[tpTJ=$R4iE*1Q#-5cV7upA&$'K/\Ei<gUp71W&3TVr6KkN"+:=pOYc82;DSYdG/jqsPQNmP#2S.YFP,&GXcf0h]qGA0-B7toQ6
%X?tun36DunVac]$@)g>QK.QPu4&?FiAMY<k9*3S##e<F0q#d(Z=>C<+MU@s4+?uUa7F*KP_?gnXUmm[n^<oq[cZfeUAS$qf:T,+b
%7[bS2Ak5&M]Ys6uMWqY!k^FhJrZoqP8l/EVFgNus$+4iVS9\ehcnSjl+>+6q'TO@AhQrHDlbr9)jO/QldP>?P6\@"h7?)6$p7[*G
%-8TD^'gj=(%(1:W#EO?MAqZ=1\0XZYO1SRX9+m00lUoafn3G&u?F8oWOjOJl?hg^-gG$T-d;SVY#l&FTJ/1H]dHE#SN+#YhTi;hu
%$G6Ea\>V[=DQX>""4T\d7Qr-KDo8u"0R`PC7>(jRCn9A"a?N<\5uUta!bnJbg9[agMjd-7pQjjVHNZCEOr_nX3[;-_^j<3-LJ3:6
%g[7H;8fa9#X2e_:.Q):scUG+)dm(^h#H.6p!o`Yc'g7-;m?(u`d\@OCMkG)A?+U%MqauM%U2btP+OS-(M\T_$]`<.g6SVr"cuYZE
%>:=q9[SP@-_JXiQdpq(l`8rh]0rVAmH=\"^]kL5@_b#=qM')MoS@UZo0;lg&;(6n"Uc!$3TF+2CM5X,n_#^Ba(I?amW!QFSI&Z,.
%ee2Xjnd/'?+@[lil@K(4+s89H*!X2N?Pj;Jf/6-.8IKI#`a-c0Z!cNq$6ursfI)BglnE=GD?au]_$cF@$]*mYNeH=V\n"OE`Qu>V
%G.M@Dm_!7=rPDT,9i7j'E.3L0*i<37<K"V3Y#o!34aSi5WT[/DIY,SQAUL/m5U@N_-YW\besa"543+87o!g9eT(RM+GD'/)+E?A+
%-<%_TC7tar]OH0D_eGeVNBhr=GWYck1E`bij7[$&!X9[B)KR?3$"%R@_:MSG!TRa;a2]df(J"X=34]3<)f.VW\kMi9-Io/a`iPkJ
%]U[9^oJ>;KK#/Z4=X+H:Eo+$NH?LoT\n\j>N%sPIROF#akJ,%`M--!Q.@0qV$QM%Z_KT]<IN?Vu%T+-0fM;i;%PdJ!G[jl0,Ql#0
%Vl`F8\\U3P,Ym@*W?'+8()t22h7$jk_T^tjG/`0kTVEn;p+@.hcZUlOE<JSJ%KD++7=g'W#33T+_b%5GUW>!IOb;i@Z=A\CE5il:
%igFtagVVS(*02%9]pLgk1G/!s@Y0O:#-4VT:Eo`G%MH]!PPp$.V/aEk;nM$G"[Z=21:KDbE/GkcFTH*f7_CS61oV0ZgsUhR-3/Z;
%GQ%0d,;&I1%1a1Y"rWL'Q,g6Ra@P*@h)'!f/<eF9#Vlul,(W;b'bd4$7m(5f'$B`dJ.A8nZhR2s;ID!Y1!cjt#Mp8&@p_')6oQkb
%*@k>rhASn@<`2_QN%VWVM]!*p[N&FWq.J(/aJ+<IMjqF;D&Ll]P25@NX,6/>r5P%'%bd8_'+T_^G%'Ei'h;ZeXE*>>L4Va)e)JDe
%_90qd*7SV">=>n0Y$H)%f<1)9.U$NE-!4N%"CXYb7]7r2mc&#GnXuUG[&b5V)[)/gnp-i4Z;:oc,XL1ojj0"h/-roMRS$N-bTV54
%j5E7+CQ]Vgl2p!rCN.B99+lPF7LGtVJb<dE&9g0?[fS=c_Q#p,ag1Eg"s*RWBO2D8V<s\;`!87BA[L(r\33*X8FK#$E\TJ(cng[q
%8W'-cnU5ZEZ$CXX+%]0\i1cb+^"beH(FNU1ap-7@r<sI>+qLeRHq,il't@43)Y]=:,h?-[OaH4]$:KV;*[Is.^pob(m<-).C'@:`
%:'S7[CbrZr"O#4RB!h[5kcCY_6j1dZjK!j$+BZ\&AQcM\3p*_)@Q#-F@^[JG;,@S@$t+\(aW6INDt$(^,ZEJU-oGKrp:sSiJ4Ask
%;/A,n--ha2-%22Q9:4o'G-j[5Y)q9AIfdFYWJTbI$:C#CgTnZa\Plq%0\'WZBN41T<><H@d><nCZ+1gqgBQo@K2i_r&\HSl_D)7L
%mWtb/7Tik8RL_h,-r0Ne.-/;b,RV@q`9F9Sb0<Dl(HdCFMcP;W>=]"K^l)4QS#udD<#<85Sea.Gf*Z3n&4WLngKT=BVT[l(Fj^1G
%q=@KQFt3LHj$B'S]f;8gAZRKOaR/dh"2>g=-t'0Yqm#$*JRsXl#,0c83g^"Vei'Z20cj<C"\KNc0r0pbW]H1$d)O6S2=Qc#g]f6I
%C?,Io=unJo82Q<`$]UBqkV-lG+FH/N&\!UueLkIS>;+1#=3,!.G>X$5#DEnq7&?7Qejp%BEt1C3Nh/lLH&Uh#"A3F)mOX^JV!nbn
%';RkAGsJndI9Q;)hPEup2d"DcGF)NJ1odEnqQn,!b852R'Pau5*\L1D9T$=LHuTJDYNj5`#8&=Q!K,74F:BpXB6>I39Zo\RAW@MM
%AS%iQ&[UKNM=VCRl"Hnt^2O;_72cmb8Cknh.Cg_E-l<OX:d>3%NcQ0pY<h2IGmWiS?rCK1:fnTh%H./).U*%=)haQ`('aF7bc!uV
%(sN<-D]G+*NOi[QUU+-M)e:'ue'N&E$4Rh4P=b4VBio_jX!'btY778QqEJ!o.d]R>#iTL-QojG(i^@l=H9JRdflBN3=85iJ<'quc
%[)7oi?pZDWaO.jr+G(>:&5^UPa8qZV/C?KobN+:Em'm=E/dPk\8mQ6U^?:,$X+lJm_1b`-3!Z,!\<%dGMbl?,8&IiZ$og/Db""28
%4kDG;V]Y5mpl5O$6Ri5/5jWtnI!)4ZSkgn1P)#:o040^nRlXZ2kWSJ_d<c0g#iDJPq-k\ln'nVN-do`r45PoqD?1"X6?7/U/I_0.
%'Z6G,7#D,"&dZ*C+V8mLa?U:geJfU^KBZ+"D$0Ep#s6KeL;#A*CT<_r9'[bo3bN[\Gt$I"-^8$KLMjHC.i2BKp,8Hr<qD/;<]Zj-
%Q;&fddX$#T=<UJ=/jha3=u$ghR1]nC8k(BUYSf8a)K]c5V:tL=7^,chL>+cWG&YNtm4KOG?uTO,\3%Rl$&G_,`[2&3+DSA&!4e(f
%QDehp\;$[1@I*L&BYHEnNXn2!a[e;erJ7$3*'7(I/II\30j7Pi"I\'L;D*t4C8Ltf,o;bZLVQ3r.R]4s$X_W-<D9@s=J?Mb6QN!(
%VlXaQ=p=j<7E@o5NG\jaH1MqZPD)RU3gbPHCqEp<2aQ_'kdb0\6FJ]`]$Utu/fl#X,ES[?3aX)mG:1aq6u8]I&@-PFS13NE-OWR9
%D5QKuNR@L1W<#ZHFH+5a.2(*DAi0r>=k__U4H[e,V9R%@1@KNQ(0^%V]X9X]-t'_TLJ+mQU^\/KCNS!"?W@r.2f!UH1^gEI3R2UX
%*UHo!Kf,M`G]ObQM.7<V2aX`WBN)c$1+Wk%QrC,__W."aXFD1BIon;*(`4e.L3ZSg(GSM?_7&;i/g5J$&r(^:r!\HN'8*u+GNcbR
%Ij2S2'uA@'[]cZ?@6d\cQYASu`4AGo,TSR:]p6m::<3PH")I/jrco"3U(E7b.1`Wc,,>k^;`*$Ilq9/e6mgb]?<4uH_&B"r.e+=;
%T&-0=Le$'%*i_*qID"@o+n4h.a"TJbp^uSI&]IQq=1AC^LmCfQ2"8K1A9+W%(P71d*7>c8bJuHi7-;C<RTG+ga+GrZ%GWNEF52%X
%;:IWB>?ZIe$]'<T0%,?;1Mjl!o`@l*@]Y['"0R_bFm(&LckER<?K-*d84S%1q'G8:Tc<_[4VUVA'H"bl(jNr@bA=(8g`$@Scm^kd
%YTGT[:"L1I&]J_PfEoboht@4e:i!>r5RF/-$mK3Fi5GMeMmPtUQsiFGmM<XM&?fLImqE?RW-/:)KhgDm*(s8M`s>J8A_jmVg^OUB
%'hGT_1YD7]f@6&4XF+,H..fuh1kK(2<+=AUC^fY)kbf6BRZae"q7r#oKV;"*1bR]"kX#g#qA,&)>qCL8@*/LELoash0T2QKY1,p8
%_(_N"A7[CjpirMR9*"OWk/Dk26WE/)KC?]cdt;XSE>aem@eI,K,;r`#cS@542D$MF37tDa:pHA<@)nA*O6A6N$kS<!PT,?&L'JgZ
%M$uk$Q:DNV%MErdHt"p/+,\dop6B>tFT1rtScL`>Z#HKA1)an#Fb0ai3V%4@6i'r1.i0DoHbKg?J:)I58^hetZm$'G,t]qG0\1n$
%^JeW%(ke\)Nc'm*'(O^LWY>WYj)u2AE-/*iSD^S$OE0_8&5r_"M,baKCP/QXH=?G,[M!>8IPE:)d>&gGVm;%Xr9:^l'HbEO=Mok(
%NJs!-:F'DerC:A:Eh$V[dYJY>&N&k%h82BsI,8p+5s`ZBLY#Z]eNe3"PmTVH@adAo+TTFmdVA$#Bkpp"p39Fp%ODW=@]:a`%oT4j
%G/rpT'Y^Aj2DWuLB7(I;EXm'uVCIg*">Uoban2YAGqH(Y+uNRJ""g_,^5:fcd(Q]N*NlijQVneG%@^oEODIrk0*Y;]-;'Lj+ae>b
%"X^(D)K"_O:c2bLS>I3tNK1/ZjBT\0>CJYV$utR>0IUHD^/Sd4cmr;CF:"eZd<`ZR-ufV^P6E/([2hc5'o39t4=Hk3<M#[(>>6k/
%k`$S3fs.ZF[[Q=Q`tj\)l8pkW^"2ckEcj[d91bO($j=VD,=U)05^8=b"qhW&Xr,WDa;X37cTd?:6VY+#'(J;An'Z8sY!]\^;M)P$
%cug&Uaf>VQkSdUAEGa*`64qtbr^_=7O?BCC!3:O.[P-`\`&'t!:hPUAL7[#EL5NMsPe>bHYHTI[f$]<?\7QEYTV<&E2RSikLQnVK
%[4]T(BZ/e=aOAPC"1lNE?OXCd1f"C-FQLge8QY&O$qk0hC,Vl(@n]i5q;OET'`tTlLnglN[n(`P,28KNS_I,"1+k!GiO.[5_R^-K
%WoCAr"Pjha.>&9^*^O[91Ze$9g.?4!fsb@R/>smaG&"/_%%iCBR$sg%$9E@#(s#HG$E1SF<S=]D6cGq26iuH^/HUZ?i)SBq5;SG#
%GFYO);onSa?5Vk>MZfU0a<Xpu<)!p0a%ZTAB_n;pE[lbYjdm&3$Yj87e`Za;PL1!p75-h[1m?<Sql0]<8*p:bMm4#S1\sael6rsp
%pca.[>\&c:$[U1+5"\M;if=nbK&X+-A8ol4*S(t]&ruhFNC:)U795UOk#<Q.?DYIbksB8Tn4!VI#0=%cM8!Gb1*;=oUe=_YcZ$bL
%:/H[d+gD0=(p79dT8mO05m[g>5db=)RT?@[MYs+^`aK41DX6>3+bg7b?>!BHiHSX#B^BhtA7'T_dd9PNQWn2r3e7F3\'aT^aRZYW
%F[r!s`<91rpLj'q8W?pM5#Pj!LjE%C-oRrBm*3[?"m:c`l'iuU+>O\E5k<6!+)oBM.2j'+fY?sT+F1ulY@6[5=HH/uNT$T[MF9q/
%g:5FqVBuJ5VE$52:$&Ir$iAU:#)a,EeK>&HJOk$CePZe%a4+IqjMPd=7^VJ,T`U.c&J<c?1#F;p[OCE6g"aMl.Dn`=5j0+ILko(U
%#YcZ_/s.Xt=$7Id*@-[ue42&j+:U=7[9Q:!%r*`S8'Cs:1PgTLohcpm*/$,85V6l(kS-G1F42jL7WnBcM!l<fV5/Ma&&0FZU6b2'
%a$9haMe?1N60^Rl;)V(\@_StM?;Z4&La.G"k%qDWL&47&2^_M=JG*6P1`.0:4s9mLG!\ZrVJq<pQU96eNH?gXBiQ+q\%*.sL3p?;
%>moJm`=BMC*c$JtKO0EjhdEVnP8:jS5VtRhi$f7&MXDeGSc[D\7\Q1N7s?,h*#fgJATD*[Mjb#9q2!Ht*Ac]tOV=LRgkM16:`tL5
%kL4L#bs!%6H<B@-_(sK4!5n6j>52?-AFNf"g5Z`AO:YB"7(shBSCL]H@Z6<j7k/Bm6lAmK-RE%X)nRV4P?_XYd3-Rd;,8$2:TeFA
%4'E&?eF4Zk0Vtq-7;M*F@j68pkK0/p0t_I%=YGKYe'Cj2dIuSclH9oD/la-n%YEj$:Onq"kr3QLF?>&3_<.>32L<YABE/*EHCTJf
%@rE,o8C.t5L`BiDR!_</W>`lCf,YYsn?%@XUlL)51_fC[Hln_M$M@$+l6M&imq[8&G!HeKW9]=D+,C1<o9tIB<&$)S]J3r86Qesp
%:,*=lB#MWs/A`OufYN@mKc:$R&@<2(&m`>0k>5>f`<CkW,9XGB^%e'>-kXh`Bbm8B(ZQ@A"1a."S&ba?KRB#c#jN%aV(L"*=Ltu^
%nt4am<!oBVFc?TXihB0GgPFh<U!fAEk$\C$Jl/;HB8(kF[=D(Q)u2%m/2>Y5Q$BAQ\?LM\(m6/I&r8P@/e!!h`"dqOXW,AqTTdZ'
%YmjSVT<Zal]-7B>*lLn?nn6$fj+*5_X7Bb)EV(SPSnQ0/GU^3XQ.ps3oi>%*p`KQ5ju(7@f>UHWe1/IhZnrmFi_)$+[R)h"*V(>(
%e^0eO_cA/$`')VC_+6kh"C3Sd577?6&PlF;<""O^!_AdeJP&(t%;dY'5XZo[Ph@L6eM5(dZ$?\02)H<68.!3.8GZA!#\aR8`71`?
%NYEl;&iLOUm9qnNr_+sOlBjDJ!\5OKiA@>Q*1,[iMtt]XKih'4/f0$"W8)pm"n<?DbC3lXS9>^FU%99X$GOHs`L%-0'tJ:uMO+\N
%d!<qdHOt<>Q%W<G4_YUIbk6V>$tTT$&%f.=,hA^;T=P@Yeqjd((-?4j>1=e&fgH]uVCV5<+kKiO&n_Pa4,U\^5"6W5=:A.ZdE*)(
%OTE=Un<(<e&k%ir8VeouQP/2DnKWSTMi^2b!Z)$g-LX\2X7]/S:qE8'/#e^u&f-5BUJ4V3FH_pJI84h'M8e2VEoJFVe+%;-1h9ob
%#]Z#5,faUk&=KFalL]+@'"PK835M.pI9VL"A&^Me2?,3C'7nY!+t!jlho=%CG\#_`N>=L#f+;!!.1__3^8^1S#Z`G;9[?kh4co`k
%U0q1>mkdJ3+BBU?UsGo5!BD0:cfl%lks.*R#'!uV/CW0+M#L5E,4"=(&(!rt7W#)=DBuW#JQTIK-7.nD_\%G<c.KDL95E.fEZ7LI
%)7!9g-\`=^e9g:JB(7`H_*[<W/G*KL*4]d#mg:=hTKG_P/X\aDplchZZrd^E!.ub0@9=Dn<I%+H2t..uURhi/+IZMf"O8Kt-#'i"
%EU!9q@M]),7L>m5Ymd;QO]&n-;if9eN/h!0ga/ANLG]=^@Qn%"\H)r?KRu2O*@,Go`KZ5g*%W0=)5FHkrfn65\P3W8P*%^Xc_f9!
%e5d\3bC'+e"]u4N#!:,p"O]4a[%4*N!",aE)-G8rYohX!1?-<)dOH,t@@nCj`6)lpGbn[!l`Cu@[O8g;iZUDh)[ELP/S%7;7#R<[
%$L)1U*gmY*9Lf.];\V[?l+dj&I%(]0S8NrE@q?Us'FtcK90f^3@?G!pZB[%fd8Ua;U*mdF+Q^7$>cL)T^hR#!nY/^/Pq5HKaei*4
%D!!,[Ro%,J76\(bid7ZSSJ:G+Tnadi^+VE*XDg4a93L1QG!=!n=t,c$jq_TM$6eYE#uKc/.l%I:bs74$[?dg>AYbOp&Zc]8d?:Wl
%8m87kc1TM:#1>an;;lC<llt,E,)>8\CtoYS`-/kP"A(pCV(HK.<(5d.-Dl\GO-L(,ZO58^B`Y5XAkD?.Aghp+WJ%qH_[\\ZA=Hf'
%Pi=)[\L"Bk;?5+a"Tn.OObDHp,.^5g\!XN:<8r(iYJWa8+dKd<F%V>b"H<6BjFj8OHDHL%kYMPi:_Y)[XV_(,'$Z@$?/j4.j.C57
%V@6]Z,3mi;QI<KeF[OeQP.`HTPAk#c6M5[ofBK_kLIDa0*.uO*`$qjMeQ.As];Z(7VnbkVqo6*hHH?O^Gr:KG!YT:Q[DMnE63]Ug
%)5BhE&4ah7R2kH7"N9ar<@"YHJ5l4Hogu*4$mBRR:q7)YO^:qX'8UH^e1d)\.%4oq:P$lFUpMFa/49/6A.3&jh/";QL4Uq+@gQ#K
%2<QuDe9XacP+b?n&d08#9"^o3%$ldO@P(bo]-:.:Or>GbUgf@Ndgadg;&0@/_Xi0cRd4;.ih@(5#TkjM^a\&@5S[em%V!J$3%1@(
%pLU!g;#2-IN/a#IT0UF@*XH>pgFrpS'd8/]9`\F+&l^DEN9g\j<t3OTOd'tuGnN"=I)DIshC6Ym$FCbO6A9+XrJ\&\)JP42B>F$i
%pN0mF5*YK%dZWc99:+0<Gg`Od3h8]AiUAL/Ke!rmrRM6EP*.-:a#h_'BuUS0$ajWZ/.8)[5b:\A,g#G^M?@88O'e.p"EZ2]%_Y-t
%<0E5s[6uo8OC7s2g,",_!K^Csb\?d2is(>]mN_tV'P]0!iF76)6d^T/hJb'UB3Ya2lR2lMb%kD7kZT7M#rb`lK!/#F,!qoAr]X11
%[%cc="NgqbE$GemeJb]-EHFKsorV3:6A.4%bi,oC1T"]H/m_k9Fe95'3lb-g-%g=6Y+`g$!C!IW`=f<55RskVWj4+;SRmbR$eW"-
%"X8u2l9#d^8*D8YgJO"qXZAke)Hs:?6u[,'*_;1F-WAm&@MRfLEI+hp:n(:![\8SRc=[[rO/gYJ\d<r>Ah]SH=pOBj<0;ngTg@k@
%2CCO]JOi<eTq[pA#t9'(TX:LG#`f>p+^h6<RS8d;ErsdR.\^IL)!1t4<f6k)>u$\=dHOMaOGc:^^(J?W.P1p`l%V$g-uX3mh94.k
%[?Qp?A^/Sq-W6"?BB$:];OJR&<3b;Y#^3IpgKY!0iKTLtodt()T`YLN(Y?nLg89`Z4!6$(!l-jLq+>%r@n@Ep/8LqaV2k1:+9pAQ
%l)9DGgrD(G2L!sK#UZ2Gr8jf:T^22d"0U`Xa9ffIjUa7:0[j.$&\r7+'&Q;/Yp'XNit+&KAA3F%l2fGr6_$!`'1J.lKW-H4d)kkO
%8R+!sRsYC&-r(AR<_!3SLH>U3P1%^$W+%R$"`"NIo0!;`OK!m5(2;fJ[\0Z,q5(-8W9+o<+t].:aI*<P&W3()r>uetK5d3tRncA+
%V]@-U[1.*W3P!TF"6QSh/P#?)?OFXIq=9r4Pi!KI#=B..1nbp7eIK28<JKK@/?#XcX:3ji0nSBI)oSuNq-GN&6_kNp\Wr^7X';`K
%Eptqi?JT_'437K?_J*3,?qK3$YZdj?`E91k<<%S/5e1"]1/q8WljOX::O63KQW#Ig;O&Nu&B*J?.^AP5aI<5i3=V9m)RLp7'$.?*
%[ec_Oj^4bA;]g.g&QT>!W4b<FPWhaN?9"([p70@.\F`_<1o7?BZI1>5PU>8/72&L[%7f_-7D9r$c#N8u8g\1>RbUZ.Kl3i@Pg:,(
%DWNV\lmm`fUW<Om`&kO^^m9f".H)/O0rJ-qeo?Fu#S=`("kAZ6/?#8\Ym"IO;m/%6Lt/_MNK-pm2Kk7C\[nomeUo_I@Ip#UDciXu
%E8)]N^1[T0IJZu:JG;da[tn#b@)2+qbTPi<!2s-i)GS+n[QtKofe8RrJ`1P#4`73j7d^r<P3[[<1D1BM*,0*m>5gRI98%KoFZ0"I
%Obhr+VN^;iq.F,OdLA)oehL5EnJ+[aDkaiKl+mYb=H<V0E4Z4/$E@$\oDrKj^`c5Sns?oB#EIVraOK_PGj/j?4.#SjL<K9)#SsEc
%[Ui9V_$q:hqB?>1e3TOI0[DR;>,&99L![YdV1mi3X=Lkp_@dMW!,Nag):(t0'J?.gNM'_'!T,-Rma3u#K^a!K1g`%(j4/5,DlceC
%WM!]KMUW?``^GAg\QXMH+7,t7$BBG4C6)]Kp.(s/,L7Nn"YP5i9BW5ZL?;B%f[$)3RC7"*l5=)mF($Dq#`hr&pi!s$=RmJ?LFZ9V
%<CX-3_Cl:P#ehk+-rh%G2btf8$'&Oo/A(se]ea]\SDam#\ee#M%&1Og<HK=Yk2VZD(CJ/K_"_4K@Hm+!Lk5,Ob^L`p8U,?I=df@`
%&XMOA5bo2EqNY\>;tFi;<9o),@Ad5@PP<Hn)Gj@CIJ0t]:h8?COgA)kBoL#';0[X-0s3-+r-`[J1=g4K?S^/WTM)XC(s5sT#TiDo
%eH;i7%tlD8@Y_bA.=d_fLR%$*Cfj$!H-3jPQncs^d3T,ZKF&3X7B5303frIh:[l>tm_jg>_RQ7/ki/kSrsWQ5_+*Q,9+'pk"ON]k
%[&P&X=G"UXC7I6%cfbi]bLSREbUftt;WnHa'H=#p`3Y9Jjdg4#?Egrp"P)FDK-T%u+`[jn[Zc.E^87[Wjci#(PTVS*:8&jcWV>I=
%T]P)l/-`sks8R4i9<T\aES[2ds$L]18:WS#b'-H.b)uc,D:f48d#JrK%;<W76XrYhd(f=!*g)k5mj1L5\teSl7qQ:BjGA[+d]=Tm
%;\$I<kB<F2p&G[9+BPTS9c23mLBMJB_[7q<3l=tBO*h,8GO$!*m6sTND%AGOf<BmZC*.RUQpl;ci2&cV(%?HO$KuYR%JF(mmu;He
%8@*o!\9Wbs;?)`ba$+8^BXZ$Z<@u#gVVPZ)kbZ1Hb9OtRd_>lH#`"lh.4DQSjV(56[NUr!lr==`p<&-/U^&@tr)@q9<uEF53"K7)
%iVE'UAhD54oRR-gd@88-DNB2O^R`75=W-_UV]tW1\hDcda@"V8;)a/ra>uJ[_&E1jUk=rF!-WH\0LUd83;(W+'&<s:%ha37;0!DB
%l#'QN*Q"Nlf9mM^QaTd+Gi<qR*0$a=[Z"4cB[FtT"RRbCgT%s"FV2AnQWe_o>COSBM8"N+B_%UP!""sG2nC<G<TrN$8Vf![=59<O
%mL!2]X:6G5+F+#(DKc$i?T$Y1&<2cbA*G<%WV.I&D=q;=1Pk#`b%l+\OFC1t`H4f_96ON!'$BI;@>S8')No4Xb0eiiP^FEXZW]6u
%D!tuS4:L6r$4.Y@jK.?@7D4EAIT4`\6<HC7Q(K^<M>]/S#5b^g\.V[F4'AS<)FCDpke6[OOU)aNKQ%#k:Yu!O3=Cq!1TF8)SesT6
%l>q`Z#<MTk<hAqCJJU$i0m.CTXfY&.&os+XPDG%'Ou9*B[H4)6Q=-S^GbIb>EBWA(i5M'4N8;&G^?/C9(k=tLDgBGNpH3Bp6A%[R
%*mGf0[sc[OZ=lI%(R:;mg89%"V4SoC<lZ@Cf2p%^^eF1R*%IKBVgSX[V%C]Sa!2P3m,?nI!f9VHAUQ`\WW+1&[B8V#]U&%D2J`C[
%0Bb4N_g5)J21I5@%H</@IpHoL:r1/;>hH(iI,==in@UX$2!80DMD0MY'Gbg[6oc841GFm"$3bVT?/TV3]*rGBaT0K4YY(4!+$9k)
%_q+tO3/oE#pFn&6nP_F:lkTjRR@ZDrkZa$=^u9%V-,C*(k$k*rFW"V3pmca<M[!kr9CEbb8q$6L0Vt,>!@J\=OJs&@33o9GhfsY-
%KoO^k8/%!s$:tHc9+R'#S\RdMZr<c0&8P!(r'Gg';i,u--Q-.ni7'm0ds]m^UeR7j.:hV+24%6k/o9a40^CeDn6[qF,c0F>91.0]
%b`u6L4UAou(."^eKRf8S5qU=.+U5iA44$''3_f3i_d4]g>1)jFbR$su`!!K>b^%\Io;oV2Z\CM3SBWngSK5g6,tK]Co5=[&-EGj4
%?f\Ra#[U^Qk[r1%Tk0#MbU3Qb9Q!?ZNu1E;/knR:WlZ?uBa!d=Y.<693/=(F3OSSGX(!4I\/sO<6."I+9))McQCS[LVK/Y#(F#B4
%ea5+Js7j>.MX[;ZcGTE^W3"SG:.X6*b%XmP>3I/UJ!sSe&.d%+ba0Z_f+FY9Jgq1(?`N341XhW[o@s\:-8-172Bk"eh@%[-TQfV=
%/$(4Rb$Q<L_l.E0#_aD/6FL_"GFo)W&o5\m%t%M[7A#1?-?r?'::u.q31'c%9OUY5(51\3>NE^Mfu.+FW>L9P8-N"qfOoR`lhP+-
%64nSA#M"(R`F!uS!@EG9me]A-La)aRoX!#HI]6o<-a7bkB$#.s"'o,c<LQ`&;D/or+L+T,kFgqUPRU5-[Y!8#_7+&Z,_@d^s'b%'
%4"7\PH<FBo6g2r!l";O;KX\`=q"@POXOMmc,-^RkBB/T+(Ok@r[27>ib#&Qg8bQBA_QTjK;;SDRP_ZIn)FPJh[U&<En;d$">eX'7
%Y'jOjDh;0o3BJLq:7Z<q]s,gX#i]op6R0Dj2K,`![<T1MlR=r_qYH:LKuLI.?dBP`<;8.=nOb/as5?,USuNe1=Jmp@^RrB/Q>:OI
%Mb2_o$!4/WF,*_9KV;h.*!uoW*pKi<&.7&&LV"DM2$AB8B.P<-\7(_R?.PdaHR$l4,VbU$:>=S]+ACR0OC!?Xl%ipO02Ht>9Djcf
%k=!:&I/@`9^4&rlQQn,1`)@#C]`>.*F0pX+*4`cs)TF8S5t!'";o&;r7PhA2#dTA+B[79Y"g<jTU_)V+OtWK+X*+I\,f^GE:s1%p
%b)f$nV[kIb@8BXK``O5+fO[V1<-$,rNd]Gpb\,`<-&M8#c3I[()^k@*;B_lD*E`QIIP4`R+N#b+R*%,nUspjY=0]e\90B"g/ifct
%*;h<^H(PG):%o32<hlBse<#!!nh5;hdMk6SSJ4?1AAC..&e*mqMQpN'[f_IhO?*cP=,!_gakbD8jVhiO8Jj/.\78<F7sP#L7P<.(
%Yo9W2P?^,Y?[E^#O&jo$r&QH>R0$u?O="e,JYF:a)(m']PPMh5&gFL6W*Sa0THG9'J?u5?*q-WR**IAC32?-50"3$FCi7L,\/LrD
%0.qAT*gqb7?^B9F'T=4IplK_%h`b8,cMBs9"Z'u?PmTDe10U5pZ%Pf^;_O"qR)KjMaXu/D8o:iC8kV3^A@q:I:W6q23?rP^Z>`&b
%QrLW[6C>(k'bt6_[PLD6W3?E[K?4:?/Ce7Ph+aGjNm#QU)Y0]L.k!V/@47DI7P0(^c#B)$*'eOUgKbQ3!WHLG<2?kiLR5@GE3`r<
%2]@rXX]eEqQJB)cA-j@$nrk?:/Yl18c0Q!RD%#G4kSBRT>][gIQH^Q_/tQJs%j-ZO*0q8%\1o$UgVU"rLF]8Jc!<S1/=J<V0"ML7
%/V73HlErc$Q?_4c,pUE@.6=-=e",Q7CU,()[8"*H]!\>%*DK+/iUU2D'^1QHGe2/UKsWtU,;X;MotQW![%@tll.]jo`6/C1'[mAK
%1XdKU9d<SWOgV9Mj>0q]o/,OQ3W24G8s4*X//>N#2QGX+pHTe6!@lbo.(c\JXG>DeM?lH#kXr?/?K*8NdAsH/<p[7U'Nj\".G9=?
%pi#,jMKcG^qc"tIj`e#)G,)#+YHb'`(Cfm?'^"D-;SEsd:7!uNe3B>-&B(Y)l[YoE27%tRH5j_*QQb2EG1*_>N\Eg/oXCA)8o<p$
%&Iju[KlC;I^oCiE*AM1;n&cnJW8;-p3c_Pt\,tu>C&d7c]ENMPInTF<\tMcP&,T5ihXN$QnBohW2!W=*8jK1b!R1eVm`+YONAaBb
%gM8rUDkLM!6J')&=fpPOEI[')YrE$.WD'9#r]bS2b^u*ABi@V]qGmsE=rYX'jd.*6_N!ST7QH`Z<R?2SjkEj8:a$tooT7]9jUX`"
%`nMWEi2mE1^!?OS:IJIuk+4"QD_@LnQKO"o.[&k,RLBOkh`)<B6HZqM",>fU4qRet%Mu-?Q8>cMp$as%24YQ2?]`;oY4k)9c8Bo0
%-an5Ad<.I0;EBpi<(qh8b]P.jX@CebH39@bh7'QiQp_*\HeDBTM:%-rCtUnS#e^Ap__Q?N4N=q.?/EaE8U;\Z\OBJ6mr'\kAIEb&
%VNBu#\R9\8YoF[P,s``)&<UcPdW9@*OOXhW@#`#<KRO5i+FFmIS7p$fU4qTsDH)"_C7uK3B<cK$>f6KPR-DO?e%ucg.\Cclm.aVm
%+XS9/PS$ER6+L$!aJr6*AL9!ZJkd$`M(F=ndM@KgY[hf^e]$st?kptCHf@o&P-=E*L3K-8^)/E3I8t=4Wd)5b;.6Yqp4H+!KiP_'
%6-,/W+h%Q2lS@O1;*\m:/9?mi1bVM<&Pf9).Ea3$7'9FI_`[Ee(=jem(bj4UHP/Y:g_c`2".KoIIGM6Up()phDKfk&_+rj$,2uY)
%M7LXr`7EJ.eb\X=`_3S9K^7aY)5?0_r^<DO_hYuDLgEdr[Dj\X]02qp^o-bOHsY?o,h8C+lLmQJ!UUr6,`D:p20EXdd1+N6?HMfK
%O>+>#r7m9uO^8#Ei5\jcQ`;;Plrd.t3FbWWc^X2pNBACr9*?-<i8i;*-tBNd"\(::U=YW5A)WDY-ujYN8DD1HMD-=`Gs8*Ck5$@F
%IZ(Uie@U)'bbZ9l<r]P7qcIMII,'Ti5a?3HZQ;Zo'uV7sW>Y]ZiZR="J[GWQW9e#1$5`)=F$"SV,4s7Xi@9_Z0%nSV73WuDAPGT!
%3#1(H=baAf)TJV3U&JOn2`9$4qeVgQ=T:bYP4'#i[,f3bDEJ*hOV##@ZeH%VZ#]$':/`$kW,13p6ZJr%+mXEQ>@P4\ZE&*_niEgi
%`#(Ka>oP^/&F'\q!$P.B>Y8K?JHq&F&.`6m<)Oa=l\2W:#%Q5/I&s3nKuU)Q&7np#T7TF)Q4UUnaPbp!C8U@O&&bpngREGienj[(
%S&5WSM0=:h:@LQrY_I]o%p\]CWBaqeGTMBPfi8LIZD#Eg3\k5C>SE/_jEE4DUj_!4e83L$a#Mj\9e+^+K"uf+c[uGW=8IOGZ<O`E
%]G4gtHsn,81V5%`]JaX:1TTn!Q]V(5+@i&?D(&K3NoL8)3Z4:n^+p3;!g`-chEpeYQ5kTkLTi:E$PIb-80&f`"qjm[C<&,.kX2]*
%$KXTVJn.*P]5$q84Z;%X:a>:2`%/C.LeUDb1:&0_<l[ImY^QlQ]:tT'a&U*-Ad,2b&S3sf;MK)$_\_Y`0B*M!QS^L<kS6QO'EVGZ
%VnN](iH]aJm+%MhPJS[;hbW3V3#U@rl?cr^-"R?J.\SI0=g_QaG?,J>d\DDFYe*+EF&h.)Q`^ORn@8Z:U52P*\N@tJV;Fna68<At
%\V>6'!+&cd>=9InCe!U(]W$]i67d@Z<\Pm$:P?RQXG>)1N]<2i+Cj_)BU0.4/@8q"b7Hs#hGeaal(R&.Q,foo3I[m=)]"#$Gtp=g
%dBloLYOca2^'5k>'Ur"e&'7X1_EX9(GrDUb^S5mCDd#I/^,@(@UJEgYQe]a[asmD&<6,?A<YU@b:EPr)Nj@JgGK2]4K!95/CKEf8
%#&Rbs#b5[:/sQh&Mn0]Yi_C!^&SVnBrfG0WL!'9T['ar+@r*"r2(nKh9T`C=KgUgC9*fPf2K@^WBS`/>jZ"aUj(^%"<BCC/o;$Ou
%-3tj>M"!a98V@h4aX*lgP&%6UQ9;)(X=%g$=Dog]O(K,'F#KbMVMi!SCg<F\@LiW]F)meG`%d^?B5V/F!sgY-RDY!;VSTkB,sfhU
%.@IZLH8aEA4)7W^E&AbHqjkeEjR:<pU:h7i$cXp#bbL8'"\<p]n(*11bHQAmo[Ge%9H;cu=CGC^k!&3XRRuV.<7o8/\5jW-&+=O2
%:u.]Z]:"l;LAaBm4u]*7>1FSE8=!9F5T0oU1.jU(*k0$A3#86KS@1$rAKEJE&1g'T915a4Zs.,,@:Q")0&Etrm5%Zl;gl`N$:<_1
%J^]RUn.:>7pUk&_#i`Ea'e1*TZ83J_1S3#=EI8e+Q!2J+baLNN1jp?"H)oH4"!h$h:1VWlH3_u7K93b4JPL:QMWVr>W#/qV'L5X`
%7.$kDjPZZ!1N'V)@pV!+nF5GD8Hi6#6W+DGbWPIOlU@;+n$;Lkq5,Vo.E8a'UkuoDetRgMmcLX+lVo\)]S9XB.[&cH#('["`/iaB
%Bc<6dSX%?T:TQ[AWu0Dd&IFK2W1V0c=U/`Y.rAi4i>,@E!`hR=[-IQ&E=5+tWZk<8:$J2AT9)0W/qd#qR^J>][n-/k'EXKcD%#kX
%,Uhad'sZl\eIYH6]q[V^`0O=I:FSIT@p#T24!56b#8gf;Js#+\2DFJO4\$?6Lr;ni2JY@+Rk+<i"j`Hum3C:*#:P'm!7KA.a=RO0
%<O;cTklO%_2Q<%Wk+Sq;(f,Dej?D?k?-SVB"M64%aT,Z;7"h$cS_AT%QG+lh(BS[1#g'f/AiJT$'72&a-T:IW@</UXX74+MbQ-F6
%5psU&Sh_d!"u$hj2IN*>)BT.M#.GNl]8ALDcn$M8U7qZT11,(lhYd*@K9@*KLk^Vq[cf,cYVM>"D?h'1KHNjF#i:kHm/#hCKoo;"
%^0IMe:X^eQ(/u,!*f@Mqc5C/(D\HWW&subQ@852_SN)q$Kobn]a?s"mG<tXHh9:XnQ1\>%S`Ir)XRL0fVRBEB/_IrCB-jl%OmR3!
%;/SFhn(a$m;E$d`$COW*>KLd:MRaN7j,\c8j/#`J@"NR73(`t7;F$e?d.u8%j=rb?r:Yu]Ib5FJfPS?<e-s2r)#iI+%\[R&X&^+!
%8siHj`>'aRKN0>0?X0ISXE:7_kPLM1@`^u>e=d%l72VRHD/egF!Z3f6d5ZjKd%b-MX,/[bgiNup^9HiFJWIq?+aFK$#TnAHLB:,F
%$>%Zh4bU;5_CcuI^U?"kRlP*0$rr,+"FLF=<cfe+LPcLc*>?8cS$.V.1il<7lNkC4nRr.YW,Suc!_[@TKPg=d,*?UH?K]!"?EDe2
%P;>LMdaOLE/Yn*X51?29S5LIO\q3u*ADQlGcj]HVWpuJa&[JTE<_8?P35hI8\QPbP$BYce;u$tK)[T/p[?ig3F.1#$.21u<fSnL0
%'SSZYb[?mUmDEo7CB.4Gc`RI0Ym,Eb,Ug0QmtEH02s\HLio[<nIKQJNH;66o%./ZOLcr3->3-B$GR\4C6__9aWj4.:ggnVpG6l66
%&mI0-r1fjtJZrP!dbpn(>PM6.9BFb4X([RTTK+Ym[&]iQ.oHQoR6VAl)H8#tC@3o5n2tHC=!^"-RHShh\h,1:6q=h(3rV<>orHpK
%&0B;Y-9_(e500U:llWMa#6:C7k*'@WAbeSXp'A<HTL;A2U^B?WL:IN!!DZ#d9j]MJOB\YkE$E;WX+WB;QO`Sr;ZX'``gQ'#M7mX)
%o3[4@%"AN1XNEQh.%rYU^+5Lr88-`;B9Jqj(="FTSDk3\[3R+/2F68u2jq7q?SU@%'KX=@+nA*BTqg$Oq/@T8,:cbbhB#>2_QV"S
%>f(EOX]/4m0`F@il!jnW^ms/,c=[F7Rm5Kn.3)Ct_^VZ:Mn<8(R=`m0CQ&S/=K^@_R(d!,&F>8o$23a9SG@iPaRr$sGqQ@`]G=e+
%[14>dWh_DeT@ene0%:d+NTffqX>W1;jT0,ZEmn\I3r3[F!hu&"=d3SF@AjsFO"OR;Y;_?M0Wf05$LM?B8#!0e>i`/A06Q-'/iNnl
%E-paB6f$F1J>84=VAJRHbbBk@dDqCGN\SMA(5'bqUm8m2KobnQM\,)niOi,Bne@t**%hi=F,S$Hh3FiQG'=9$#))&#Gi:+FWhEaX
%pb'Qt?`-aj'am+NR<u%c*_@#8^-P_`'FkuW9.&5QOT0^2:A7E&$,MbQ>KL8(j1;'^33X"e`)Mm;CIGL$FCcpo:.`hN&lt`X-";i8
%e;7&N6NW%l$uejqefmY8jBrRD6b_BL'tg%]Mfp2FTu1Z-.3?K^ofO(mRiH:D:.FjrgRsKH.NNRfF^4HsK.\mc?3@$#[hdPKNag&?
%[H-_Z"\\XX1BS5DUFD\kBfIZ^41?p?qcS[cVggT@$mFeuTal%O>i7R[!>r.%6SY?BF->1HebV!49]FqI[A./=FX9[\c!1NCduFq,
%lIKXkdm9_f7ACe7g6$X:'#He+\kL3WQc##3K:A5mdYtA;XfUfg%Q,/]p)pF7&f$>[Hs9&22F(JK<<VkmgmJ4"0B\V[DNc.7KbIi/
%Oe;auBHNG@&[0"l;%O4O4?u:oR]q`[h-?-7_aB6/o'P#*,k)'*,U+Nc:>8'#Y"s.aZ-Gm$\T+LV3QZJs$%]Y>)Blr-Pq@F\p6h(H
%q=]+f8d,"i&>B51/SFQ.A8!C`1cPk4,9^JT!@gNC"d7-cfYaN8+67IJq:n]\I<YLWba6:QD#G>/0^s'af<[;iB*qL+L1JLC#=!ls
%rP\iaorlGAl1pE8jbr`"En*NUTnhF]PPDXeB4$j]hk>74cPdhBkTCE;+Q.\o7I_VY.?:up:aLc=;hKO6'._4;pc(c^O-;s9d3Lc=
%_Pnmfc1b.m(4#CK^E,^8/>!,Q!H04hHD)Yp*BkqnaeWa;2uKn\dAko0T_'J@FZN=cj7W/@(,>1!@C!P)<k!,WC+M@>BD)g+6=F.`
%4[f+)R2II;#auX\LP)!GfWN/"S2ZM?lg.G<XS=>nIU7^CQ?gJDa?dO328Wklj%Z`>m1[NN2!N*N=<$.>.TW1:F$0cE>_s?S0p1fr
%R-Ps&:JjlocAF$#7:h(:71I9S1@fhA4&;sM-_R0HR7%o.X;UZV.#Y)(Wco7:m\dqf;Kq,!M#$MUZGK]ughS<BArG*r[uVHUbHqZP
%a9IqKck=!-Tba4JECcea1O7Jp+ebD(/7@=:,^ha1OR3$5NOYl@/Qug%X3];8H'MSMm5q!c8+X'ZLK7:FnlreD<CTdICMNCF*Z>["
%0]Vo<nILl[7X'"b_b2;ShHH7#;B]0Fl5rV86iZP[p#sOV<#*A,IBV*2^2D]:P-L=7VmQ$#l^<a;ChoHJKC>Grr^b5[9JM0k)dkOu
%)1j)k"\8E!j"U889?e=,oYtha`g7`)Tb=GQX@p"4*c;_220g.LC_#rtDIF$K=6RChIKq23@(RZdf:$(ThF*Eea$#H`:gYHEo,c+A
%[fT]npB3kaQ]dsCF96d/N.$+0=JRS$P41U%`bqRT6Gb(Y-E7cgBQTKY+>^':8KLgCK]hW(Zl,JCd0$s0977-:'_7H\a[XYn8Q:VT
%C$a_3X14t<Ep0%`quNi(;@\1AefIC40VH3<4ginGJ>A;TVDa5)robXA(H^f4Ishu7KK<ne("HU(YQ\MS0qnN2q'XhrIl50P-sQhm
%Ijj!<HtarD68I2B%nc+"1+6N6@1%`S"gt;6(q+kR`X'C!9)hZ'a'sD1W4^d8$,?d6cK4e!GYVHMWhrRG3,p9rkt?iaPgN-0Xl"Al
%*2n!KI2>W0"A1O]2k,dK>[gDaV1oR;SRdk&K,9JP0"1JQLn"N6S4uRAp5^s>p5tjU!Hiqj"7s#P(t3^S<qG5:%`.=6As!Cg(VZ3V
%S(:1]MoLJ\2rVt@AP$-hc"CcNd#bK0-q>bTQB@=fT`1X<O(F!3IJI,kDJ#3^+sJd0RPo-)d,hi(QF@&G0A$_$fM^HZ1/2KC7C(2Q
%@uT,(!9:Xqh[QTR3OE4Q82IW0=t=X$pIb2*;sPb53KJJ;X6oB2eKs9*)$q'S+_oon+s>3u[DFn,E8tDM+G0?\%Q)op.4;W"h*tj/
%b7am>Z3KJ)<s9P_SX:"F%7!]a3"76VE+:<H%@Th6S]:S\\L%"kdTQsIYKN%!QL=?Fm*!7ujRGLrORg=m)34eaQV*n?k%+01Il9!V
%4)*RIZf\i'N!&m4O?1R`iu4sM.BCe^&j?N7A9WD"9LuB*aW=6O;i`_[Np%euF0ubH=4XtuoD_1VUd]Y7Pn$4l"QBGf^aKs4_-NM(
%`LI/S3lWSpW0F.4-&*=KL<,OrQrTYP.f68na$k`'8*l7!HsS<_f;c8a'j=7>O?Jkp:^)qKRN@g3B?W-A4HGR9K=N,'I[Y-&cEK-n
%78eA>pD*rR+N[_%pAB0_V;tn=0RBNb+eF62#kPoF:Du>rHb='0.2)fBK2C:0g7SLg[WY8*LMre:9(*nD4.,Wq>)cR&O0r^Gn:PM]
%/1b42OVrusp_dTS,r*\EgCOEi,8T''k%V?NaQ`pX$2^V%]+Mq/o"5.d7P[+eGM(OM8/8A!9Wjpep?LA<H`f<'e$=\D\dUm8ML[<m
%%a!CT"P/^-TGlCfP3r>lUZ<%#[X8+/_6\AU7Si.WYEahDU$+NiKNUQdJhUJ`"DG(NM+?&[V!toELYGaW-H%aU?Jp8[7.pu]18M&C
%'AtPgP8u"7p#^t#^cEPi\Y.coQ_MD>CPi#d(nDeq-IQAVh$&uT%MGM#XT$#T2#*p'J1,^uF3iQ5mb65#7?ag>fU!bg;ACt.VQ-p"
%kc;B)onc[gG8%?Kg$pHuqIC3obl#^r+Ws8'[#Ku%$I3_q\WE'uK;J2=&pQt)5$9%8363k@)dPk?p\c7?qH266Qg4Z@@\dJUH/iEV
%$fue'WuB#&JQI%l12kV0/BtVVUQ8M.U42F6)H;$q'c%o`Js-m*1:&r3A=1A`_+Gl.:@dVLgDA`[J"cU!"VFL06iulAolFOf(W"YZ
%$+h+U5bc,DbXtK2Rpn+c&$,oENS.NH7l;8M<!BE*#p1C&$&:E!7s&+(bts;H)#'3U-J>nS.[Th73E62C"@j+<'cpfB1g)Dq"^MVW
%n98/D/[=qd&tlOtN0cC*5RrXk`]p9g0oDZ%-dMNbpYN66>jUSEIt#W\mWR9M-F47VXtR3Z>!gfchWhqQ'G,9n,ddW+(TFtN[YcGc
%=a.&6K[<BMU!RIPgi>^/<FugMC4f%M!HC*<2]3_j%"h?\)Mmh`Y%;&/EVk<NI&5Al#mK]')do'LEZ^sfgT>lp8TS)kf9pF_Z!%^:
%-elM&jg^_uP1Yk`gHlV:U1`Rai)*(6Ms]S:Vc:Wmr`hLk?"1!`djSkkm=W"^4BI6Lb<p_iB@.P9;[.V:JffRnS>"D[)7"b'/n:J(
%a9IIVo7>1pB#oQ"M4CFd<g:fB._[ufOK4`V(15^okt[CO!uQc?S"<"ehlYn>,riqd$`fJS^dOp$]$hn>PAj$2P0'_Q;l5(DARKu$
%l>E]6Ji\]u#rr6dB=j$3OB]"t@gd5(?kj`tg9<A%I[Jki%]Fu'%ct[X^!?/:pd``/7"CeQoY==Hnj_oFoB\_&OaJ/;kWudO*Q!:g
%Ap1eS:k77310^*M!Vm;8VXbIHQWH:(OsmRh82l>@@j3LUM;ae68g$3@Aq/cA'Fo.QD\qc'e=ic,d4>=N?u@?=/m6d\#5f%,"+gHU
%?K^u<Oej7',-jj?QP645@Ob6>cW753Dau\$[S%Bbqoi0Q6kA2f*J6&4h_b`,71H:ik!N%&OFRH13O>Bf6lq%0:GOo*Ce0%GZ8!mn
%%2a8[l(]NafPc'D2SR3]@?N,)Ed/dYRXpZAc[&.W_lcb#a(7WJ3,d?IW#4$@!`+d)HSkP.+Z^N<Y]q!t$J(_W$R,u%P$g_'(7#5S
%a@S1/\YI[)V,NI((EC9+W4'<cVIBef8=<_Ho!r`.<MV:Za)_>-Oc8:[9hY#W7YEclF9=9I3/4jeSgYt!AP!AiZ\5eJ#U+31$q@%N
%k<e5M5UC2;0aG/ha?^u'p(c%r8'^WZH0L^hi^DOL=c"N'i6_gn"?`q@,G%GpE<jMkok3R?fh+1+Nt:#$eT.m"7b5AZ<Ws+I_W0#3
%jGo9o`(PlC?Of@$]?IIbRb3NCIG%:s,h>;<DbHC&/J3ToQ/l)u)):)0n^bpK72eM>(L<0;%$r"&!)>tLN%pN_\L:$_r0kp(lfL-?
%ZDSUJE1l78T]^/JHS*j/)US>+ePsaWmXl6p]mh#GgT)E7KlA$4JGJ%j,YKZ.@/UQ=10qmDM2):K7@"HjE$jJ*LHDepXI2bp]jQYs
%ROfYA-`3n6]5')$aa\s#.@Ml3+U8&hL57H6,F>\6lr@i[F"'$[@<-pN_sf+l6_t@k]NLD51moRWb*VI:lH;]+6a@/#LmA>O3)@tj
%E4.bGaH=!'qe*gD_pj\*NZp9Vb[fo<R8,HV"eH=XG?t*Kgq<(C^G#mElXX.0%bBXK`/A!Qg\\9e!oJF,>@clWk?Z@P?*AC5THj9_
%&H]ff?ii!q0K\_@H(_X-iMs7f%LC(S?DgG:XNVu*iVC$RpI[^1/uPc[P]sVpm0E7PNZ4mW#Z2ji)Z>*jQV3,1YL+?_kE1`]Obr;m
%DJ[BPo;ZD!OZVg*MV>]j<V*f\'WY,00pP*<1BmLf,[@R$34XQ2IP&^,#BSB)`]9?bk':3d)E(&%Gq4h#!(bfh4>H-)b:Q1-Fem'Y
%,)+tG]@0d(.!h<1+)$]j(KL'I*6>(2aA#'$)W87S_2u)X./=Fo"QlFb&bdTsG<W5J,.fLl@q93L$1=eqF]`n]>IKS%G4:&tnVKV*
%P`V":ZoB&DEdXBSTV'C`N=gRuYVGYEZBuWgBs?'51_!sHib/tlWMWBj#oT"Z0@%FjckqAm1Q"2p=G2qEbE\D`2XsRmeBtbM;9GKT
%[hGUI!\[t\AeI0chr/As<AG4T]p"bC^Ho9]=Og@l'Y.n@=*Pe)!4T5i=YA=;#DqKaHkEqTbs0+4(a5=C4kQ'&I2gLIlS:eN`g/\)
%rfG03SRJ&1!59Oq?h;d&5m,Tb*4A?oY6a$,51">m3G>'K<3bsNrP73YC/"UtI,UB]l>%OV.d7T)<pZWAKMIgojf,7,`_G9u(,%T:
%*)WRVY+el9,#=tj^P6tZbEUe(845jd8t!6*_3upZ8Zr!D-G^=TknJ3V^9"kNZu/;NU8F(n4tpjM&6aqi"06i:(RRMm*pKLV.Qm9!
%54j_p7!e?rHQ9&/#i;PaW*rO+aO\cog><Da[so00FAi8khO`7nr,mfp;"G/`5;7>g,<YN(=<iV_k$.(79O/j5_WC@/=b6`!M2jn+
%Akf?A$il.!@#alm[tLNI`KG:IFpZp=XdGe[\te\<TKChiT*h.@<#%m"Wt`\!DPC:dFM.JYK7beW`tS'(kTI)on[,>bg7aTj'mL$p
%So?(JKO$sT+WndQ9H^CpGN6@hqn"Lo22b[sc!o<k#tJRV8<EnCI]8/@lK+&8pJfIE%$j_Kl&*b'dNu."M^NROL=mGfDn1M&8`TtH
%&Ei]$7,[&`d3cs]EP,7CZ[s.Q@]3K^MEn.=rGq+4AM*dL-%-V<AGfsK2pt425D2Qr6@KS-7$Gsb1'Ak=\Yapd1YoA)^?@C#^^dVQ
%*UL(8k[HiEj=nP&@4!FIf@SX.`7OX%`3f[ZKA&dS,Z\>l]BccWiDA<eQ1Q1p,-)lYfSsbmKWDtBN/$6>M\LHVj?['fIb-^7r0$m8
%E&=^uFQSouYa>ZC83EdC=Y.50q28I"U+neJ"l4'b=ZGA?j2Jg4%4F^,A#6/)3#<Oi?;SKf)t_kV2Ah5o'6qn6`)nn[=$<+1a"\i/
%IU<ks_ctZ59HkRGbMmtdb"Y9RRN[0CqS7=<krdIMT3+fi(turk+EbWR^e<XrO,A8;@:8]n0m;:0/\K_\XKXLbM@nRX308*4QFa3:
%'f"@sRKT=]Un1:IaAf%[/j&Gk1:$MjfHWU&DhsNdM);Q&:oV,54<tnc6sXCf010l3PC(U/!:ggR,r1;cg2:@u.O>W9=R"8Q,d+Ld
%Cj3kF,ki@DTbm8%H6b7g]st<PEh*aF59u")hSQ#ZF5BJ3JYlBK5-QA<jrbg8rS_EVopDVnG7Uob*.HOeVPAaDNj:;'RE^?"IY<YE
%'s`rAG+gI5&pF5eNf,SOJp3=KJ0P9\E6,q#j+<\:Nm=o`QeF_(1q`TX?9BKG$b^=W$aUYillfQ;V0Y+?Q2]m?L7UjOO`M;:-+/s3
%I`g%5J\Gn>'O[.sq#p[SAJ-h"@JLQN5.fU*Pse>_ms$:d%::a3Pq3S,^Q,I(82.WoouPc'Or^OnLh3kL)8V*>80Z`Crk9+."2>Pn
%VBXrDbg)6,@LeeGG$L=RH+]\H8VU-7Aafm)XXq%Yp/3G^\VK^a/q7uQ9g"#%Tgj!2(mVhf^OuuKKP.C?/F=!n%f@j!DPQgBFn#ls
%d6kh#\dsn3rU_iiFfQsLR]h^jS62)YQfc=o.^<I.Nq]h`n9jTt0hs5rlnBPDSIC-GXSoYFWp;N\27rpZZs(tsc(<r1F^;-/KYYIs
%b:2C4#e!_R0Z5O(1OiJh*Z0XdQ`[DE@6g:<lh&rPc3cP-EdunX5Dp;!Tt&9O2KZda<aGNWJhD"Yh5U"j!77[@DX`7g/'@VBi!!O.
%6r"MBTj4"2jRa+?eIgjB05s+rrPU[W[pA/V^^F,"oi@[B"nGmbL^Uh&6_#YKi5KX]ircq2XomS>"mBC#_`7cO6Llha>8Z;;\6VP1
%cjMsu"EPr:_7\tn*U![-g>O;/p]@)/,PDFN@.U)"&,62pb[_.m>[i]W$"'d-hj;=S/GN]!iX&tna^4JU;MYKa/A4%EN29hg^fWX3
%pu8uI*bH@8<(>n8JX=aA"XKf['R1eRqh\SY$D;rPfEI<:A2Q2e_*#'_Y]bO5FA7[oK6_4pMjI=#.WGmi!FDF\^%Xn8'NUKA"F)Z-
%(ed`l!m0'LrYB`5\s"T[Gd5D^:[eE+AOoY(^^DcP'>%@u;gB\Da9D#gg4<K;GBS6S(W2@#7P9qAIil`8P1[*td2$aW>EfL!F9,U,
%2N8*.3"3ZY/i`>tjQ"G-hnG`kjU0<0J1`\-3A'`0.Dl3?6=ipY@]@np/sbc+G4AEq&"f88?0/F.h[e\_/stu?C]hU.\CbJl%d\eH
%T_DGFG/<gA4S&b1kTlr9.':8m7abCk']=ZH`k?:iK&`u5eI>iH)'HJe_]"K4_0p7k@RaYQ$!s98J(/pt(Du:3dfEb`F'h/I$^@.]
%n([%02)!bjH4c=<%PM7`(F'^[68)/#1hM01(O.Y<4T`=4bGUX9oO8"^k_WVR,fjc-cjLCJ-kp?"@L_T/?cZo?o;_"`*U(J2`=orC
%A=!D2TK]0!TGOo]\N\@JC)="_d>L@BKjK.+e'eAn[ksM2&+nim)SNr0Ls.d($`6ItA4*+.r!5'S#C=4F'tTlc?78Aubm/P\H4\-(
%#[T2KW4Y?i'&*[6i!%:885?D)M`JFO/F[,[QKA3S9Z3;s?/Pn9Jn3+6]O6$CQ(Qt<WX+G`/b"Ai2Q\%Y`KhM%`>/Z&JQkiME=0@o
%'5&4Zn,b8?*3oPtnEQk#"2%GF7sT\&(l4dS7P?`',:K!%5/`:aXJ%j2e*JXT@a3j<?EC,4i5JTL"^Wa^3PgWM>RS2('[YdW7m0!E
%0g^o]EBap&((.^I@g5Q'KjLuO?6d#.$RIr\(5Q;Da6TU:iCT%i*+QD^H9pGHK,NkVZc84VBNS^SpjlbU16a)1$bbKl@ob.S(MMkY
%@-^'28D]O+JR3lUUDT"-H3*l&g$^;7JPri&nc<*J,DdS/"^c)f@>MBHi!\=tZt9][^_=goFi"s$7&iVi(O5c:FC2j#CfY;GZ/?!F
%=S+9i#,B,GCh2P0$k'f-cjp?pF\t)G:r!ll]bsX^N""lQm]>pdRPOTo%/b]l6`T5W?q@gtg'G]lImu+UWp.D4he##7+H/[$$j.+i
%h\sBTQr*-g#DU&.5GD'a_gmD_IXto]@n`QhL,&1Yol:3G@19#N-q32(j_r4Z/Ir\Ng^KP@[#&9HV31E?JP[?X["/YJ;,2Ur0*CUd
%*!_Q+/JVZ9!#a.LiBmWs%'^Q&#EZd=YIcoJ%(J.Tmg^Im:0>gIP-H;<Pd,pnAaiGGSI@%OXA&]Q:+V%cYUeL^AT06QZEXgehq]>U
%L5)C_NFf2b=s1dm:,\D(dZ):9bu@2aA8k;er;\U;Q?KYFA@RM)DBM<j?@=qd%*m9.5S`H'(DCp'anVghT0X@9MK^sAblRGYRJild
%;ds37NUB.Ro8E6[9@C`dNgJHdQ9^W*/hnd=U49V&Qp-Yi=h;F]!R1j'HBi;.OpjVN%GW+m<!9K#!K0Yr/0KR*HTmC1@N]%b0(k'P
%JB0[%X`@bQRe50k46<IXcB%.nCqd=;[89o)N0/AXK[c>cSmRkraH$![+<b!djVk/tpL?=p&=M-hJ<6Ot[AZqPJENEWan*QF9t)!.
%Z;fC:\b:"I(_m\I;-H2jXGB(U''H;R2K,Pi(<XXlhG@>q7Ra^f`%Ks^k@3iuV#!l1eS/@0bj)YVRB7OSGK'^&`#&U_+JjbA5OfLG
%MIMb<^<BkjGc*$7J$gWB"1.Qr5]isENQGo7,XYO/ab@`>iac#X$(baoq8YD*4riLR$dO#D:M#gh*0Qd]\2Q"73tePqS:K?B2[fV4
%0&h#$/AH7EWfaXP`&KBoim-PMai[3E=F:`i#2#4a7J*n!3/&CFhHqAAXK<S-Qcl<q@r8/X]><8g!)h)i_lFNCS#4ohBRMoRL[GEB
%*&H'9e%P8q`2jcP__OUoAL:DA&h%01(%V!MKYP-iOL-[QgcZ6LZ8Z!f%HRn;G'bVb-D;j\^*Blm.pG,$8Fcl#-.GqRYfqAo$JS5:
%e6347MqD"%k,p#s5H$;IEYG$k;c@1[R'4SY=ceHnMoi&>7(*5Jn-O7EH#dJ[LEt>;k6B([GKT7UI$F?P"AKsp8\N=??gZ4'@d]=7
%nN;JmW7Oo*NE[\N-1]#-&8p4B@oJE<c3c<^ZSqNt.\\1'+H.<KGrmt,2iH+`A$n8UB/b5RXEK9F6iubd=*dG/]\;[/a*CfhB*@(k
%Ro*-"7-]`4.7=L(S/Web2j%S3G7lm<'gTLg5\R1MNHm3kAk?nJ/snTlO;L+Pmjstq#1Wo*lhlu-L$oiNH([L/,jdI6EN5R,[Lk5S
%f1Ug>$h\^/nP]'4Daijl[Nt[\8.qe7UtJN'2DGp_nf\$GTm!)a&;4KY!L1"8^.oMSqG0^hi%[%obLtW\lM/MRAQ[m7BKo$a!+Kr[
%cD3U<.So!hJhs;dS8c)9P;n*.]Tu&D97H/1@[!J;6!T\Q3CjHS->r*K5AR=-&XL2l.pX,QcsK]+n^T]Q8Ie;L>!+`Ar2t%L=_`cs
%>$%qc]f;@S"j-?Z1ZAB@q`%u$(lcnZetJMe)#Tr"lWi&?\#)qFpQJm\Z-5U^Ih_#)B8n@]QTlBI=2#c"#XD<]E,>MXQH>GtpMa)u
%TUZf2Xtce!GK6CtF>?,K"m@#s<XOYO"Ha'V9@-u0`:br1b.Z;_("9-]mGrq2b^+#aM9OV/)7T)!]W@OT0Td8"X)liKMV*h'";hf8
%4;Y.T2!e)2oZNW_+i`Qo?^u.B4F>._?tmCp#%e",qG.4+-+<kTs)8:d_"R.0?6e#D[\_]*Nb&1(pK$5E#te)C#orPk])n]%@5jB'
%M>Z',Esu^U1PV9PQ3+D"qjh27,YEtQij3FcHu]<>%<N'.HeSW3Q?<J:</(12IZ$hM),%nO:[OAd43eTW2-T.EKUcS<g$ji\C!pTE
%>1@'nRiEsjY3cqaFUWF<Q("haLRV;re$gpnC;Wb/,@*ObJ&]ZMlXC0MaEAnkb<QkAVf,"hmAe+c'>8Uke/"54RHn#]d7[J<PsP*.
%,aj#6:RsFpj'5lYiH$WO'WH@NEc*p2f[]&H[pj0CiDn9IZa*(9ORnM*TFSch*?Na1,@Ye\+51=00n#nK9O>oEL)JF-9.cp3IOoOn
%`FU`sV-^Z(AqO8G%j.]G(iE8&(r8H[1EEoV-$khE>nRC(rNG0^o<bqO!(ZCM*[8K"?Q[/:bD5+cJq@aAPe$]UoX*j[/jVjS%rm6,
%:Z-1MFIR.J.!l\lfVM%tY0,41`,I*2nq8K.rs&LVqn#bdL[>S&,J(!Hd[JI_96-EiO<If\Z@"A]Pn6^)oK8OX7/j3I`+T4l?8FjV
%\4`Jh%\r6Sq$0,$T6J#m226+#kfWXTOS/DnnJBB1qA!FDBlUWu*3cGZ,2*JFcmYR>TFS*(a\@,SlRhX7Q^$WP)1')UK]us&(qt(H
%_[d.cHCXuR/t!ECKu>g;NYNUu\ei7"U,:@aCdE_L#'E+l7k-bsbGW%JXq'dSrRJt6#)U!Spr"J`?1Qh&AKEG[._3SdM$-/V\Md,&
%H8h-SB#dnB+"'oAbRLsA&t6D/G)>,[[cg,I>^*[nGj^.f\(ulP+"FeD/]4TSpXa_PWdI^qQ!S_RO@>\aDK%9c9X,iBjHQ9MS>0rE
%=pQRL=']i6=bb-V5Po#9TsRnXkEVVk$+XV6o!5L/;;IC2aftu8%)a8jH+9%LG+=es+5!*1^fCNf#rPm/Gtb&,N8)9-A1?:U(_Wm&
%;H`^)eMYPVCJL>/k$E(Q@-p+SU>J_;@7nj#X4bn$F6ZiVoUS0n4WTcag>]"N=@,N*f]%f:\.sAm%T'M(P<BL7kDID])Z_#Akr'%o
%(M*_9ng51;k"0)jFpER;DKTNk^b&*Be8t=T\Kg[93#n<_b=Q8Tn-$HNV\N<#(T6P!k2a32(Y_BGK."a+f%uKk'L;rp8H[-M;=_l/
%GK0JG90D0.G$()^%]718MIDe*'Vnn;@[IM68;mq],MAM'g6MKqirk)G!3PI]^_(qCI=EVl*?TqaD./<S?Srrt[Ha4JF?(0T:+d8A
%R8`41"[Nl*VLWM[[f/qXq,X-UFV.^[SB8Tbo8ks,SJ<pLEpH0"X-`5`YDX9V8"_HD=242kGU_I)2la$r^8Bd1.;NuG?[%uAL7'8c
%BS:7VZT4:J:BP3cLP:cOEEP"H)GJUjO7__u@a[!uZ]^B$;lt\4WO]t8q/KS^OPoFhrq]^2q<dY9n,N4HJ,B*&J,Jr^hu0)Ls7k%b
%rqJ9<=SDT`\7+eY0*Ct1V.-Y.?`s^Lrq#eiJ,QF_iPf0PhgYCtoBRI4s3JIYjY-Z+a1&h]nP;CLpre/7q0U9`jhH6B?bcK907X!j
%=9&8Bofmj"S)=55^4-*nr:Nj8qrL'$_LK@Ni-5)7s7r"2s(cQLS,`$=++F'Y^\mlIDg9Smr;"D5pX>HNJ,]7>J,/Uf5Q0Kk5CN@F
%00fF207Wi[V_<Q!hgbKH8FWDIKAZUhTE"e<rUmAn5?Ha=56~>
%AI9_PrivateDataEnd
